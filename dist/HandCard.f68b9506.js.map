{"version":3,"sources":["src/helpers/config.js","src/helpers/classes/cards/HandCard.js"],"names":["gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","HandCard","scene","x","y","sprite","frame","add","existing","cardInHand","visible","setInteractive","input","setDraggable","setOrigin","displayWidth","displayHeight","Phaser","GameObjects","Sprite"],"mappings":";;;;;;ACAA,ADAO,IAAMA,WAAW,GAAG;ACAgB,EDCvCC,IAAI,EAAE,CAAC;ACDgC,EDEvCC,UAAU,EAAE,CAAC;ACF0B,EDGvCC,SAAS,EAAE,GAAG;ACHyB,EDIvCC,UAAU,EAAE,GAAG;ACJwB,EDKvCC,YAAY,EAAE,GAAG;ACLsB,EDMvCC,SAAS,EAAE,CAAC;ACN2B,EDOvCC,WAAW,EAAE;ACP0B,ADQ3C,CAAC;ACR0C,ADQ1C;ACR0C,ADUpC,IAAMC,kBAAkB,GAAG;ACVS,EDWvCC,SAAS,EAAE,GAAG;ACXyB,EDYvCC,UAAU,EAAE;ACZ2B,ADa3C,CAAC;ACb0C,ADa1C,ICXoBC,QAAQ;EAAA;EAAA;EACzB,kBAAYC,KAAK,EAAEC,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,KAAK,EAAE;IAAA;IAAA;IACpC,0BAAMJ,KAAK,EAAEC,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,KAAK;IAChCJ,KAAK,CAACK,GAAG,CAACC,QAAQ,+BAAM;IACxB,MAAKC,UAAU,CAACP,KAAK,CAAC;IAAC;EAC3B;EAAC;IAAA;IAAA,OAED,oBAAWA,KAAK,EAAE;MACd,IAAI,CAACQ,OAAO,GAAG,CAAC,IAAI,CAACA,OAAO;MAC5B,IAAI,CAACC,cAAc,EAAE;MACrBT,KAAK,CAACU,KAAK,CAACC,YAAY,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;;MAEtB;MACA,IAAI,CAACC,YAAY,GAAGzB,mBAAW,CAACG,SAAS,GAAG,CAAC;MAC7C,IAAI,CAACuB,aAAa,GAAG1B,mBAAW,CAACI,UAAU,GAAG,CAAC;IACnD;EAAC;EAAA;AAAA,EAhBiCuB,MAAM,CAACC,WAAW,CAACC,MAAM;AAAA","file":"HandCard.f68b9506.js","sourceRoot":"..","sourcesContent":["export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 260,\r\n    cardHeight: 410,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\n","import { gameOptions } from \"../../config\";\r\n\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth / 2;\r\n        this.displayHeight = gameOptions.cardHeight / 2 ;\r\n    }\r\n}"]}