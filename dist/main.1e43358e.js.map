{"version":3,"sources":["src/CST.js","src/scenes/MenuScene.js","src/scenes/OptionsScene.js","src/scenes/CreditsScene.js","src/helpers/classes/button.js","src/helpers/config.js","src/helpers/classes/zone.js","src/helpers/classes/healthBar.js","src/helpers/classes/player.js","src/helpers/classes/enemy.js","src/helpers/classes/cards/handCard.js","src/helpers/classes/cards/toolTip.js","src/helpers/classes/cards/damageCard.js","src/helpers/classes/cards/comboCard.js","src/helpers/classes/cards/reloadCard.js","src/helpers/classes/cards/healingCard.js","src/scenes/BattleScene.js","src/helpers/classes/shuffle.js","src/helpers/classes/door.js","src/helpers/classes/room.js","src/helpers/classes/map.js","src/scenes/MapScene.js","src/scenes/LoadScene.js","src/scenes/BattleLoadScene.js","src/scenes/DiscardPileScene.js","src/main.js","../../../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["CST","SCENES","LOAD","MENU","OPTIONS","CREDITS","BATTLE_LOAD","BATTLE","MAP","DISCARD_PILE","MenuScene","key","add","image","game","renderer","width","height","setSize","setDepth","text","fontFamily","fill","fontSize","setOrigin","startButton","profileButton","optionsButton","creditsButton","battleButton","mapButton","arrowSprite","sprite","setVisible","isMusicPlaying","sound","pauseOnBlur","play","loop","setInteractive","on","x","y","console","log","scene","start","Phaser","Scene","OptionsScene","disableMusicButton","backButton","musicEnabled","stopAll","CreditsScene","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","useHandCursor","existing","fontColour","color","newX","newY","GameObjects","Text","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","Zone","setRectangleDropZone","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","input","hitArea","HealthBar","maxHealth","health","bar","Graphics","show_health","fillStyle","fillRect","percentage","Player","frame","maxActionPoints","actionPoints","handArray","deckArray","deckTrackerArray","graveYardArray","spriteType","keepCards","keepCardsLimit","player","disableDragOnCards","cards","pointer","includes","splice","indexOf","clearTint","length","push","setTint","indexList","index","setActive","shuffle","deckSetUp","arrangeCardsInCenter","enableDragOnCards","amountOfCards","i","lastCard","pop","drawCard","cardInHand","draggable","config","j","destroy","cardBack","displayWidth","displayHeight","Math","floor","random","card","shift","Sprite","Enemy","setScale","getRandomHealth","heartText","setEnemyCoordinates","enemySpawn","min","max","visible","HandCard","name","cost","cardType","effect","setDraggable","Tooltip","wordWrap","DamageCard","tooltip","getLabel","target","once","setHealth","getHealth","damage","setText","enabled","ComboCard","ReloadCard","sideEffects","heartext","setActionPoints","amount","HealingCard","BattleScene","data","load","spritesheet","frameWidth","frameHeight","gameWidth","gameHeight","hud_bg","tileSprite","card_bg","bg","setPosition","playerHealth","chamber","circle","actiontext","getActionPoints","actions","container","discardPile","event","launch","loadCards","endTurnButton","endTurn","bind","keepCardButton","keepCard","dropZone","zone","enemySprite","spawnEnemyOnScene","gameObject","removeTooltip","tweens","targets","angle","duration","background","alpha","dragX","dragY","type","yOffSet","startPosition","depth","showTooltip","setLabelCoordinates","getCost","activateCard","setTimeout","cameras","main","shake","dragend","dropped","character","modifiers","modifier","damage_num","time","delayedCall","damage_event","cannon","grenade","headshot","reload","overload","medkit","kevlar","bottomOfScreen","screenCenterX","yDelta","cardX","selectCardInHand","moveCardsBackInDeck","base_damage","action","damage_calculation","resetDeck","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","array","currentIndex","randomIndex","Door","positions","_image","_positions","_position","_room","room","_adjacent","adjacent","Room","number","encounter","visited","_number","_encounter","_visited","Map","encounters","doors","door_positions","startEnd","_encounters","_doors","_doors_temp","_start","_end","_current_room","_level","_current_location","_rooms","assignLocations","setAdjacent","getNumber","getEncounter","door","adjacent_temp","playerLocation","randomizePosition","icon","locations","MapScene","battle","shop","random2","battle2","battle3","battle4","battle5","battle6","battle7","end","door1","door_pos1","door2","door_pos2","door3","door_pos3","door4","door_pos4","door5","door_pos5","door6","door_pos6","door7","door_pos7","door8","door_pos8","door9","door_pos9","door10","door_pos10","door11","door_pos11","map","level","toString","encountersInteractive","next_floor","currentLocation","disableInteractive","levelInc","setVisited","LoadScene","audio","loadingBar","colour","percent","BattleLoadScene","DiscardPileScene","title","startX","startY","xOffset","xCounter","yCounter","discardCard","stop","Game","render","pixelArt","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","loadFont","url","newFont","FontFace","then","loaded","document","fonts","catch","error","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","v","hmrAcceptRun","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["/**\nThis file contains all the constants and keys used in the game.\n*/\nexport const CST = {\n    SCENES: {\n        LOAD: \"LOAD\",\n        MENU: \"MENU\",\n        OPTIONS: \"OPTIONS\",\n        CREDITS: \"CREDITS\", \n        BATTLE_LOAD: \"BATTLE_LOAD\",\n        BATTLE: \"BATTLE\",\n        MAP: \"MAP\",\n        DISCARD_PILE: \"DISCARD_PILE\"\n    }\n}","/**\nThis file is used to create the main menu scene.\n*/\nimport { CST } from \"../CST\";\nexport class MenuScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key: CST.SCENES.MENU\n        })\n    }\n\n    // Used to create our buttons, images, and text\n    create(){\n\n        // Adds background image to the scene - (x, y, image)\n        this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'tower').setSize(this.game.renderer.width, this.game.renderer.height).setDepth(0)\n\n        // Adds the title image to the scene - (x, y, image), setDepth() is used to set the depth of the image (higher depth = higher priority)\n        this.add.text(this.game.renderer.width / 2, this.game.renderer.height * 0.20, 'Dual Ascent: Tower of Cards', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        // Adds a button to the scene - (x, y, image)\n        let startButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height / 2, 'Start Game', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        let profileButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height / 2 + 100, 'Profile', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        let optionsButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height / 2 + 200, 'Options', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        let creditsButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height / 2 + 300, 'Credits', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        let battleButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height / 2 + 350, 'Battle', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n        let mapButton = this.add.text(this.game.renderer.width/ 2 + 200 , this.game.renderer.height / 2 + 350, 'Map', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        // Adds the hover arrow that will appear when hovering over a button\n        let arrowSprite = this.add.sprite(100, 100, \"arrow\");\n\n        // Sets the arrow to not be visible until hovering over a button\n        arrowSprite.setVisible(false);\n\n        // Fix music from repeating when moving from one scene to another and then back\n        if (!this.isMusicPlaying) {\n            this.isMusicPlaying = true;\n            this.sound.pauseOnBlur = false;\n            this.sound.play(\"soundtrack\", { loop: true });\n        }\n\n        /*\n        The following code is used to make the buttons interactive\n        Pointer Events:\n            pointerover - hovering\n            pointerout - not hovering\n            pointerup - click and release\n            pointerdown - just click\n        */\n\n        // Allows the start button to be interactive\n        startButton.setInteractive();\n\n        // When the pointer is over the button, the arrow will appear\n        startButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = startButton.x - startButton.width +135;\n            arrowSprite.y = startButton.y + startButton.height / 4;\n        })\n\n        // Signals when the pointer is clicked and released\n        startButton.on(\"pointerup\", ()=>{\n            console.log(\"click\")\n        })\n\n        // Profile Button\n        profileButton.setInteractive();\n\n        profileButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = profileButton.x - profileButton.width +100;\n            arrowSprite.y = profileButton.y + profileButton.height / 4;\n        })\n\n        startButton.on(\"pointerup\", ()=>{\n            console.log(\"click\")\n        })\n\n        // Options Button\n        optionsButton.setInteractive();\n\n        optionsButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = optionsButton.x - optionsButton.width +100;\n            arrowSprite.y = optionsButton.y + optionsButton.height / 4;\n        })\n\n        optionsButton.on(\"pointerup\", ()=>{\n            // Moves to options menu when clicked\n            this.scene.start(CST.SCENES.OPTIONS);\n            console.log(\"click\")\n        })\n\n        // Credits Button\n        creditsButton.setInteractive();\n\n        creditsButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = creditsButton.x - creditsButton.width +100;\n            arrowSprite.y = creditsButton.y + creditsButton.height / 4;\n        })\n\n        creditsButton.on(\"pointerup\", ()=>{\n            // Moves to options menu when clicked\n            this.scene.start(CST.SCENES.CREDITS)\n            console.log(\"click\")\n        })\n\n        // Battle Button\n        battleButton.setInteractive();\n\n        battleButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = battleButton.x - battleButton.width +100;\n            arrowSprite.y = battleButton.y + battleButton.height / 4;\n        })\n\n        battleButton.on(\"pointerup\", ()=>{\n            // Moves to options menu when clicked\n            this.scene.start(CST.SCENES.BATTLE)\n            console.log(\"click\")\n        })\n\n        // Map Button\n        mapButton.setInteractive();\n\n        mapButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = mapButton.x - mapButton.width +50;\n            arrowSprite.y = mapButton.y + mapButton.height / 4 ;\n        })\n\n        mapButton.on(\"pointerup\", ()=>{\n            // Moves to options menu when clicked\n            this.scene.start(CST.SCENES.MAP)\n            console.log(\"click\")\n        })\n    }\n}","/**\nThis file is used to create the options scene.\n*/\nimport { CST } from \"../CST\";\nexport class OptionsScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key: CST.SCENES.OPTIONS\n        })\n    }\n\n    // Creates any images, text, etc.\n    create(){\n\n        // Options title\n        this.add.text(this.game.renderer.width / 2, this.game.renderer.height * 0.20, 'Options', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        // Disable music button\n        let disableMusicButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height * 0.40, 'Disable Music', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n\n        // Back Button for navigating back to the main menu\n        let backButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height / 2 + 300, 'Back', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        let arrowSprite = this.add.sprite(100, 100, \"arrow\");\n        arrowSprite.setVisible(false);\n\n        // Back Button\n        backButton.setInteractive();\n\n        backButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = backButton.x - backButton.width + 60;\n            arrowSprite.y = backButton.y + backButton.height / 4;\n            console.log(\"hover\")\n        })\n\n        backButton.on(\"pointerup\", ()=>{\n            // Moves back to the main menu when the back button is clicked\n            this.scene.start(CST.SCENES.MENU);\n            console.log(\"click\")\n        })\n\n        // Disable Music Button\n        disableMusicButton.setInteractive();\n\n        disableMusicButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = disableMusicButton.x - disableMusicButton.width + 120;\n            arrowSprite.y = disableMusicButton.y + disableMusicButton.height / 4;\n            console.log(\"hover\")\n        })\n\n        // When clicked, music will be disabled\n        // When clicked again, music will be enabled\n        let musicEnabled = true;\n\n        disableMusicButton.on(\"pointerup\", () => {\n            if (musicEnabled) {\n                this.sound.stopAll();\n                musicEnabled = false;\n                console.log(\"Music disabled\");\n            } else {\n                this.sound.play(\"soundtrack\", {loop: true});\n                musicEnabled = true;\n                console.log(\"Music enabled\");\n            }\n        })\n    }\n}","/**\nThis file is used to create the credits scene\n*/\nimport { CST } from \"../CST\";\nexport class CreditsScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key: CST.SCENES.CREDITS\n        })\n    }\n\n    // Creates any images, text, etc.\n    create(){\n\n        // Credits title\n        this.add.text(this.game.renderer.width / 2, this.game.renderer.height * 0.20, 'Credits', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        // Credits start here\n        this.add.text(this.game.renderer.width / 2, this.game.renderer.height * 0.30, 'Team Lead', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2, this.game.renderer.height * 0.35, '-----------------', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2, this.game.renderer.height * 0.40, 'Nick Shapovalov', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n\n        this.add.text(this.game.renderer.width / 2 - 300, this.game.renderer.height * 0.50, 'Game Mechanics Team', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2 - 300, this.game.renderer.height * 0.55, '-----------------', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2 - 300, this.game.renderer.height * 0.60, 'Kevin Jones Saleh', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2 - 300, this.game.renderer.height * 0.65, 'Eoin Schuch', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2 - 300, this.game.renderer.height * 0.70, 'Zhi Jie Chen', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n\n        this.add.text(this.game.renderer.width / 2 + 300, this.game.renderer.height * 0.50, 'Design Team', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2 + 300, this.game.renderer.height * 0.55, '-----------------', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2 + 300, this.game.renderer.height * 0.60, 'Nick Shapovalov', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2 + 300, this.game.renderer.height * 0.65, 'James Kirkby', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n        this.add.text(this.game.renderer.width / 2 + 300, this.game.renderer.height * 0.70, 'Jack O\\'Meara', {fontFamily: 'font1', fill: '#ffffff', fontSize: '40px'}).setDepth(1).setOrigin(0.5)\n\n        // Back Button for navigating back to the main menu\n        let backButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height / 2 + 300, 'Back', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        let arrowSprite = this.add.sprite(100, 100, \"arrow\");\n        arrowSprite.setVisible(false);\n\n        // Back Button\n        backButton.setInteractive();\n\n        backButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = backButton.x - backButton.width + 60;\n            arrowSprite.y = backButton.y + backButton.height / 4;\n            console.log(\"hover\")\n        })\n\n        backButton.on(\"pointerup\", ()=>{\n            // Moves back to the main menu when the back button is clicked\n            this.scene.start(CST.SCENES.MENU);\n            console.log(\"click\")\n        })\n    }\n}","// import { loadFont } from \"../font\"\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\n\nexport default class Button extends Phaser.GameObjects.Text {\n\n    constructor(x, y, label, scene, callback, bgColour) {\n        super(scene, x, y, label);\n        this.padding = {\n            x: 8,\n            y: 15\n        }\n        this.setOrigin(1, 0.5);\n        this.setPadding(this.padding.x, this.padding.y);\n        this.setStyle({ backgroundColor: bgColour});\n        this.setInteractive( { useHandCursor: true});\n        this.on('pointerdown', () => callback());\n        scene.add.existing(this);\n    }\n\n    setFontColour(fontColour) {\n        this.setStyle({color: \"#202529\"});\n    }\n\n    changePadding(newX, newY) {\n        this.padding = {\n            x: newX,\n            y: newY\n        }\n        this.setPadding(this.padding.x, this.padding.y);\n    }\n\n    changeOrigin(newX, newY) {\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\n            this.setOrigin(newX, newY);\n        }\n    }\n}\n","export const gameOptions = {\n    deck: 6,\n    startCards: 5,\n    cardWidth: 130,\n    cardHeight: 205,\n    cardDistance: 100,\n    cardAngle: 3,\n    cardYOffset: 10\n}\n\nexport const cardBackDimensions = {\n    backWidth: 130,\n    backHeight: 205\n}\n\nexport const enemy = {\n    spriteWidth: 73.3,\n    spriteHeight: 103,\n    numberOfSprites: 3,\n    enemyList: [],\n    enemyOnScene: []\n}\n\n","export default class Zone extends Phaser.GameObjects.Zone {\n    constructor(scene, x, y, width, height) {\n        super(scene, x, y, width, height).setRectangleDropZone(width, height);\n        scene.add.existing(this);\n        this.normalZone = 0xffff00; // yellow\n        this.activeZone = 0x00ffff; // lightblue / turquoise \n\n        this.zoneOutline = scene.add.graphics();;\n        this.renderNormalOutline(scene);\n        \n    }\n\n    renderNormalOutline() {\n        this.zoneOutline.clear();\n        this.zoneOutline.lineStyle(2, this.normalZone);\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\n    }\n\n    renderActiveOutline() {\n        this.zoneOutline.clear();\n        this.zoneOutline.lineStyle(2, this.activeZone);\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\n    }\n}","export default class HealthBar{\n\n    constructor(scene, x, y, maxHealth, health){\n        this.bar = new Phaser.GameObjects.Graphics(scene);\n\n        this.x = x;\n        this.y = y;\n        this.maxHealth = maxHealth;\n        this.health = health;\n\n        this.show_health();\n\n        scene.add.existing(this.bar);\n    }\n\n    show_health(){\n        this.bar.clear();\n\n        //  BG\n        this.bar.fillStyle(0xffffff);\n        this.bar.fillRect(this.x, this.y, 104, 16);\n\n        //  Health\n        this.bar.fillStyle(0x000000);\n        this.bar.fillRect(this.x + 2, this.y + 2, 100, 12);\n\n\n        let percentage = 100 * (this.health / this.maxHealth);\n        this.bar.fillStyle(0xff0000);\n        this.bar.fillRect(this.x + 2, this.y + 2, percentage, 12);\n    }\n    \n}","import {cardBackDimensions} from \"../config.js\";\n\nexport default class Player extends Phaser.GameObjects.Sprite {\n\n    constructor(scene, x, y, sprite, frame) {\n        super(scene, x, y, sprite, frame);\n        this.maxHealth = 50;\n        this.health = this.maxHealth;\n        this.maxActionPoints = 6;\n        this.actionPoints = this.maxActionPoints;\n        this.handArray = [];\n        this.deckArray = [];\n        this.deckTrackerArray = [];\n        this.graveYardArray = [];\n        this.spriteType = \"player\";\n        this.keepCards = [];\n        this.keepCardsLimit = 2;\n        scene.add.existing(this);\n    }\n\n    selectCardInHand(player) {\n        // disable drag first on all cards\n        this.disableDragOnCards();\n        \n        for (let cards of this.handArray) {\n            cards.on(\"pointerdown\", function(pointer) {\n                // this is referring to the clicked object rather than player now\n                if (player.keepCards.includes(this)) {\n                        // removes the card from list \n                    player.keepCards.splice(player.keepCards.indexOf(this), 1);\n                    this.clearTint();\n                } else {\n                    if (player.keepCards.length < player.keepCardsLimit) {\n                        player.keepCards.push(this);\n                        // add a visual effect when clicked\n                        this.setTint(0x999999);\n                    }\n                }\n            });\n        }\n\n    }\n\n    moveCardsBackInDeck(scene) {\n        // get indexes of cards not in this.keepCards List\n        let indexList = [];\n        for (let cards of this.handArray) {\n            if (!this.keepCards.includes(cards)) {\n                let index = this.handArray.indexOf(cards);\n                indexList.push(index);\n            }\n        }\n\n        // remove the indexes in reverse order not to mess up the loop\n        for (let index=indexList.length-1; index >= 0; index--) {\n            this.deckArray.push(this.handArray[indexList[index]]);\n            this.handArray[indexList[index]].setActive(false).setVisible(false);\n            this.handArray.splice(indexList[index], 1);\n        }\n\n        // remove tint of cards remaining in hand\n        for (let cards of this.handArray) {\n            cards.clearTint();\n        }\n\n        // set up the deck sprites and deckArray and organise the cards on screen\n        this.shuffle();\n        this.deckSetUp(scene);\n        scene.arrangeCardsInCenter(this.handArray);\n        this.enableDragOnCards();\n\n    }\n    \n    // draw an amount of cards\n    drawCard(amountOfCards, scene) {\n        for (let i=0; i < amountOfCards; i++) {\n            let lastCard = this.deckTrackerArray.pop();\n            lastCard.setActive(false).setVisible(false);\n\n            let drawCard = this.deckArray.pop();\n            this.handArray.push(drawCard);\n            drawCard.cardInHand(scene);\n            scene.arrangeCardsInCenter(this.handArray);\n        }\n    }\n\n\n    disableDragOnCards() {\n        for (let i=0; i < this.handArray.length; i++) {\n            this.handArray[i].input.draggable = false;\n        }\n    }\n\n    enableDragOnCards() {\n        for (let i=0; i < this.handArray.length; i++) {\n            this.handArray[i].input.draggable = true;\n        }\n    }\n    \n    deckSetUp(scene) {\n        let x = scene.game.config.width / 25;\n        let y = scene.game.config.height / 1.24;\n\n        // need to remove all sprites currently active\n        if (this.deckTrackerArray.length > 0) {\n            for (let j=0; j < this.deckTrackerArray.length; j++) {\n                this.deckTrackerArray[j].destroy();\n            }\n        }\n\n        for (let i=0; i < this.deckArray.length; i++) {\n            let cardBack = scene.add.sprite(x, y, 'cardBack');\n            cardBack.setOrigin(0.5, 1);\n            cardBack.displayWidth = cardBackDimensions.backWidth / 2;\n            cardBack.displayHeight = cardBackDimensions.backHeight / 2;\n            \n            this.deckTrackerArray.push(cardBack);\n            x += 3;\n        }\n    }\n    \n    // implementing Durstenfeld shffle, an optimised version of Fisher-Yates\n    shuffle() {\n        for (let i = this.deckArray.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i+1));\n            [this.deckArray[i], this.deckArray[j]] = [this.deckArray[j], this.deckArray[i]]\n        }\n    }\n\n    resetDeck(scene) {\n        if (this.deckArray.length <= 0) {\n            // push all the cards in graveYard array back to the deck\n            for (let i=this.graveYardArray.length; i > 0; i--) {\n                let card = this.graveYardArray.shift();\n                this.deckArray.push(card);\n            }\n            this.shuffle();\n            this.deckSetUp(scene);\n        }\n    }\n\n    getHealth() {\n        return this.health;\n    }\n\n    setHealth(health) {\n        this.health += health;\n\n        // setting it back to max health if going over\n        if (this.health > this.maxHealth) {\n            this.health = this.maxHealth;\n        }\n    }\n\n    getActionPoints() {\n        return this.actionPoints;\n    }\n\n    setActionPoints(actionPoints) {\n        this.actionPoints += actionPoints;\n\n        // setting it back to max AP if going over\n        if (this.actionPoints > this.maxActionPoints) {\n            this.actionPoints = this.maxActionPoints\n        }\n    }\n\n    getSpriteType() {\n        return this.spriteType;\n    }\n}","export default class Enemy extends Phaser.GameObjects.Sprite {\n    constructor(scene, x, y, sprite, frame) {\n        super(scene, x, y, sprite, frame);\n        this.setScale(2);\n        this.health = this.getRandomHealth(10, 30);\n        this.spriteType = \"enemy\";\n        this.setInteractive();\n\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\n        this.heartText.setOrigin(1, 0);\n        \n        scene.add.existing(this);\n\n        this.setEnemyCoordinates(scene);\n        this.enemySpawn();\n\n        // this.heart = scene.add.image(0, 0, \"heart\");\n    }\n  \n    // generates a random number between min and max parameters\n    // min and max included\n    action() {\n        return Math.floor(Math.random() * 10);\n    }\n\n    getRandomHealth(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    setEnemyCoordinates(scene) {\n        this.y = scene.game.config.height * 0.6;\n        this.x = scene.game.config.width * 0.6;\n    }\n\n    enemySpawn() {\n        this.visible = !this.visible;\n        this.heartText.visible = !this.heartText.visible;\n    }\n\n    getSpriteType() {\n        return this.spriteType;\n    }\n\n    getHealth() {\n        return this.health;\n    }\n\n    setHealth(health) {\n        this.health = health;\n    }\n}","import { gameOptions } from \"../../config\";\n\n// Cards that appear in the player's hand\nexport default class HandCard extends Phaser.GameObjects.Sprite {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(scene, x, y, sprite);\n        this.name = name;\n        this.cost = cost;\n        this.effect = effect;\n        this.cardType = cardType;\n    }\n\n    cardInHand(scene) {\n        this.visible = !this.visible;\n        this.setInteractive();\n        scene.input.setDraggable(this);\n        this.setOrigin(0.5, 1);\n\n        // Minimises the cards initial display size\n        this.displayWidth = gameOptions.cardWidth;\n        this.displayHeight = gameOptions.cardHeight;\n    }\n    \n    getName() {\n        return this.name;\n    }\n\n    getCost() {\n        return this.cost;\n    }\n\n    getEffect() {\n        return this.effect;\n    }\n\n    getType() {\n        return this.cardType;\n    }\n\n    setCost(cost) {\n        this.cost = cost;\n    }\n}","export class Tooltip extends Phaser.GameObjects.Text {\n    constructor(scene, x, y, label) {\n        super(scene, x, y, label);\n        this.padding = {\n            x: 20,\n            y: 20\n        }\n        this.setPadding(this.padding.x, this.padding.y);\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\n        scene.add.existing(this);\n        this.visible = false;\n        this.setDepth(2);\n    }\n\n    showTooltip() {\n        this.visible = true;\n    }\n\n    removeTooltip() {\n        this.visible = false;\n    }\n    \n    setLabelCoordinates(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n\n}","import { gameOptions, enemy } from \"../../config\";\nimport HandCard from \"./handCard\";\nimport { Tooltip } from \"./toolTip\";\n\nexport default class DamageCard extends HandCard {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(name, cost, cardType, effect, scene, x, y, sprite);\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\n        scene.add.existing(this);\n        this.cardInHand(scene);\n    }\n\n    cardInHand(scene) {\n        super.cardInHand(scene);\n    } \n\n    activateCard(scene) {\n        let card = this;\n        if (this.effect.target == \"single\") {\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\n                    this.setHealth(this.getHealth() - card.effect.damage);\n                    this.heartText.setText(this.getHealth());\n\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\n                        enemy.enemyOnScene[j].input.enabled = false;\n                    }\n                })\n            }\n        } else if (this.effect.target == \"all\") {\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\n            }\n        }\n    }\n\n    getLabel() {\n        return \"Damage: Inflicted damage is on the enemy's health.\";\n    }\n    \n\n}","import { gameOptions, enemy } from \"../../config\";\nimport HandCard from \"./handCard\";\nimport { Tooltip } from \"./toolTip\";\n\nexport default class ComboCard extends HandCard {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(name, cost, cardType, effect, scene, x, y, sprite);\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\n        scene.add.existing(this);\n        this.cardInHand(scene);\n    }\n\n    cardInHand(scene) {\n        super.cardInHand(scene);\n    } \n\n    activateCard(scene) {\n        let card = this;\n        console.log(this);   \n    }\n\n    getLabel() {\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\n    }\n    \n   \n}","import { gameOptions, enemy } from \"../../config\";\nimport HandCard from \"./handCard\";\nimport { Tooltip } from \"./toolTip\";\n\nexport default class ReloadCard extends HandCard {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(name, cost, cardType, effect, scene, x, y, sprite);\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\n        scene.add.existing(this);\n        this.cardInHand(scene);\n    }\n\n    cardInHand(scene) {\n        super.cardInHand(scene);\n    } \n\n    // nned to account for next turn side effects\n    // such as losing action points next turn\n    activateCard(scene) {\n        if (this.effect.sideEffects !== null) {\n            // removing health if its overloading card\n            scene.player.setHealth(this.effect.sideEffects);\n            scene.heartext.setText(scene.player.health);\n            // add function here to kill the player if health goes to 0\n        }\n\n        scene.player.setActionPoints(this.effect.amount);\n    }\n\n    getLabel() {\n        return \"AP: \\nAction Points are used when activating a card.\"\n    }\n\n}","import { gameOptions, enemy } from \"../../config\";\nimport HandCard from \"./handCard\";\nimport { Tooltip } from \"./toolTip\";\n\nexport default class HealingCard extends HandCard {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(name, cost, cardType, effect, scene, x, y, sprite);\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\n        scene.add.existing(this);\n        this.cardInHand(scene);\n    }\n\n    cardInHand(scene) {\n        super.cardInHand(scene);\n    } \n\n    activateCard(scene) {\n        if (this.effect.target == \"health\") {\n            scene.player.setHealth(this.effect.amount);\n            scene.heartext.setText(scene.player.health);\n        }\n        // include bottom when armour is introduced\n        // } else (this.effect.target == \"armour\") {\n        //     scene.player.setArmour(this.effect.amount);\n        //     scene.armourText.setText(scene.player.armour);\n        // }\n    }\n\n    getLabel() {\n        if (this.effect.target == \"armour\") {\n            return \"Armour: \\nRemoved before health when receiving damage.\";\n        } else if (this.effect.target == \"health\") {\n            return \"Health: \\nIf this reaches zero, you die.\"\n        }\n    }    \n\n}","import { CST } from \"../CST.js\";\nimport Button from '../helpers/classes/button.js';\nimport { gameOptions, enemy} from \"../helpers/config.js\";\nimport Zone from \"../helpers/classes/zone.js\";\nimport HealthBar from \"../helpers/classes/healthBar.js\";\nimport Player from \"../helpers/classes/player.js\";\nimport Enemy from \"../helpers/classes/enemy.js\";\nimport DamageCard from \"../helpers/classes/cards/damageCard.js\";\nimport ComboCard from \"../helpers/classes/cards/comboCard.js\";\nimport ReloadCard from \"../helpers/classes/cards/reloadCard.js\";\nimport HealingCard from \"../helpers/classes/cards/healingCard.js\";\n\nexport class BattleScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.BATTLE\n        })\n    }\n\n    init(data) {\n        // data returns a list of preloaded cards\n        let cards = data;\n    }\n\n    preload() {\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\n        this.load.image(\"background\", \"./assets/background.png\");\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\n        //this.load.image(\"heart\", \"./assets/sprites/heart.png\");\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\n            frameWidth: enemy.spriteWidth,\n            frameHeight: enemy.spriteHeight\n        });\n    }\n\n    create() {\n        let gameWidth = this.game.config.width;\n        let gameHeight = this.game.config.height;\n\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\n        let card_bg = this.add.image(0, 0, \"card_holder\");\n        let bg = this.add.sprite(0, 0, \"background\");\n        hud_bg.setScale(2);\n\n        card_bg.setPosition(gameWidth/2, gameHeight);\n        card_bg.setScale(0.325);\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\n        bg.setScale(0.65);\n        \n        this.player = new Player(this, 0, 0, \"guy\");\n        this.player.setPosition(gameWidth/3.5, gameHeight/1.7);\n        this.player.setScale(3);\n\n        //let heart = this.add.image(0, 0, \"heart\");\n        //this.heartext = this.add.text(0,0, this.player.getHealth(), {color: \"black\", fontSize: \"30px\"});\n        //heart.setScale(4);\n        //this.heartext.setPosition(-18, -18);\n        //let health = this.add.container(0, 0, [heart, this.heartext]);\n        //health.setPosition(gameWidth/20, gameHeight/2.2);\n        this.playerHealth = new HealthBar(this, this.player.x - 40, this.player.y + 100, this.player.maxHealth, this.player.health)\n\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\n        this.actiontext = this.add.text(0,0, this.player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\n        this.actiontext.setPosition(-10, -18);\n        let actions = this.add.container(0, 0, [chamber, this.actiontext]);\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\n\n        // launch the discard pile scene in parallel\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\n        discardPile.on('pointerdown', (event) => {\n            this.scene.launch(CST.SCENES.DISCARD_PILE, this.player.graveYardArray);\n        }, this);\n        \n        // loads all the different types of cards\n        this.loadCards();\n        \n        this.endTurnButton = new Button(gameWidth, gameHeight/2, \"End Turn\", this, this.endTurn.bind(this, this.player, this.endTurnButton), '#202529');\n        this.keepCardButton = new Button(gameWidth, gameHeight/2, \"Keep Cards\", this, this.keepCard.bind(this, this.player, this.keepCardButton), '#202529');\n\n        // zone where cards can be dropped and activated\n        //let dropZone = new Zone(this, 500, 250, 665, 665);\n        let dropZone = this.add.zone(500, 250, 665, 665).setRectangleDropZone(665, 665);\n\n        // shuffles the deck and sets up the visual for the deck cards\n        this.player.shuffle();\n        this.player.deckSetUp(this);\n        this.player.drawCard(gameOptions.startCards, this);\n\n        // spawning enemies according to spritesheet randomly\n        for (let i=0; i < enemy.numberOfSprites; i++) {\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\n            enemy.enemyList.push(enemySprite);\n        }\n        this.spawnEnemyOnScene();\n\n        // card event listeners for pointer interactions\n        this.input.on('dragstart', (pointer, gameObject) => {\n            gameObject.tooltip.removeTooltip();\n            this.tweens.add({\n                targets: gameObject,\n                angle: 0,\n                x: pointer.x,\n                y: pointer.y,\n                duration: 50\n            });\n            this.tweens.add({\n                targets: this.background,\n                alpha: 0.3,\n                duration: 50\n            });\n            \n            let index = this.player.handArray.indexOf(gameObject);\n            if (index !== -1) {\n                this.player.handArray.splice(index, 1);\n            }\n\n            this.arrangeCardsInCenter(this.player.handArray);\n\n        }, this);\n\n        this.input.on('drag', (pointer, gameObject, dragX, dragY) => {\n            gameObject.x = dragX;\n            gameObject.y = dragY;\n        });\n\n        // hover over listener\n        this.input.on('gameobjectover', (pointer, gameObject) => {\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\n                let yOffSet = 50;\n                this.tweens.add({\n                    targets: gameObject,\n                    angle: 0,\n                    y: gameObject.startPosition.y - yOffSet,\n                    displayWidth: gameOptions.cardWidth * 2,\n                    displayHeight: gameOptions.cardHeight * 2,\n                    depth: 100,\n                    duration: 10\n                });\n                gameObject.tooltip.showTooltip();\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\n\n            }\n        }, this);\n\n        // hover out listener\n        this.input.on('gameobjectout', (pointer, gameObject) => {\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\n                this.tweens.add({\n                    targets: gameObject,\n                    y: gameObject.startPosition.y,\n                    angle: gameObject.startPosition.angle,\n                    displayWidth: gameOptions.cardWidth,\n                    displayHeight: gameOptions.cardHeight,\n                    depth: gameObject.startPosition.depth,\n                    duration: 10\n                });\n                gameObject.tooltip.removeTooltip();\n            }\n       }, this);\n\n        this.input.on('dragenter', (pointer, gameObject, dropZone) => {\n            //dropZone.renderActiveOutline();\n            gameObject.setTint(0xffa500);\n        });\n\n        this.input.on('dragleave', (pointer, gameObject, dropZone) => {\n            //dropZone.renderNormalOutline();\n            gameObject.clearTint();\n            if (gameObject.cost > this.player.actionPoints) {\n                gameObject.setTint(0xff0000);\n            }\n        }); \n\n        this.input.on('drop', (pointer, gameObject, dropZone) => {\n            if (this.player.getActionPoints() >= gameObject.getCost()) {\n                gameObject.input.enabled = false;\n                gameObject.tooltip.removeTooltip();\n                gameObject.clearTint();\n        \n                // setting card in the middle \n                gameObject.displayHeight = gameOptions.cardHeight;\n                gameObject.displayWidth = gameOptions.cardWidth;\n                gameObject.x = dropZone.x;\n                gameObject.y = dropZone.y + dropZone.y / 3;\n                \n                this.player.graveYardArray.push(gameObject);\n                gameObject.activateCard(this);\n\n                // remove the card from the scene after 500ms\n                setTimeout(function() { \n                    gameObject.setActive(false).setVisible(false); \n                }, 500);\n        \n                this.player.actionPoints = this.player.getActionPoints() - gameObject.getCost();\n                this.actiontext.text = this.player.getActionPoints();\n                //dropZone.renderNormalOutline(this);\n        \n                this.cameras.main.shake(100, 0.02);\n                for (let card of this.player.handArray){\n                    if (card.cost > this.player.actionPoints){\n                        card.setTint(0xff0000);\n                    }\n                }\n            } else {\n                gameObject.setTint(0xff0000);\n                this.dragend(pointer, gameObject, false);\n            }\n        });\n\n        this.input.on(\"dragend\", this.dragend, this);\n    }\n\n    dragend(pointer, gameObject, dropped) {\n        \n        if (!dropped) {\n            this.player.handArray.push(gameObject);\n            gameObject.displayHeight = gameOptions.cardHeight;\n            gameObject.displayWidth = gameOptions.cardWidth;\n            this.arrangeCardsInCenter(this.player.handArray);\n        }\n    }\n\n    damage_calculation(character, damage, modifiers) {\n        for (let modifier of modifiers){\n            damage = damage * modifier;\n        }\n        console.log(damage);\n        character.health = character.health - damage;\n        character.setTint(0xff0000);\n        let damage_num = this.add.text(0,0, \"-\" + damage, {color: \"red\", fontSize: \"30px\"});\n        damage_num.setPosition(character.x + 40, character.y - 80);\n        this.time.delayedCall(450, this.damage_event, [character, damage_num], this);\n    }\n\n    damage_event(character, damage_num){\n        character.clearTint();\n        damage_num.destroy();\n    }\n\n    loadCards() {\n        // damage cards\n        let cannon = new DamageCard(\"cannon\", 1, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\n\n        // combo cards\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\n        \n        // reload cards\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -15}, this, 0, 0, \"overload\");\n\n        // healing cards\n        let medkit = new HealingCard(\"medkit\", 0, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\n        let kevlar = new HealingCard(\"kevlar\", 1, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\n\n        this.player.deckArray.push(cannon);\n        this.player.deckArray.push(grenade);\n        this.player.deckArray.push(headshot)\n        this.player.deckArray.push(reload);\n        this.player.deckArray.push(overload);\n        this.player.deckArray.push(medkit);\n        this.player.deckArray.push(kevlar);\n    }\n    \n   \n    arrangeCardsInCenter(handArray) {\n        // arranges for the cards to be organised around the bottom middle of the screen\n        let bottomOfScreen = this.game.config.height;\n        let screenCenterX = this.game.config.width / 2;\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\n\n        for (let i=0; i < handArray.length; i++) {\n            let card = handArray[i];\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\n\n            card.x = cardX;\n            card.y = bottomOfScreen + yDelta;\n            card.angle = cardAngle;\n            if (i > handArray.length / 2 - 1) {\n                yDelta += gameOptions.cardYOffset;\n            } else {\n                yDelta -= gameOptions.cardYOffset;\n            }\n\n            // cards remember their original coordinates for events that make the cards leave and renter the hand\n            card.startPosition = {\n                x: card.x,\n                y: card.y,\n                angle: card.angle,\n                depth: card.depth\n            }\n\n            // sets card to the right in front\n            card.setDepth(2);\n        }\n    }\n\n\n    // start keep cards and make keep cards button appear\n    keepCard(player) {\n        this.keepCardButton.visible = false;\n        this.endTurnButton.visible = true;\n        for (let card of this.player.handArray){\n            card.clearTint();\n        }\n        this.player.selectCardInHand(player);\n    }\n    \n    \n    // ends the player's turn\n    endTurn() {\n        this.keepCardButton.visible = true;\n        this.endTurnButton.visible = false;\n        this.player.moveCardsBackInDeck(this);\n        \n        // simulate enemies attacking\n        for (let i=0; i < enemy.enemyOnScene.length; i++) {\n            let base_damage = enemy.enemyOnScene[i].action();\n            this.damage_calculation(this.player, base_damage, [1]);\n        }\n        this.playerHealth.health = this.player.health;\n        this.playerHealth.show_health();\n        \n        // automatic drawing goes here and checking if needing to reshuffle the deck\n        this.player.drawCard(5 - this.player.handArray.length, this);\n        this.player.resetDeck(this);\n        for (let card of this.player.handArray){\n            if (card.cost > this.player.actionPoints){\n                card.setTint(0xff0000);\n            }\n        }\n    }\n    \n    // spawning in enemies and their life\n    spawnEnemyOnScene() {\n        let minEnemies = 1;\n        let maxEnemies = 2;\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\n\n        let spawnEnemyDistanceX = 0;\n        let spawnHeartDistanceY = 0;\n\n        for (let i=0; i < numberOfEnemies; i++) {\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\n\n            // For some reason, enemies spawn invisible, no clue.\n            randomEnemy.enemySpawn();\n            randomEnemy.x += spawnEnemyDistanceX;\n            randomEnemy.heartText.y += spawnHeartDistanceY;\n\n            spawnEnemyDistanceX += 150;\n            spawnHeartDistanceY += 100;\n            randomEnemy.setDepth(1);\n\n            enemy.enemyOnScene.push(randomEnemy);\n        }\n    }\n}","// function for randomly shuffling an array - https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n\nexport default function shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n    \n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n    \n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n    \n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    \n    return array;\n}","import shuffle from './shuffle';\n\nexport default class Door {\n\n    /*\n    Positions should be a list of positions.\n    Position should include x, y, l and r.\n    l and r are left and right or up and down respectively depending on where the door is situated.\n    */\n\n    constructor(image, positions) {\n        this._image = image;\n        this._positions = positions;\n        this._position = shuffle(positions)[0];\n        this._image.x = this._position.x\n        this._image.y = this._position.y\n        this._room = this._position.room\n        this._adjacent = this._position.adjacent\n    }\n\n    // Used to randomize the doors position (if door has multiple positions).\n    randomizePosition() {\n        this._position = shuffle(this._positions)[0];\n        this._image.x = this._position.x\n        this._image.y = this._position.y\n        this._adjacent = this._position.adjacent\n        this._room = this._position.room \n    }\n\n    get image() {\n        return this._image\n    }\n\n    get adjacent() {\n        return this._adjacent\n    }\n\n    get room() {\n        return this._room\n    }\n\n}\n","export default class Room {\n\n    constructor(number, encounter, visited=false) {\n        this._number = number;\n        this._encounter = encounter;\n        this._visited = visited;\n    }\n\n    setVisited() {\n        this._visited = true;\n        this._encounter.setDepth(-1);\n    }\n\n    getNumber() {\n        return this._number;\n    }\n\n    getEncounter() {\n        return this._encounter;\n    }\n\n    getVisited() {\n        return this._visited\n    }\n\n}","import shuffle from './shuffle';\nimport Door from \"./door\";\nimport Room from \"./room\";\n\n/*\n    When constructing a map:\n\n        - All 11 doors are initialized \n            (the randomization of door positions are handled by the door class itself).\n        \n        - Player's location and current room is set to the starting room.\n\n        - Encounters are shuffled and assigned a random location from the list of positions.\n            (Rooms are created for each)\n\n        - The start and end rooms are initialized separately as they are always set.\n\n        - Rooms that are adjacent to the player are then set.\n\n*/\n\nexport default class Map {\n    constructor(encounters, positions, doors, door_positions, startEnd) {\n        this._encounters = encounters;\n        this._positions = positions;\n\n        this._doors = doors;\n        this._doors_temp = [];\n        this._start = startEnd[0];\n        this._end = startEnd[1];\n        this._current_room = this._start;\n\n        for (let i=0; i<doors.length; i++) {\n            this._doors_temp.push(new Door(doors[i], door_positions[i]));\n        }\n\n        this._doors = this._doors_temp;\n\n        this._level = 0;\n        this._current_location = 0;\n        this._adjacent = [];\n        this._rooms = [];\n\n        shuffle(encounters);\n        this.assignLocations(encounters, positions);\n        this._rooms.push(new Room (0, this._start, true));\n        this._rooms.push(new Room(11, this._end));\n        this.setAdjacent();\n    }\n\n    playerLocation(room) {\n        this._current_location = room.getNumber();\n        this._current_room = room.getEncounter();\n\n        this.setAdjacent();\n    }\n\n    get level() {\n        return this._level;\n    }\n\n    get currentLocation() {\n        return this._current_location;\n    }\n\n    set currentLocation(encounter) {\n        this._current_location = encounter;\n    }\n\n    get adjacent() {\n        return this._adjacent;\n    }\n\n    // Sets the rooms adjacent to the players current location.\n    setAdjacent() {\n        this._adjacent = [];\n        let room = 0;\n        let door = 0;\n\n        for (let i=0; i<this._doors.length; i++) {\n            door = this._doors[i];\n\n            if (door._room == this._current_location) {\n                room = door._adjacent;\n                this._adjacent.push(room);\n            }\n            if (door._adjacent == this._current_location) {\n                room = door._room;\n                this._adjacent.push(room);\n            }\n            \n        }\n\n        let adjacent_temp = [];\n\n        for (let i=0; i<this._adjacent.length; i++) {\n            for (let j=0; j<this._rooms.length; j++) {\n                if (this._adjacent[i] == this._rooms[j].getNumber()) {\n                    adjacent_temp.push(this._rooms[j]);\n                }\n            }\n        }\n\n        this._adjacent = adjacent_temp;\n\n    }\n\n    // For incrementing the level and randomizing a new floor.\n    levelInc() {\n        this._level++;\n        this.playerLocation(new Room (0, this._start, true));\n\n        shuffle(this._encounters);\n\n        this.assignLocations(this._encounters, this._positions);\n        this._rooms.push(new Room (0, this._start, true));\n        this._rooms.push(new Room(11, this._end));\n\n        for (let i=0; i<this._doors.length; i++) {\n            this._doors[i].randomizePosition();\n        }\n\n        this.setAdjacent();\n\n        console.log(this._current_location, this._adjacent)\n\n    }\n\n    // for assigning the positions (x, y) to the icons/images.\n    assignLocations(icon, locations) {\n        this._rooms = []\n        for (let i=0; i<icon.length; i++) {\n            icon[i].x = locations[i].x;\n            icon[i].y = locations[i].y;\n            icon[i].setDepth(1);\n\n            this._rooms.push(new Room (locations[i].room, icon[i]))\n        }\n    }\n\n    randomizePlayerLocation() {\n        this._current_location = Math.floor(Math.random() * 12);\n    }\n\n}\n","/**\nThis file is used to create the map scene.\n*/\nimport Map from \"../helpers/classes/map\";\nimport { CST } from \"../CST\";\nexport class MapScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key: CST.SCENES.MAP\n        })\n    }\n\n    // Creates any images, text, etc.\n    create(){\n\n        // Loads background\n        this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'map').setSize(this.game.renderer.width, this.game.renderer.height).setDepth(0)\n\n        // Back Button for navigating back to the main menu\n        let backButton = this.add.text(this.game.renderer.width / 2, this.game.renderer.height / 2 + 300, 'Back', {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n\n        let arrowSprite = this.add.sprite(100, 100, \"arrow\");\n        arrowSprite.setVisible(false);\n\n        let pointer = this.add.sprite(100, 100, \"pointer\");\n        pointer.setVisible(false);\n\n        // Back Button\n        backButton.setInteractive();\n\n        backButton.on(\"pointerover\", ()=>{\n            arrowSprite.setVisible(true);\n            arrowSprite.x = backButton.x - backButton.width + 60;\n            arrowSprite.y = backButton.y + backButton.height / 4;\n        })\n\n        backButton.on(\"pointerup\", ()=>{\n            // Moves back to the main menu when the back button is clicked\n            this.scene.start(CST.SCENES.MENU);\n        })\n\n        // adds icons for map\n        let battle = this.add.image( 0,0, 'cards').setDepth(2);\n        let shop = this.add.image(  0,0, 'shop').setDepth(2);\n        let random = this.add.image(  0,0,  'random').setDepth(2);\n        let random2 = this.add.image(  0,0,  'random').setDepth(2);\n        let battle2 = this.add.image(  0,0,  'cards').setDepth(2);\n        let battle3 = this.add.image(  0,0,  'cards').setDepth(2);\n        let battle4 = this.add.image(  0,0,  'cards').setDepth(2);\n        let battle5 = this.add.image(  0,0,  'cards').setDepth(2);\n        let battle6 = this.add.image(  0,0,  'cards').setDepth(2);\n        let battle7 = this.add.image(  0,0,  'cards').setDepth(2);\n        let start = this.add.image( 740,490, 'door').setDepth(2);\n        let end = this.add.image( 270,460, 'door').setDepth(2);\n\n        let encounters = [battle, battle2, battle3, battle4, battle5, battle6, battle7, shop, random, random2];\n        let startEnd = [start, end];\n\n        //Door images and their respective set of positions\n        let door1 = this.add.image(0,0,\"door\");\n\n        let door_pos1 = [\n            {x : 280, y : 383, room : 9, adjacent : 11},\n            {x : 320, y : 335, room : 9, adjacent : 7},\n            {x : 320, y : 240, room : 9, adjacent : 8}\n        ]\n\n        let door2 = this.add.image(0,0,\"door\");\n\n        let door_pos2 = [\n            {x : 320, y : 417, room : 11, adjacent : 7},\n            {x : 320, y : 483, room : 11, adjacent : 6}\n        ]\n\n        let door3 = this.add.image(0,0,\"door\");\n\n        let door_pos3 = [\n            {x : 280, y : 518, room : 10, adjacent : 11},\n            {x : 320, y : 560, room : 10, adjacent : 6}\n        ]\n\n        let door4 = this.add.image(0,0,\"door\");\n\n        let door_pos4 = [\n            {x : 400, y : 288, room : 8, adjacent : 7}\n        ]\n\n        let door5 = this.add.image(0,0,\"door\");\n\n        let door_pos5 = [\n            {x : 450, y : 450, room : 7, adjacent : 6}\n        ]\n\n        let door6 = this.add.image(0,0,\"door\");\n\n        let door_pos6 = [\n            {x : 503, y : 240, room : 8, adjacent : 4},\n            {x : 503, y : 335, room : 7, adjacent : 5},\n            {x : 503, y : 505, room : 6, adjacent : 2},\n            {x : 503, y : 610, room : 6, adjacent : 3}\n        ]\n\n        let door7 = this.add.image(0,0,\"door\");\n\n        let door_pos7 = [\n            {x : 566, y : 288, room : 4, adjacent : 5},\n            {x : 670, y : 288, room : 4, adjacent : 1}\n        ]\n\n        let door8 = this.add.image(0,0,\"door\");\n\n        let door_pos8 = [\n            {x : 618, y : 335, room : 5, adjacent : 1}\n        ]\n\n        let door9 = this.add.image(0,0,\"door\");\n\n        let door_pos9 = [\n            {x : 566, y : 450, room : 5, adjacent : 2}\n        ]\n\n        let door10 = this.add.image(0,0,\"door\");\n\n        let door_pos10 = [\n            {x : 566, y : 560, room : 3, adjacent : 2},\n            {x : 730, y : 560, room : 3, adjacent : 0}\n        ]\n\n        let door11 = this.add.image(0,0,\"door\");\n\n        let door_pos11 = [\n            {x : 730, y : 382, room : 0, adjacent : 1},\n            {x : 680, y : 500, room : 0, adjacent : 2}\n        ]\n\n        let doors = [\n            door1, door2, door3, door4, door5, door6, door7, door8, door9, door10, door11\n        ]\n\n        let door_positions = [\n            door_pos1, door_pos2, door_pos3, door_pos4, door_pos5, door_pos6, door_pos7, door_pos8, door_pos9, door_pos10, door_pos11\n        ]\n\n        // room positions for encounter icons\n        let positions = [\n            {x : this.game.renderer.width / 2-225, y : this.game.renderer.height / 2-70, room : 9},\n            {x : this.game.renderer.width / 2-75, y : this.game.renderer.height / 2-170, room : 8},\n            {x : this.game.renderer.width / 2-75, y : this.game.renderer.height / 2-20, room : 7},\n            {x : this.game.renderer.width / 2+80, y : this.game.renderer.height / 2+110, room : 2},\n            {x : this.game.renderer.width / 2+60, y : this.game.renderer.height / 2-20, room : 5},\n            {x : this.game.renderer.width / 2+90, y : this.game.renderer.height / 2-165, room : 4},\n            {x : this.game.renderer.width / 2-75, y : this.game.renderer.height / 2+130, room : 6},\n            {x : this.game.renderer.width / 2-225, y : this.game.renderer.height / 2+170, room : 10},\n            {x : this.game.renderer.width / 2+120, y : this.game.renderer.height / 2+230, room : 3},\n            {x : this.game.renderer.width / 2+200, y : this.game.renderer.height / 2-60, room : 1}\n        ]\n\n        const map = new Map(encounters, positions, doors, door_positions, startEnd)\n\n        // level counter top in the left\n        let level = this.add.text(220, 100, map._level.toString(), {fontFamily: 'font1', fill: '#ffffff', fontSize: '60px'}).setDepth(1).setOrigin(0.5)\n    \n        // N.B. *** VERY IMPORTANT FUNCTION *** \n        encountersInteractive(this)\n\n        // for moving to next level (only works when in final room)\n        let next_floor = this.add.image(205, 435, \"up\").setDepth(2).setInteractive().on(\"pointerup\", ()=>{\n            if (map.currentLocation == 11) {\n                for (let i=0; i<map.adjacent.length; i++) {\n                    map.adjacent[i].getEncounter().disableInteractive();\n                }\n                map.levelInc();\n                level.text = map._level.toString();\n                encountersInteractive(this);\n                player.x = map._current_room.x;\n                player.y = map._current_room.y;\n            }\n        })\n\n        /* \n        N.B. *** IMPORTANT AGAIN KEVIN ***\n        This up arrow needs to be hovered over when moving to a new room.\n\n        THIS SIMULATES RETURNING TO THE MAP SCREEN FROM THE BATTLE SCENE CURRENTLY.\n\n        */\n\n        next_floor.on (\"pointerover\", ()=>{\n            pointer.x = next_floor.x+60;\n            pointer.y = next_floor.y-30;\n            encountersInteractive(this);\n        })\n\n        // player icon on the map\n        let player = this.add.image(map._current_room.x, map._current_room.y, 'player_map').setDepth(4)\n        \n        /*\n        THIS IS WHERE THE INTERACTIVITY FOR THE ENCOUNTERS SHOULD BE DONE.\n\n        DECIDING ON THE SCENE DEPENDING ON THE ENCOUNTER SHOULD BE DONE HERE.\n\n        HANDLES ALL OF THE REASSIGNING OF THE ADJACENT ROOMS AND THE CURRENT LOCATION OF THE PLAYER.\n\n        ALSO LOGS THE ROOMS THAT HAVE BEEN VISITED.\n        */\n\n        function encountersInteractive(scene) {\n            let adjacent = map.adjacent;\n\n            for (let i=0; i<adjacent.length; i++) {\n                adjacent[i].getEncounter().setInteractive();\n\n                adjacent[i].getEncounter().on(\"pointerup\", ()=>{\n                    // Moves back to the main menu when the back button is clicked\n                    map.playerLocation(adjacent[i]);\n                    player.x = map._current_room.x;\n                    player.y = map._current_room.y;\n                    scene.scene.start(CST.SCENES.BATTLE_LOAD);\n                    for (let i=0; i<adjacent.length; i++) {\n                        adjacent[i].getEncounter().disableInteractive();\n                    }\n                    map.setAdjacent();\n\n                    adjacent[i].setVisited();\n                })\n\n                adjacent[i].getEncounter().on(\"pointerover\", ()=>{\n                    pointer.setVisible(true).setDepth(3);\n                    pointer.x = adjacent[i].getEncounter().x+60;\n                    pointer.y = adjacent[i].getEncounter().y-30;\n\n                })\n            }\n        }\n        \n    }\n}","/**\nThis file is used to load all the assets for the game.\n*/\nimport { CST } from \"../CST\";\nimport { MenuScene } from \"./MenuScene\";\nimport { OptionsScene } from \"./OptionsScene\";\nimport { CreditsScene } from \"./CreditsScene\";\nimport { BattleScene } from \"./BattleScene\";\nimport { MapScene } from \"./MapScene\";\n\n// Creates the LoadScene class\nexport class LoadScene extends Phaser.Scene{\n    constructor(){\n        super({\n            key: CST.SCENES.LOAD\n        })\n    }\n\n    // Used to initialize variables (currently not used)\n    init(){\n    }\n\n    // Used to load all the assets\n    preload(){\n\n        // Load images\n        this.load.image(\"tower\", \"./assets/tower2.jpg\");\n        this.load.image(\"arrow\", \"./assets/arrow.png\");\n\n        this.load.image(\"background\", \"./assets/background.png\");\n        this.load.image(\"player2\", \"./assets/player2.png\");\n        this.load.image(\"player\", \"./assets/player.png\");\n        this.load.image(\"player_map\", \"./assets/player_map.png\")\n\n        this.load.image(\"map\", \"./assets/tower_floor_map.png\");\n        this.load.image(\"shop\", \"./assets/shop.png\");\n        this.load.image(\"random\", \"./assets/random.png\");\n        this.load.image(\"cards\", \"./assets/cards_new.png\");\n        this.load.image(\"door\", \"./assets/doorway.png\");\n        this.load.image(\"up\", \"./assets/up_arrow.png\")\n        this.load.image(\"pointer\", \"./assets/pointer.png\")\n\n        // Load audio\n        this.load.audio(\"soundtrack\", \"./assets/soundtrack.mp3\");\n\n        // Progress Bar\n        let loadingBar = this.add.graphics({\n            fillStyle: {\n                colour: 0xffffff\n            }\n        })\n\n        /*\n        The following code is used to add functionality to the progress bar (will add a more complex progress bar later)\n        Loader Events:\n            complete - when everything is loaded\n            progress - when something is loading\n        */\n\n        // Simulate load times (for testing)\n        for(let i = 0; i < 100; i++){\n            this.load.image(\"background\" + i, \"./assets/background\");\n        }\n\n        // Used to create the progress bar\n        this.load.on(\"progress\", (percent)=>{\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\n            console.log(percent);\n            })\n\n        // Loads menu when everything is loaded\n        this.load.on(\"complete\", ()=>{\n            this.scene.start(CST.SCENES.MENU);\n        })\n    }\n}","import { CST } from \"../CST\";\nimport HandCard from \"../helpers/classes/cards/handCard\";\nimport { BattleScene } from \"./BattleScene\";\n\nexport class BattleLoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.BATTLE_LOAD\n        })\n    }\n\n    preload() {\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\n        this.load.image(\"overload\", \"./assets/cards/Overload.png\");\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\n    }\n\n    create() {\n        this.scene.start(CST.SCENES.BATTLE);\n    }\n}","import { CST } from \"../CST\";\nimport Button from \"../helpers/classes/button\";\nimport { gameOptions } from \"../helpers/config\";\n\n\nexport class DiscardPileScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.DISCARD_PILE\n        })\n    }\n\n    init(data) {\n        this.graveYardArray = data;\n    }\n\n    preload() {\n        this.load.image(\"background\", \"./assets/background.png\");\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\n    }\n\n    create() {\n        let gameWidth = this.game.config.width;\n        let gameHeight = this.game.config.height;\n\n        let bg = this.add.image(-20, 0, \"background\").setOrigin(0,0);\n        bg.setScale(1);\n\n        let title = this.add.text(gameWidth/2, 5, \"Discard Pile\", {fontSize: \"45px\"});\n        title.setOrigin(0.5, 0);\n\n        let startX = 10;\n        let startY = 50;\n        let xOffset = gameOptions.cardWidth + 50;\n        let yOffSet = gameOptions.cardHeight + 60;\n        let xCounter = 0;\n        let yCounter = 0;\n\n        if (this.graveYardArray.length > 0) {\n            for (let cards of this.graveYardArray) {\n                cards.setVisible(true);\n                let discardCard = this.add.existing(cards);\n                discardCard.x = startX + (xCounter * xOffset);\n                discardCard.y = startY + (yCounter * yOffSet);\n                discardCard.setOrigin(0, 0);\n                discardCard.displayWidth = gameOptions.cardWidth * 1.3;\n                discardCard.displayHeight = gameOptions.cardHeight * 1.3;\n\n                xCounter++;\n                if (xCounter === 5) {\n                    xCounter = 0;\n                    yCounter++;\n                }\n            }\n        }\n\n        this.input.on(\"pointerdown\", function() {\n            this.scene.stop(CST.SCENES.DISCARD_PILE);\n        }, this);\n    }\n\n    damageCardFilter() {\n        console.log(\"Hello\");\n    }\n}","/**\nThis file is used to create the game and add any scenes.\n*/\n\n// Imports the scenes\nimport {LoadScene} from \"./scenes/LoadScene\";\nimport {MenuScene} from \"./scenes/MenuScene\";\nimport {OptionsScene} from \"./scenes/OptionsScene\";\nimport {CreditsScene} from \"./scenes/CreditsScene\";\nimport {MapScene} from \"./scenes/MapScene\";\nimport {BattleScene} from \"./scenes/BattleScene\";\nimport {BattleLoadScene} from \"./scenes/BattleLoadScene\"\nimport {DiscardPileScene} from \"./scenes/DiscardPileScene\"\n\n// Creates the game\nlet game = new Phaser.Game({\n    width: 1000,\n    height: 800,\n    scene:[\n        LoadScene, MenuScene, OptionsScene, CreditsScene, MapScene, BattleScene, BattleLoadScene, DiscardPileScene\n    ],\n    render:{\n        pixelArt: true\n    }, \n    scale: { parent: 'phaser-container', mode: Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH }\n\n});\n\n// Function to load a font - https://stackoverflow.com/questions/51217147/how-to-use-a-local-font-in-phaser-3\nfunction loadFont(name, url) {\n    var newFont = new FontFace(name, `url(${url})`);\n    newFont.load().then(function (loaded) {\n        document.fonts.add(loaded);\n    }).catch(function (error) {\n        return error;\n    });\n}\n\nloadFont(\"font1\", \"./assets/PixelboyFont.ttf\");","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}