{"version":3,"sources":["src/helpers/config.js","src/helpers/classes/VisualCard.js"],"names":["gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","VisualCard","x","y","scene","sprite","frame","id","cost","setInteractive","input","setDraggable","setOrigin","displayWidth","displayHeight","Phaser","GameObjects","Sprite"],"mappings":";;;;;;ACAA,ADAO,IAAMA,WAAW,GAAG;ACAe,EDCtCC,IAAI,EAAE,CAAC;ACD+B,EDEtCC,UAAU,EAAE,CAAC;ACFyB,EDGtCC,SAAS,EAAE,GAAG;ACHwB,EDItCC,UAAU,EAAE,GAAG;ACJuB,EDKtCC,YAAY,EAAE,GAAG;ACLqB,EDMtCC,SAAS,EAAE,CAAC;ACN0B,EDOtCC,WAAW,EAAE;ACPyB,ADQ1C,CAAC;ACRyC,ADQzC;ACRyC,ADUnC,IAAMC,kBAAkB,GAAG;ACVQ,EDWtCC,SAAS,EAAE,GAAG;ACXwB,EDYtCC,UAAU,EAAE;ACZ0B,ADa1C,CAAC;ACbyC,ADazC,ICXoBC,UAAU;EAAA;EAAA;EAE3B,oBAAYC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,EAAE,EAAEC,IAAI,EAAE;IAAA;IAAA;IAC9C,0BAAMJ,KAAK,EAAEF,CAAC,EAAEC,CAAC,EAAEE,MAAM,EAAEC,KAAK;IAChC,MAAKC,EAAE,GAAGA,EAAE;IACZ,MAAKC,IAAI,GAAGA,IAAI;IAChB;IAAA;EACJ;EAAC;IAAA;IAAA,OAED,oBAAWJ,KAAK,EAAE;MACd,IAAI,CAACK,cAAc,EAAE;MACrBL,KAAK,CAACM,KAAK,CAACC,YAAY,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;;MAEtB;MACA,IAAI,CAACC,YAAY,GAAGvB,mBAAW,CAACG,SAAS,GAAG,CAAC;MAC7C,IAAI,CAACqB,aAAa,GAAGxB,mBAAW,CAACI,UAAU,GAAG,CAAC;IACnD;EAAC;EAAA;AAAA,EAjBmCqB,MAAM,CAACC,WAAW,CAACC,MAAM;AAAA","file":"VisualCard.911e7cae.js","sourceRoot":"..","sourcesContent":["export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 260,\r\n    cardHeight: 410,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\n","import { gameOptions } from '../config.js'\r\n\r\nexport default class VisualCard extends Phaser.GameObjects.Sprite {\r\n    \r\n    constructor(x, y, scene, sprite, frame, id, cost) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.id = id;\r\n        this.cost = cost;\r\n        // this.cardInHand(scene);\r\n    }\r\n    \r\n    cardInHand(scene) {\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth / 2;\r\n        this.displayHeight = gameOptions.cardHeight / 2 ;\r\n    }\r\n\r\n\r\n}"]}