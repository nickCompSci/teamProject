{"version":3,"sources":["src/CST.js","src/helpers/classes/button.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/handCard.js","src/helpers/classes/zone.js","src/helpers/classes/healthBar.js","src/helpers/classes/player.js","src/helpers/classes/enemy.js","src/helpers/classes/cards/toolTip.js","src/helpers/classes/cards/damageCard.js","src/helpers/classes/cards/comboCard.js","src/helpers/classes/cards/reloadCard.js","src/helpers/classes/cards/healingCard.js","src/scenes/battleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","Button","x","y","label","scene","callback","bgColour","padding","setOrigin","setPadding","setStyle","backgroundColor","setInteractive","useHandCursor","on","add","existing","fontColour","color","newX","newY","Phaser","GameObjects","Text","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","DiscardPileScene","key","data","graveYardArray","load","image","gameWidth","game","config","width","gameHeight","height","bg","setScale","title","text","fontSize","startX","startY","xOffset","yOffSet","xCounter","yCounter","length","cards","setVisible","discardCard","displayWidth","displayHeight","input","stop","Scene","HandCard","name","cost","cardType","effect","sprite","visible","setDraggable","Sprite","Zone","setRectangleDropZone","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","HealthBar","maxHealth","health","bar","Graphics","show_health","fillStyle","fillRect","percentage","Player","frame","maxActionPoints","actionPoints","handArray","deckArray","deckTrackerArray","spriteType","keepCards","keepCardsLimit","player","disableDragOnCards","card","removeListener","clickHandler","isBeingClicked","keepingCards","bind","splice","indexOf","clearTint","push","setTint","indexList","includes","index","shuffle","deckSetUp","arrangeCardsInCenter","enableDragOnCards","amountOfCards","i","lastCard","pop","setActive","drawCard","cardInHand","draggable","j","destroy","cardBack","Math","floor","random","shift","Enemy","getRandomHealth","heartText","setEnemyCoordinates","enemySpawn","min","max","Tooltip","wordWrap","setDepth","DamageCard","tooltip","getLabel","target","once","pointer","setHealth","getHealth","damage","setText","enabled","ComboCard","console","log","ReloadCard","sideEffects","heartext","setActionPoints","amount","HealingCard","BattleScene","spritesheet","frameWidth","frameHeight","hud_bg","tileSprite","card_bg","setPosition","playerHealth","chamber","circle","actiontext","getActionPoints","actions","container","discardPile","event","launch","loadCards","endTurnButton","endTurn","keepCardButton","keepCard","dropZone","zone","enemySprite","spawnEnemyOnScene","gameObject","removeTooltip","tweens","targets","angle","duration","background","alpha","dragX","dragY","type","startPosition","depth","showTooltip","setLabelCoordinates","getCost","activateCard","setTimeout","cameras","main","shake","dragend","dropped","character","modifiers","modifier","damage_num","time","delayedCall","damage_event","cannon","grenade","headshot","reload","overload","medkit","kevlar","bottomOfScreen","screenCenterX","yDelta","cardX","selectCardInHand","moveCardsBackInDeck","base_damage","action","damage_calculation","resetDeck","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","LoadScene","start","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AWAP,ADAA,ANAA,ASAA,ADAA,ALAA,ALAO,AcCP,AFDA,AXAA,AYAA,IfAaA,AEAA6B,GFAG,GAAG,KEAK,GAAG;ASC3B,ADAA,AND2C,ASC3C,ADAA,ALDgD,ASEhD,AFDA,AXAA,AYAA,EfAI5B,AEAA6B,IAAI,EFAE,AEAA,CAAC,CFAC;AWCZ,ADAA,ANF2C,ASE3C,ADAA,ALFgD,ASGhD,AFDA,AXAA,AYAA,EbAIC,EFAI7B,IAAI,EAAE,EEAA,EAAE,CAAC,CFAG;AWAgB,ADAA,ANFO,ASEP,ADAA,ALFY,ASAhD,AFGA,AXDgD,AYAJ,EbCxC8B,EFAI7B,MAAM,CEAD,CFAG,CEAD,GAAG,IFAM;AWDY,ADAA,ANFO,ASEP,ADAA,ALFY,AOIhD,AXFgD,AYAJ,EbExC8B,EFAI7B,QEAM,EAAE,EFAI,CEAD,CFAG;AWFc,ADAA,ANFO,ASEP,ADAA,ALFY,ASKhD,AFAA,AXHgD,AYAJ,EfGxC,AEAA8B,YAAY,EAAE,GAAG;AFCrB,AWJoC,ADAA,ANFO,ASEP,ADAA,ALFY,AOMhD,AXJgD,AYAJ,CfI3C,CEAGC,EINiB+D,OJMR,EINiB,AJMf,CAAC;AFAf,AWJmC,ADAA,ANFO,ASEP,ADAA,ALFY,ASOzC,AFAP,AXLgD,AYAJ,ETAxC,AJKA9D,EcAOkB,MAAM,GdAF,AcAK,EdAH,MILD7C,KAAK,EAAEH,CAAC,EAAEC,CAAC,EAAE4F,SAAS,EAAEC,MAAM,EAAC;AKAX,ADAA,ANFO,ASEP,ADAA,ALFY,ALQhD,AYAA,AXNgD,AYAJ,CbM3C,CcAGuH,EVN2C,EUMvC,EAAEjM,MAAM,CAAC8O,IAAI;ALNe,ADAA,ANFO,ASEP,ADAA,ALFY,ALQ/C,AYCD,AXPgD,AYAJ,ECOxCjN,EVNI,GUMC,CVNG,CAAC8C,AUMF,GVNK,CUMD,EVNI,IAAI3E,MAAM,CAACC,WAAW,CAAC2E,QAAQ,CAAC7F,KAAK,CAAC;AKDrB,ADAA,ANFO,ASEP,ADAA,ALFY,ALUzC,AYAP,AXRgD,AYAJ,ECQxCgD,EVLI,AJKKpB,IILD,AUKF,CVLG/B,CAAC,AUKF,GVLKA,AUKF,CVLG,QJKa,GAAG;ASRE,ADAA,ANFO,ASEP,ADAA,ALFY,AOUkB,AXRlB,AYAJ,EbSxCgC,AcAAmO,EVLI,GUKC,CVLG,CAAClQ,AUKF,CVLG,CJKD,EILIA,AJKF,CILG,EJKA;ASTkB,ADAA,ANFO,ASEP,ADAA,ALFY,AOUkB,AXRlB,AYAJ,EbUxCgC,EILI,AUIKmO,IVJD,CAACvK,CUIM,EdCL,AcDO,EdCL,IILM,GAAGA,SAAS,AUIK;AfXvC,AUEoC,ADAA,ANFO,ASEP,ADAA,ALFY,ALahD,AYHkE,AXRlB,AYAJ,CbW3C,GObY4D,ADAQP,AFQb,ADRajE,AWWoBoL,IVH7B,ADRa,AWWoB,CRXnB,AFQbvK,CUGiC1E,CPX1B,IHQD,CUGiC,CAACkP,CVH/BxK,IUGoC,CAACyK,CVH/B,EUGkC;AfV9D,AUCoC,ADAA,ANApC,ASAoC,ADAA,ALFY,ALa/C,AYHiE,AXRlB,AYAJ,ENFxB,ADAM,AHAD,ECUjB,AUCwDC,IVDpD,CAACvK,KUC6D,EAAE7E,IVDpD,EAAE,AUCwD,CAACkP,KAAK,CAACG;AfVzF,AUCoC,ADAA,ANApC,ASAoC,ADAA,ALFY,ALezC,AYL2D,AXRlB,AYAJ,ENFxB,ADAM,AHAD,AWW4E,CAAC,CfRjF1Q,AGAAyE,AESbrE,AJGK+B,KIHA,AJGK,CDZS,AKSbpB,EFTe,AFYR,CIHJ,CAACC,QAAQ,CAAC,IAAI,CAACgF,GAAG,CAAC;AKVA,ADAA,AGAA,ADAA,ALFY,AOUkB,AXRlB,AYAJ,EdCjB,AGAE,AKFzB,ADAA,AFYA,ADZA,AHeA5D,AcJAhC,KAAK,EAAE,CACH6P,GdGO,EAAE,CGfD7P,CGAAA,ECAAA,APeK,EGfA,CGAA,CHAEH,CIAF,ADAEA,AHAC,CGAA,CCADA,AJAGC,CIAF,ADAEA,AHAC,CGAA,CCADA,AJAGgD,CIAF,ADAE4B,AQYZ,EPZY3E,AOarB8K,EXb0B,EGAC,AHAC7H,CIAF,CDAGmD,CCAD,GJAM,CGAA,CHAE,CGAA,WQazB,EACX9D,kCAAgB;ALbY,ADAA,AGAA,ADAA,ALFY,ASiBhD,AFPkE,AXRlB,AYAJ,CCe3C,Cfd0B,AGAE,AEUxB,AJIDJ,EOhBgC,ADAQ,ADCvBiE,AFDuB,AUG/B2J,MRFc,GQEL,CbaN,EAAE,GAAG;ASfe,ADAA,AGAA,ADAA,AIelC,AFPgE,AXRlB,EFG5C,AGDA,AGFuB,ALgBvB3N,AadkB,ENHc,ADAQ,AFYvC,ADZuC,aHiBzB,CDbHrC,CAAC,ACaI,CEdLyE,AFcM,CDbHxE,CAAC,EAAEC,AGDF,EAAEwE,GHCK,CGDD,CHCGvE,CGDDwE,IHCM,EAAEvE,EGDA,EAAEwE,IHCM,EAAEvE,AGDF,EAAEF,KAAK,CHCG,CGDDH,CHCG,AGDF,EAAEC,CAAC,EAAE4E,MAAM,EAAE;AOF/B,ADAA,AGAA,ADAA,AIiBpC,AFTkE,AXRlB,EIArB,ALiBvBvC,AafkB,EdCkC,AUDnCiI,ADAAX,ANA8C,ASA9CmB,ADAAL,AHFb,ADAA,AFWH,ADXG,AWiBJ3H,IAAI,GVJJ,AJIS,AcAF,ELfmB,ATef,CQfgB,AEAA,CCAC,AXef,AcAF3B,MAAM,CAACsP,IAAI,CAAC1N,GPjBb7C,ADAAA,CHAAA,EWiBmB,CVJhB,AUIiB,CPjBf,ADAA,CHAA,CIAEH,ADAAA,CCAC,ADAA,AHADA,CAAC,CIAEC,ADAAA,CCAC,ADAA,AHADA,CAAC,CIAEC,ADAA2E,CHAA5B,IIAK,CDAC,AHAD,EGAGqD,AHADnD,KGAM,CHAA,GAAE+B,oBAAoB,CAACjC,KAAK,EAAEE,MAAM,CAAC;ASQX,AXRlB,EQElB,ADAC,AGAC,ADAD,ALA3B,ALgBAZ,AafA,EdAoD,AGDW,AKD3D,ADAA,AHAApC,AFEKqC,EGWL,GDbK,CIAAlC,ADAA+C,AFaD,ADbEvC,CCaDiF,EDbI,CCaD,ADbEhF,AHiBF,CIJCyE,CJIC,COjBE,CDAC,ADCLrF,CCDM,CCAC,ADAA,AFaD,AHXO,CKFL,CFaA,ADbE,CECL,AQCH,ERDKH,CAAC,EAAEC,CAAC,EAAE4E,MAAM,EAAEyB,KAAK,EAAE,OFDZ;AHkBhC,AYXkE,CZWjE,CSjB6B,ADAC,AGAC,ADAD,ATCF,EFCrB,AGDA,AIDA,ADAoC,AFApC,AUCU,ENDNtG,CAAC,EAAE,CDAF8F,AHAAX,CIAI,KDAE,GAAG,CHAC,GAAG,EGACgE,KPEbhJ,AGDAA,CCDoB,CAAC,CAAC,EJEjB,AGDA,EHCEH,AGDAA,CHCC,AGDA,EHCEC,AGDAA,AIDkB,CPEjB,AGDA,AIDkB,EPEhBC,AGDA2E,AIDkB,EAAE,EAAE,CPEjB,AOFkB,CJCjB;AFgBhC,AYXiE,EHL9D,ADAA,AGAA,ADAA,ATAyB,EFErB,AGDA,AIDA,ADDoC,AFCpC,AUAU,ENAN5E,AHaJ,CGbK,EAAE,CREFK,AGDAmE,AIDAmC,AHAAxB,IDCI,GHCG,AGDAX,GHCG,AOFA,AHAA,CMAPA,APCQ,CMDRA,AEAAA,CCAAA,ALAU,AHAA,EMAN,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,AECR,CPDmB,CGAP,ANAQ,CKAR,AEAA,APAS,CMAPC,AEAF,ARAU,CKARA,AEAAA,CCAAA,MFAQ,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAEzE,AEAF,CHAEA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CDAEH,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEC,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAE4E,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE,AEAF,CHAE,AEAA,CCAA;ACKD,EXJ9D,EQD+D,ADAA,ANE3D,ASF2D,ADAA,AHC3D,ADAA,ADDA,CECC,CREG7E,AKWJ,ASZIyC,CdCC,EAAE,AcDA,CdCC,AGDHiC,AIDA/D,AFaD,CAACoF,ASZIrG,GXAA,AEYD,CAACwG,EFZGxB,EWAA,CAAC/E,CXAG,GIDG,AFaD,CAAC,CEbE,AOCF,CAACC,GRFdO,AJCI,GGaiB,CAAC,CCdjB,EAAEH,CAAC,EAAEC,CAAC,EAAE4E,MAAM,EAAEyB,KAAK;AOK0B,IHLC,ADAA,ANG3D,ASH2D,ADAA,AHE3D,ADCA,ADFA,AFCA,AFDU,AYEV,CAAC,CdCGrG,AKWJ,CLXK,EAAE,CGDF2E,AKDApE,ADCA4I,AFYD,ACdCvD,AFCAR,CCaAU,GAAG,CAACI,CFZE,GAAGvB,AIAA,ADFA,CECC,CAAC,AJAA,CGCCzE,ADFA,CDcA,CAAC,ACdC,AFCAA,CDCC,EKDCG,ADCC,CAACQ,AFYD,CAACd,ADbC,CCaA,ADbCc,CGCC,CAACyC,AFYD,CDbE,CIAA,AJAC+B,CIAAtF,CAAC,ADCC,AFYD,CEZEG,AFYDF,CGbC,AHaA,EAAE,EEZG,AHDA,CGCC8C,AFYD,CGbAzC,AJAE,CCaA,EEZG,AFYD,CEZE0C,AFYD,GGbE,CAAC/C,CAAC,CAAC,ADCE,CAACgD,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAK6C,MAAM,EAAE;AMEpB,ECD9D,EdCI,AUJA,ADAA,ANGA,ASHA,ADAA,AHEA,AFDA,AFAwC,AFD9B,CFIT,COF8E7E,IJC1E0D,AKDAlE,AFDAqF,CCC+E,EAAE,GDD3E,EHEE,AKDA,ADA8E,CCA7E,AFDA,EHEEnB,IGFGkB,IHEK,ADFlB,CQDApB,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,ALCkB,EIDhBC,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA,EDAEzE,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEH,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE4E,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA;AEIG,ECD7D,EdEG,AUJA,ADAA,ANEyB,ASFzB,ADAA,ALCA,AFAA,EIAgBnE,ADA6E8C,AFc7F,AHdIf,GAAG,CFGFlC,AUJAsJ,ADAAA,AGAAA,ADAAA,ALCAtD,AFAAhB,CFAI7F,GKA4F,EAAE,CGD3F,ADAA,AGAA,ADAA,EXIE,AEHF,CFGG,AUJA,ADAA,AGAA,ADAA,ATCFC,CFGG,AQHe,ERGb,AQHe,CEDd8J,ADAAA,AGAAA,ADAAA,CLCC,CNGC,AEHF,CFGG,AEHF3J,CIAG,CAAC,AFAA,CAACK,EIAiB,GJAZ,CAAC,IMDL,ADAA,AGAA,ADAA,CDACA,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEH,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,GDAC,ADAA,AGAA,ADAA,MDAKmE,ADAAA,AGAAA,ADAAA,YDAY,ADAA,AGAA,ADAA,EDAElE,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,MDAK6J,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA;AEGhB,EVA9D,EHEI,AUJA3J,ADAAA,AGAAA,ADAAA,AJA6G,ADC7G,AFDgC,AFChC,AYAH,CPDiH,ALC7G,CMD2Cc,ADAmE,AFe/G,GKfK,ADAA,AGAA,ADAA,CXIAT,AUJCM,ADAAA,AGAAA,ADAAA,ANeF,ACdC0F,CED4C,AHe5CT,EKfI,ADAA,AGAA,ADAA,AHA0C,CEAzChF,ADAAA,AGAAA,ADAAA,ANeF,CAACmF,KLXM,CAAC,CUJE,ADAA,AGAA,ADAA,AHA0C,AFC3C,EDcC,CAAC,ACdC,ENGC5F,IMHIiG,EDcE,CLXC,AKWA,CLXCvG,CAAC,EAAE,MAAKM,EMHG,KNGI,CAACL,CAAC,AUJtB,ADAA,AGAA,ADAA,CXIuB;AaFW,EVA7D,ACAD,AFAA,EFGI,AUJA,ADAA,AGAA,ADAA,AJAA,ADCA,AOEK+K,ACHR,ENDiEtB,AHgB9D,ILXKjJ,AUJAgI,ADAAA,AGAAA,ADAAA,AJAAW,AFeD,ACdC3C,CDcAV,ASbT,GNH0E,AHgB9D,CAACI,AQZO,CLJwD,ERK3D,CAAC,AOJA,ADCA,CIDC,ADAA,AGAA,ADAA,AJAA5F,CGACJ,ADAAA,AGAAA,ADAAA,CLCC,CDcA,CAAC,ACdC,EIDE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA,CNeA,CEfE,AFeDH,CEfE,AFeD,ASblB,CPFoB,EAAE,AFeD,CEfE,AFeD,CEfE,CFeA,IAAI,CAACC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EDdrD,ASEmB,AXFnB,EQD0B,ADAA,ANC1B,ASD0B,ADAA,AJEvBE,ADAA,ENEgBO,AKchB,ASfA,ENJyEuC,CDGpE,CAACnC,AFgBFsF,AChBCM,AQCD,CAAC9D,ENJyE,ADGrE,CAAC7B,CCHsE,AMIvE,CAAC8B,GRDI,CDgBA,CLdiB,AcDhB,CPDG,ADAD,AQCD,CdCiBxC,AKchB,CChBE,EDgBC,IAAI,ASfA,EAAE,ETeE,CAACyF,MAAM,GAAG,IAAI,CAACD,IEhBnB,KFgB4B,CAAC,ASfA,CAAC;EJF1D,ADAA,AGAA,ADAA,AEEoB,EbCyB,AGH5C,AIGG,ADDA,AFFH,AFAA,CFG6C,CAAC,AQLwC,AHoBnF,ASfA,IPAKwD,AFeD,AChBC1C,AQCD,CXDR,AEgBSZ,ASfAnD,GTeG,CAACsD,ASfA,CAACrD,KAAK,CAAC,ETeE,CAAC,CChBE,GCCG,ADDA,CCCC1C,CJDlBA,AGAmB,AQCD,ETeE,ASfA,CTeC,CEfE,CJDlB,AICmB,EJDjB,uBWCyC,CAAC;EJH3D,ADAA,AGAA,ADAA,AEGD,EbCI,AQNoF,ADMpF,ADDA,AFHH,AFAA,CMFwF,CLKrF,AKLsF,AHqBtF,ASfA,IdAKQ,AGDD,AICC2I,AFeD,AChBC3G,AQCD,CXDCmC,AEgBAiB,ADjBT,AFAA,AYESnD,GTeG,CAACuD,ASfA,CAACtD,EXDE,EICG,CJDA,AWCA,CXDC,AICC,AOAD,CTeC,CLfE,AKeD,AChBC,CNCE,AaDX,AXDTH,CCCmB,CAACoC,AGAC,CDgBA,CAAC9E,AChBC,AJDnB,CGiBmB,CHjBjB,CYEmB,CTeC,CFhBC,AEgBA,ASfA,ETeE,IAAI,CAACC,CAAC,ADjBlB,GCiBqB,CAAC,EAAEmG,UAAU,EAAE,EAAE,CAAC,ASfA,CAAC;IJJ7D,ADAA,AGAA,ADAA,AHDGjG,AHqBJ,AChBI,AODU,EbCaS,AGAvB,ACDA,AFAA,AYEA,GNNK,CLKD,AKLEE,AFKD8F,AFDD,AFAA,AYEA,CXDCjG,ACDA0E,AFAA1C,AYEAC,ENNI,CAAC7B,CMMD,CAAC8B,GdD0B,CMArB,CNAuB,AcCvB,CNNG,AJIF,AUEA,CRDE,AFDD2C,EDCE,ADDA,ECCE,CCDC,AFAA9C,EEAE,AUEA,CRDE,CJDA,AYEA,qBNNF,MMM6B,CAAC;ETezD,ELhB6C,AUJ7C,ADAA,AGAA,ADAA,AHAG,ADMA,ADDA,AOFU,AXCd,CFA+C,CAAC,AGC5CvC,ACDA,AUEA,INNK2E,AFKA+B,AFDD,AUEA,CJJR,ADAA,ANGS,ASHT,ADAA,APESxB,AUEAzC,CXDCyB,GWCG,CAACxB,CXDC,AKLC,CLKAkC,CGAE,CELC,CMMA,CRDE,AFDD,AUEA,CVFCU,CECE,CELC,IKId,CVCkB,AWCA,CJJjBtF,ADAAA,ANGkB,ASHlBA,ADAAA,CPEmB,AUEA,CVFC,CAAC,CDCC,COHjB,ADAA,ANGkB,ASHlB,ADAA,APEkB,EMFhB,ADAA,AGAA,ADAA,EPEoB,CAACgF,UAAU,CAAC,OUEO,CAAC;ETczD,AHhBA,EFCG,AQJA,ADKA,ADAA,EIHA,ADAA,ANGA,ASHA,ADAA,APEA,ASAI1C,ACEJ,GDFO,CbAF5B,AGCD,AKLC8I,AFKA7C,AFDD,AUEA,CXDCvG,ACDA8E,ASAI3F,ACEJkD,CdFE,CAAC,EcEC,CAACC,ENNG,CAAC,AKIF,CVCE,AKLC,AKIFlD,CVCE,AKLC,AMMD,CVFC,AUEA,CVFC+F,CDCC,AGAC,ENDE,AGCD,AUDD,CVCE,AGAC,AODF7F,CbAG,AGCD,AGAC,IQCG,CVFC,CAAC,AUEA,IVFI,CAACG,CAAC,GAAG,IAAI,CAACqE,KAAK,CAACsB,OAAO,CAAC1C,CUEC,CAAC,GVFG,GAAG,CAAC,EAAE,IAAI,CAAChD,CAAC,CMFxDE,CDAAA,AEAAA,CCAAA,ARE2D,GMFtD,CDAA,AEAA,APE0D,CQF1D,ARE2DkE,KAAK,CAACsB,OAAO,CAACxC,MAAM,GAAG,CAAC,EAAE,IAAI,CAACkB,KAAK,CAACsB,OAAO,CAAC1C,KAAK,EAAE,IAAI,CAACoB,KAAK,CAACsB,OAAO,CAACxC,MAAM,CAAC;ACelK,EEbD,EGHA,ADAA,AGAA,ADAA,AHHqB,AFMjBhD,AFDJ,ASAI,AXFH,CWEI,CbDsB,AcGvB,GRDK,CAACW,AQCF,CAAC8B,EdHwBxC,AMEpB,CAACW,CQCD,CAAC8B,KdH2B,AcGtB,CRDG,AQCF,CdHuB,OcGf,EAAE,qBRDF,MQC6B,CAAC;ATYzD,EKhBA,ADAA,AGAA,AJFD,AJIC,ASCD,EbF2C,AMEd,AJH5B,AYKD,EdJ4C,AGGxC,KDFJ,mBAAU;EMJT,ADOD,ADDA,AODC,ACEA,EdHG1C,AUFH,ADAA,AGAA,ADED,APAC,EDGG,ADFA,GFDK,CAACW,AGGF,ADFA,CCECqD,ADFAvB,EFDI,CAAC7B,CECD,CAAC8B,KAAK,CFDG,AECF,CCEC,GAAGtB,QDFQ,EAAE,SCEC,CAACG,OHHR,EGGiB,MDFc,CAAC;EKG5D,ADFC,ENF4B,AUF5B,ADAA,AGAA,ADGD,AHLC,AJIA,ASCA,ACEA,EXCG,ADFA,ICEI,ADFA,CQFR,ADAA,ANIS0C,ASJT,AREA,AFASxB,IAAI,CAACC,KAAK,CAAC,ECEE,GAAGtB,GDFG,EAAE,CQFjBpB,ADAAA,AGAAA,KFAK,ADAA,AGAA,EFAE,ADAA,AGAA,EREE,IDEc,CAACwB,UAAU,EDFU,CAAC;EFD1D,AWAA,AJGA,EJCA,AKTC,AFMA,AODA,AXED,AYAC,EJFG,ADAA,AGAA,AREA,IMFIsF,ADAAA,AGAA,AREA,CILR,AJKS5B,ASAT,ACEA,GJJY,ADAA,AGAA,CAACT,EFAE,ADAA,ICAI,ADAA,AGAA,CAACmF,AREA,CAACvE,ESAhB9C,GDFqB,AREA,CSAjB,ACEA,CVFmB,CSAjB,CDFmB,EJHhB,MIGwB,EAAE;EZAvC,AGIA,ADFA,ESFD,AJGA,ADFC,EIAG8H,ADAA,ADHA,AJKA,ASAA,ACEA,EFJIrK,EHAA,ADHA,AJKA,AUEA,CNPC2E,AFKT,AFASO,AUEAlF,EJJE,AEAE,CFADsK,ADAA,AGAE1D,CHADnC,CKIC,CJJC,AIIAqL,CJJC,AFHA,EIGI,CHAD,AGAE/F,AJHF,CEGC,ADAAH,ALEA,AUEA,CJJC,ANEAtE,AUEA/F,ENPE,GCGG,EGAI,CAAC,AEIP,CLJM,ALEA,AUELC,CVFM,CAAC,CQFG,CAACiF,AREF,CEAjBmC,CQEc,CAAClH,CLJM,ALEA,CAACuF,CKFC,AGAE,CAAC0F,ANEpB,EAAE,AQEa,CAAC,GFJU,CAAC,CRED,CAAC;IJHjD,AUED,APEC,AQJD,AHDA,ADIA,ALDC,AYID,ERFI,AFAA,ASAA,EJFI,AGAA3K,EREA,ASAA6D,CFHR,AJGA,AHASqB,EKFI,AGAA,CAACuF,CCED,EJFIxC,CAAC,AIEF1F,GJFG,CAAC,AGAE,AREF,ASAA,CDFG2H,AREF3E,CKFC0C,CAAC,GAAGlG,CFEjB,CKFqB,CAAC/B,EDDlBA,APGkB,CAAC,EQFI,CAAC4G,CDDnB,APGkB,CAAC/G,COHjB,APGkB,CKFP,CAACuC,CGAW,AREF,CQFGuD,GREC,CAACzB,EQFI,CAAC,EREA,CKFP,ALEQsB,CKFP5B,MAAM,ALEQ,CAACd,CKFPmF,CAAC,EAAE,CLES,CKFP,ELEU,CAAC,EAAE,IAAI,CAACnI,CAAC,GAAG,IAAI,CAACoE,KAAK,CAACsB,OAAO,CAACxC,MAAM,GAAG,CAAC,EAAE,IAAI,CAACkB,KAAK,CAACsB,OAAO,CAAC1C,KAAK,EAAE,IAAI,CAACoB,KAAK,CAACsB,OAAO,CAACxC,MAAM,CAAC;EMFlK,AFHA,AMOA,EdNA,AGIA,ACCD,ASAA,AXHC,EUCG,ADDA,AJGA,ADAA,IGFQjB,AEDJ,ALGA,CNHR,AGIA,AGDS8E,AJDT,EKCW8B,CIHC,CAAClE,EJGE,CAACmE,GIHG,CAAC4B,CFCH,AFEI,CEFHpI,AFEIuG,IAAI,CAACE,ADAA,AJDlB,CCEC,CGDmB,EKHE,CXAjBhI,COGmB,CEFH,CAACoH,AFEI,CEFH,AEDI,CFCH,CAAC4B,AFEI,EIHE,AJGA,CAAC,CPHjB,ASCc,AEDI,CFCH,CTDb,YSC0B,EAAE,UAASC,OAAO,EAAE;ELEvE,ASAA,ACCA,EJJA,AFHA,ADOD,EPHI,AGIA,ASHA,ANC0B,AJA1B,ESFI,EXAA,AEEAnH,CFFCrC,CSCO,CNGL,GMHS,CAACyJ,ANGN,CAACzF,CHJC,AEEA,CFFC,EGIE,ADFA,IODU,APCN,CODO,APCN1B,IODU,APCN,CODOoH,APCNnH,MAAM,CAACC,EODQ,EAAE,CPCL,EODQgE,GHG7B,CGHiC,CAACrC,EHG9B,CAAC6B,GGHmC,CAAC2D,KHG3B,CGHiC,CAAC;AKEpE,EPAA,AHDA,AUlB0BhJ,EJe1B,APMD,AKTC,AKMA,EDAG,AVCA,EFHeH,AWCXd,ALG2B,AQpBF,CAACoE,CZmB1BrB,CQFR,AFHA,CCIgB,CTFQ,AWCX,CAAC6D,AGjByB,CdgBb,CSEN,CAACqC,GEDD,ATEF,CSFGc,ETEA,GODS,CAACG,APCN,CAACtH,ESFI,CDAnB,ACAoB,CTED,CAACC,CODO,CAAC,AEDJ,CAAC4B,AHHpB,GCI2B,APCN,CODOuF,APCNhH,ESFI,CAACwH,GTEC,GODS,EAAE,CAAC,EEDF,CAAC;APCtD,AUlBsC,EXqBtC,ACzB6BvJ,EGuB7B,AMDA,EbFkC,AUE/B,AECA,AJJA,AFK+B,AJC/B,CFLgC,CAAC,AWE7BjB,APtB4B,CAACkB,CImB7B,ANMA+B,CMNC0B,AKKT,CJAgB,APCN,CQHC,ACAE,CAAC8F,CTGD,EODQ,CDLL,CNMC,CEzB+B,AFyB9B9J,CODO6H,ADLN,AJnB8B1D,CKwBvB,AEFJ,CAACoF,ATGF,CAACxH,CODK,ALxB0B,CKwBzB,ADLJ,ECKM8F,CAAC,APCJ,CSHG,AEEpB,AXCkB,CSHGxI,ATGF,CODK+B,CPCH,EAAE,CSHG,ATGF,CSHG6E,CTGD,KSHO,CAACjB,CFEL,CAACvD,IEFU,ATGF,CSHG,ATGF,CAAChC,MODE,CAACwD,EPCM,CAAC,CAAC,EODF,APCG,CAAC,CODF4E,APCG,CODF,EAAE,EAAE,WCFe;ANtB5B,IJqBrD,AUEA,APEC,AKLD,ADGC,EKCG,ACCA,AXCAvF,ESHI,ALCJ,AJEE,CAACC,CWDC,CNAR,AMAST,GJAWV,CIAP,CAACW,CXCC,CAAC,CAAC,CAAC,CWDC,CAAC,KJAK,AIAA,CJACN,CIAC,ONAXgH,GAAG,CEAmB,CAACZ,AFAlBa,CEAmB,CAAC,CAACnF,AFAlB,EAAE,GEAqB,CAACiG,AIAA,CAAC,MJAM,GAAG,AHDrB,KGC0B;ETJ9D,AUEA,AFHA,ELKA,ESAG,ADDA,AJEA,AMAA,AXEA,IIJiC,AOE7B,AXEAhH,CCDR,AUDSV,CJAO,CFALkG,CDFE7B,COEA,AXEA,CWFCpE,CNAC,CAACkG,ADFC,AJID,GWFG,CAAC,AXEA,CKFC,ALEAjI,CKFCgI,ELEE,CAACvF,CKFC,CAACyF,CJCjB,CDCmB,CAAClG,EWFE,CNAC,CMAC,CNAC,IAAI0G,ALEA,GKFG,ALEF,CAAC,EKFID,ALEF,CAAC,EKFI,ALEF,GKFK,CAAC,CAAC,CAAC,GAAGA,EMAE,CNAC,AMAA,EXEA,EAAE;EQL7D,EVFA,AYKD,AJNC,ADOD,EJCI,AUDA,EXC2D/F,EODnD,AHFJ,AOEA,CJAK,AIAJZ,CJAK,CNCH,EUDE,CAACC,AXCyD,CCAxD,CAAC6B,ADAyD,GWDtD,CVCC,AUDA,aAAa,EAAE,0BAA0B,CAAC;AHJ7D,EAnBkCF,AEsBlC,ALCA,EPNA,AGQD,AKTC,EGMGrE,AEEA,AXA2E,CAAC,COAxE,APAyE,EIFzE8G,AOEA,CbLR,AWGS,AHJT,AKMSrE,CFFCmE,ELAE,CAACG,AOEA,CAACrE,EFFE,CDtB2B,ACsB1BgI,EEEE,CAAC,KAAK,EPFE,AOEA,CPFC,INHd3J,AWGkB,CAAC,GXHf,CWGmB,CXHjBC,AWGkByD,AHJlB5E,CAAC,EAAEC,AFIkB,CNHjB,AQDA,CFImBgH,CNHjB,AWGkB,AHJlB,CGImB6D,ELAE,CAAC3D,GKAG,CAAC,QLAQ,CAAC,SOES,CAAC;AHxB5B,EPyB1C,ESHA,ADCD,AJAC,EPHG,ASKA,ADNA,AKMA,AXAA7D,COAC,GTLG,AQDA,CRCChD,AQDAN,ANMA,CMNC,ANMAO,COAC,EDNEP,CAAC,CCMC,CTLC,GAAG,ASKA,APAA,COAC4E,APAA,GAAG,EAAE,COAC,APAA,COACmF,APAA,MOAM,IAAI,KAAK,EAAE;EEF3C,EREA,ASHA,ALCA,ECHG,AKMA,AXCA,EFNI/J,ASKA,CTLC,CQDD,AFIA,AOEA,AXCAyD,CFNGvC,AYGX,AJJSjB,ADKT,AMCS2C,CLNC,CCMG,ETLE,AQDF3C,AKMA,CLNC,AKMA4C,AXCA,CODGuF,EAAC,APCD,EWDE,AXCA,CODA,AIAC,CJAA,EAAEA,EAAC,GAAGlG,CGFf,CCEmB,EAAE,MNDZ/B,GECW,CAACoC,CFDP,EAAE,SECiB,CAACwB,MAAM,EAAEqE,AIAU,CAAC,CJAV,EAAE,EAAE;INDzD,AQFA,AHFD,EIII,ALCA,AMCA,AXCA,EFNInI,CAAC,CSKGiC,AGFJ,ALCA,ADDA+E,AOEA,AXCAvD,CFNGvC,AGKX,AIDSlB,AMCA2C,CNDC,EKDE,ANAA,CMACgC,ALCAzE,ADDAiH,AOEA,CAACvE,AXCA,GAAG,CKFC,CKDC,ALCAE,AMCA,AXCA,CUHCgH,ACEA,CJAH,CAACxH,CFDK,CAACS,EKDE,CNAC,GHEf,ASFkB,ALCA,ADDA,CCCCG,EMCE,CJAH,CAACiF,AHFI,AOEA,EJAH,AFDK,CECJ,AGFK,CHEJ8B,CGFM,ALCA,GAAG,KECA,CAAChI,aAAK,CAACK,MIAmB,CAAC,KJAR,CAAC6F,EAAC,CAAC,CAAC+B,SAAS,EAAE,GAAGlD,IAAI,CAACrC,MAAM,CAACwF,MAAM,CAAC;EDNlG,EGEA,EXAG,AGKA,AIDA,AMCA,AXCA,CFNC,CYGG,EHEIlI,AFDJ,AMCA,AXCAyB,CSJR,AJES3D,AMCA4C,CNDC,CJCC,ESFI,ALCFzC,AMCA,CAAC0C,CVAC,ADCA,CCDC+B,EIDE,ALEArD,CKFCwB,AMCA,CAAC,CJAH,CAACR,ANAI,CIDC,CAACS,IMCI,CFHjB,CJEmB,AMCA,CNDCC,GECD,CAACmF,CFDK,CECJ,APCH,CODI,APCH1G,CODI0H,AFDK,GAAG,KLEH,CODI,CAACiB,CPCF,EAAE,IODO,CAACnI,EIAO,CAAC,SDFW,CHEd,CAACK,YAAY,CAAC6F,EAAC,CAAC,CAAC+B,SAAS,EAAE,CAAC;EDPrF,ELQD,AIDA,EPJI,AYGA,ADDA,AEGA,AXCA,CUHC,CHEG,ETLA,AMGA,AOEA,AXCAvG,CFNCpD,AaKAoC,EDFE,ADDA,EEGE,CAACqI,CDFC,AVGA,GAAG1J,CFNC,AYGA,CZHC,AYGAqD,IZHI,CAACtE,AaKA,CDFC,ACEA,CDFCyJ,KZHK,CAAC/J,AYGA,ACEA,CbLC,CaKC,CbLC,CYGC,AVGR,CAAC2B,EFNU,CAACrB,IYGI,EAAE,CZHC,AEMR,CFNSL,CAAC,CAAC,AEMR,EAAE,YSJoB,SEGS,EAAE;ALR3E,ELQA,AKjCwBmB,ADgCxB,EPHD,AWEA,EFGI,APCA,EUHI,AJhCuB,AKkCvB8J,CLlCwB7J,CFgCxB4F,AJGApD,IIHI,CMAG,ANAFsD,GOEK,AXCF,EMnC2B,AKkCvBjF,CLlCwBZ,ANmCzB,CAAC,GMnC4B,EFgCvB,GAAG,GOEH,CPFO,AOENa,CPFOkF,UOEI,EPFQ,CAACC,IAAI,CAAC,IMAM,ANAF,EAAEL,IAAI,CAAC;AEhCd,ER6B/C,AWEA,EFID,ANFC,AIDA,EKCG,AVGA,EWDIkE,EPFAlE,AJGAnD,IIHI,CAACjD,EAAE,CAAC,AJGA,CWDG,EAAEqB,AXCF,CAAC,SIHS,EAAE+E,COEL,CAAC7E,EPFQ,CAAC+E,YAAY,CAAC;EGEhD,AEJA,EXFA,AGIA,ASCD,ALFC,EMIG,AXEA,CWFC,CPFD,AOEE,EXEE,CCHR,AIDA,GLIY,CAACxE,cAAc,CCHjB,ADGkBoB,GKJf,GLIqB,GAAG,CAAC,EAAE;ASPvC,ECGA,AD9BmCS,EXyBnC,ASMA,AIED,EVDI,AIDA,ADDC,EJImC,EKHhC,CPJR,AOISM,EJCE,IAAI,CAACH,AIDA,CI/B4B,EJ+BzB,CAAC,IJCI,AIDA,CAACG,MPJZ5D,COImB,GPJf,EAAEC,IAAI,EAAE,MEQC,IAAI,CAACwB,cAAc;ASnCD,EC8B3C,ACGA,EJFA,ANED,EHLI,AOIA,EDFC,ENFG,AOIA,ALGqC,CFPpC,ASKT,AFDSyG,IPJIlI,IAAI,COIC,CAAC4D,EPJE,CAAC,IAAI,AOIA,CPJC,ESKhB,AFDkB,CAAC,CPJC3D,GOIG,CPJC,AOIAiI,IPJI,CAAC,EAAE,EOIE,CAACtE,OAAO;AKFnD,ETGA,ASjCoCN,ELiCrC,AMAC,EJCG,AHJC,ENDG,AEMqC,IFNjC,CAACjE,ASKF,MGlCkC,GZ6BvB,CAACW,IAAI,EAAEC,IAAI,CAAC,+BSK6B;AGlClB,ELiC5C,EEED,ANFC,AUAA,EbHG,EMAC,EJKG,CWAR,kBAAS,iCXAsC;EOA9C,ETJD,AGEC,AIAA,EDHI,AOKI,KVAT,CDA+C,IAA9B6C,KAAK,OCAdU,IAAI,EAAE;EHJb,ASIA,EFFA,ADFD,EHKI,AUAA,IVAI,AUAA5B,CVAC4B,AIDT,CLCYV,GCAC,EDAI,CCADU,ADAET,CWAD,GVAG,AUAA,IAAI,CAAClB,CXAG,CAAC,EWAA,CAACC,CXAG,CAAC,EKDlB,EMCoB,CAACC,KAAK;AJDzC,ETJA,AS/BmCuB,AH+BnC,EHMD,EIDI,AMCA,IAAItB,EXAI,CKDD,GLCKgB,CKDD,CAAC0C,CEpC4B,CIqC1B,GAAG,IAAI,AXAE,CKDD,AMCA7D,EXAI,EWAA,CAACC,CXAG,CAAClC,GAAG,CWAD,AXAEC,CWADoC,MAAM,CXAG,CAACa,KAAK,CAAC;AFNrD,AS/B2C,ETDZ5C,AGsC/B,EIAD,ADNC,EOQG,EbxCkC,CAACC,CawC/B+J,EXDIlH,IWCE,GAAG,CbxCiC,CAAC5C,EawC9B,AXDE,CWCDR,AXDEd,CFvC+B,AEuC9B,EWCA,CAACqL,AXDE5H,MAAM,GAAII,CWCF,CAAC,CAAC,EAAE,CAAC,EAAEf,AXDG,GAAGa,MWCG,CXDK,CWCHT,UAAU,EAAE,KAAK,CAAC;AbxCjB,EGsCtD,AIAA,EDNA,EOSG,IAAIoI,CPPR,CJMYpH,KWCG,GAAG,GXDK,CWCD,AXDEjE,CWCDa,AXDE,GWCC,AXDE4C,CWCDb,IPPdoE,COOmB,AXDE,CWCD,CAAC,CPPjB,AJMqBnD,CWCF,CPPjB,AOOkB,EAAE,IXDO,GAAGF,MWCG,CAAC,AXDI;ACFxD,EAtCiCxC,EIsCjC,EDHG,AOOA,EV1CoC,CAACC,CGmCjC4F,AOOA7D,EAAE,AXDEc,EINA,CAACkD,AOOA,IAAI,CV1CmC,AU0ClCtG,CV1CmCkE,EU0ChC,AXDE,CWCDH,AXDEtE,GCzCmC,EGmChC,COOC,CPPC,AOOA,CAAC,CXDG,CWCD,AXDE,CWCD,AXDE,EWCA,AXDE,CAAC,CAAC,UWCQ,CAAC;AV1CW,IIsC1D,EMKG6K,EPPI,GCIR,CMGU,AXDElH,CWCDb,QAAQ,CAAC,CAAC,AXDE,CWCD,AXDEc,QKFZ,ILEwB,GAAG5C,mBAAW,CAACG,SAAS,GAAG,GAAG;MKD9D,AMIA4J,EPRI,IAAI,AJMApH,CKFD,ADJE2C,AOQF,CAAC0E,GNJG,CAACzF,IDJM,CAACyB,AJMA,CKFD,ALEEnD,CWED,CAACtB,GPRK,CAAC,IAAI,CAAC+D,AOQF,EXFI,CWEH,CAAC,CXFKtF,CWEH2B,GPRO,CAACsE,MOQE,CPRK,AOQJ,CPRKP,IAAI,CAAC,CJMP,CINS,AJMRtF,CINS,CAAC,QJMA,GAAG,GAAG;IKDpE,EMII2J,EPRIrE,IAAI,AJOApD,CIPC4D,AOQF,CAACpE,MXDQ,EIPE,AOQF,AXDE,CWCD,CPRG,IOQE,CAAC;ENJ1B,IMKGD,EPRI6D,AOQF,CAACsE,GPRK,AJOA,CIPCnE,GJOGvD,IWCE,CAACf,GXDK,GIPG,EJOE,CIPC,AOQF,AXDE,EAAE,CWCH,CAAC,CPRK,COQHI,UAAU,GAAC,GAAG,CAAC;INL9C,EDFG,AOQAE,CPRC,COQC,CAACC,IPRI,CJOKQ,GWCD,CAAC,IAAI,AXDI,CWCH,EXDM,CAAC;IKL3B,EMQG,EPTI,EOSA,CNNR,AMMSkD,CPTG,EJOIjD,EIPA,CAAC+C,AOSF,GAAG,EXFM,EWEFR,AXFI,EIPA,CAACtC,GCGjB+B,GDHuB,GCGjB,ADHoB,ECGlB,CMMU,CPTY,AOSX,CPTYgB,GOSR,EAAE,CAAC,EAAE,CAAC,EAAE,GPTc,EAAE,AOSX,CAAC;MNL3C,AMMA,INNI,ADHI,AOSJ,CNNChB,AMMAiB,CXFG,EIPI,CAACF,ECGF,AMMA,CAAC0E,ENNEzF,IDHQ,CAAC4B,CCGH,GDHO,AOSJ,CPTKT,AOSJnE,IPTQ,CAAC,IOSA,GAAC,GAAG,EAAEI,UAAU,GAAC,GAAG,CAAC;INL1D,EMMI,IPTQ+D,AOSJ,AXFA,CWECF,GPTO,CAACK,EOSF,CAAC/D,QAAQ,CAAC,CAAC,CPTK,AOSJ,GPTO,IAAI;ECGrC,MLIQ,EING;ECEX,IMQG,IPTQ4D,AJKH,IILO,CAACU,OAAO,CAAC,QAAQ,CAAC;ACCjC,EAjD8BvG,IM0D3B,EN1DiC,ADiD7B,AJIC,CKrD6BC,WAAW,CAAC2D,MAAM;AAAA,MDkDpD,AOSA,IXNK;IIFT,EOSI,EXPK;EIFR,IOUG,AXPA;IIHH,EOWG,AXNA,IAAI,CAACX,KAAK,CAACxD,EAAE,CAAC,aAAa,EAAE,YAAW;IIL3C,EOYG,EXNI,EWMA,CPVR,AOUS2K,CXNG,CAACrL,KAAK,CAACmE,IWME,AXNE,CAAC5E,EWMA,IAAIkG,EXND,CAACjG,MAAM,CIJdQ,AJIeL,KIJV,EAAE,COUU,CAAC,GXNS,CWML,AXNM,EWMJ,IAAI,CAACiH,MA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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","// import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.setInteractive( { useHandCursor: true});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    setFontColour(fontColour) {\r\n        this.setStyle({color: \"#202529\"});\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 130,\r\n    cardHeight: 205,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemy = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3,\r\n    enemyList: [],\r\n    enemyOnScene: []\r\n}\r\n\r\n","import { CST } from \"../CST\";\r\nimport Button from \"../helpers/classes/button\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        this.graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let bg = this.add.image(-20, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n\r\n        let title = this.add.text(gameWidth/2, 5, \"Discard Pile\", {fontSize: \"45px\"});\r\n        title.setOrigin(0.5, 0);\r\n\r\n        let startX = 10;\r\n        let startY = 50;\r\n        let xOffset = gameOptions.cardWidth + 50;\r\n        let yOffSet = gameOptions.cardHeight + 60;\r\n        let xCounter = 0;\r\n        let yCounter = 0;\r\n\r\n        if (this.graveYardArray.length > 0) {\r\n            for (let cards of this.graveYardArray) {\r\n                cards.setVisible(true);\r\n                let discardCard = this.add.existing(cards);\r\n                discardCard.x = startX + (xCounter * xOffset);\r\n                discardCard.y = startY + (yCounter * yOffSet);\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth * 1.3;\r\n                discardCard.displayHeight = gameOptions.cardHeight * 1.3;\r\n\r\n                xCounter++;\r\n                if (xCounter === 5) {\r\n                    xCounter = 0;\r\n                    yCounter++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.input.on(\"pointerdown\", function() {\r\n            this.scene.stop(CST.SCENES.DISCARD_PILE);\r\n        }, this);\r\n    }\r\n\r\n}","import { gameOptions } from \"../../config\";\r\n\r\n// Cards that appear in the player's hand\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(scene, x, y, sprite);\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.effect = effect;\r\n        this.cardType = cardType;\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth;\r\n        this.displayHeight = gameOptions.cardHeight;\r\n    }\r\n    \r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCost() {\r\n        return this.cost;\r\n    }\r\n\r\n    getEffect() {\r\n        return this.effect;\r\n    }\r\n\r\n    getType() {\r\n        return this.cardType;\r\n    }\r\n\r\n    setCost(cost) {\r\n        this.cost = cost;\r\n    }\r\n}","export default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(width, height);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics();;\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","export default class HealthBar{\r\n\r\n    constructor(scene, x, y, maxHealth, health){\r\n        this.bar = new Phaser.GameObjects.Graphics(scene);\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.maxHealth = maxHealth;\r\n        this.health = health;\r\n\r\n        this.show_health();\r\n\r\n        scene.add.existing(this.bar);\r\n    }\r\n\r\n    show_health(){\r\n        this.bar.clear();\r\n\r\n        //  BG\r\n        this.bar.fillStyle(0xffffff);\r\n        this.bar.fillRect(this.x, this.y, 104, 16);\r\n\r\n        //  Health\r\n        this.bar.fillStyle(0x000000);\r\n        this.bar.fillRect(this.x + 2, this.y + 2, 100, 12);\r\n\r\n\r\n        let percentage = 100 * (this.health / this.maxHealth);\r\n        this.bar.fillStyle(0xff0000);\r\n        this.bar.fillRect(this.x + 2, this.y + 2, percentage, 12);\r\n    }\r\n    \r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nexport default class Player extends Phaser.GameObjects.Sprite {\r\n\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.maxHealth = 50;\r\n        this.health = this.maxHealth;\r\n        this.maxActionPoints = 6;\r\n        this.actionPoints = this.maxActionPoints;\r\n        this.handArray = [];\r\n        this.deckArray = [];\r\n        this.deckTrackerArray = [];\r\n        this.graveYardArray = [];\r\n        this.spriteType = \"player\";\r\n        this.keepCards = [];\r\n        this.keepCardsLimit = 2;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    selectCardInHand(player) {\r\n        // disable drag first on all cards\r\n        this.disableDragOnCards();\r\n\r\n        for (let card of this.handArray) {\r\n            // remove the event listener from the card\r\n            card.removeListener(\"pointerdown\", card.clickHandler);\r\n\r\n            // flag on card to keep track on whether it's being clicked\r\n            card.isBeingClicked = false;\r\n\r\n            // add the event listener back to the card\r\n            card.clickHandler = this.keepingCards.bind(this, card);\r\n            card.on(\"pointerdown\", card.clickHandler);\r\n        }\r\n    }\r\n\r\n    keepingCards(card) {\r\n        if (card.isBeingClicked) {\r\n            // removes the card from list \r\n            this.keepCards.splice(this.keepCards.indexOf(card), 1);\r\n            card.clearTint();\r\n            card.isBeingClicked = false;\r\n        } else {\r\n            if (this.keepCards.length < this.keepCardsLimit) {\r\n                this.keepCards.push(card);\r\n                card.isBeingClicked = true;\r\n                // add a visual effect when clicked\r\n                card.setTint(0x999999);\r\n            }\r\n        }\r\n    }\r\n\r\n    moveCardsBackInDeck(scene) {\r\n        // remove event listener from all cards\r\n        for (let cards of this.handArray) {\r\n            cards.removeListener(\"pointerdown\", cards.clickHandler);\r\n        }\r\n\r\n        // get indexes of cards not in this.keepCards List\r\n        let indexList = [];\r\n        for (let cards of this.handArray) {\r\n            if (!this.keepCards.includes(cards)) {\r\n                let index = this.handArray.indexOf(cards);\r\n                indexList.push(index);\r\n            }\r\n        }\r\n\r\n        // remove the indexes in reverse order not to mess up the loop\r\n        for (let index=indexList.length-1; index >= 0; index--) {\r\n            this.deckArray.push(this.handArray[indexList[index]]);\r\n            this.handArray[indexList[index]].setVisible(false);\r\n            this.handArray.splice(indexList[index], 1);\r\n        }\r\n\r\n        // set up the deck sprites and deckArray and organise the cards on screen\r\n        this.shuffle();\r\n        this.deckSetUp(scene);\r\n        scene.arrangeCardsInCenter(this.handArray);\r\n        this.enableDragOnCards();\r\n        this.keepCards = [];\r\n        \r\n        // remove tint of cards remaining in hand \r\n        // reset the click flag and add back the event listener \r\n        for (let cards of this.handArray) {\r\n            cards.isBeingClicked = false;\r\n            cards.clickHandler = this.keepingCards.bind(this, cards);\r\n            cards.on(\"pointerdown\", cards.clickHandler);\r\n            cards.clearTint();\r\n        }\r\n    }\r\n    \r\n    // draw an amount of cards\r\n    drawCard(amountOfCards, scene) {\r\n        for (let i=0; i < amountOfCards; i++) {\r\n            let lastCard = this.deckTrackerArray.pop();\r\n            lastCard.setActive(false).setVisible(false);\r\n\r\n            let drawCard = this.deckArray.pop();\r\n            this.handArray.push(drawCard);\r\n            drawCard.cardInHand(scene);\r\n            scene.arrangeCardsInCenter(this.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    disableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = false;\r\n        }\r\n    }\r\n\r\n    enableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = true;\r\n        }\r\n    }\r\n    \r\n    deckSetUp(scene) {\r\n        let x = scene.game.config.width / 25;\r\n        let y = scene.game.config.height / 1.24;\r\n\r\n        // need to remove all sprites currently active\r\n        if (this.deckTrackerArray.length > 0) {\r\n            for (let j=0; j < this.deckTrackerArray.length; j++) {\r\n                this.deckTrackerArray[j].destroy();\r\n            }\r\n        }\r\n\r\n        for (let i=0; i < this.deckArray.length; i++) {\r\n            let cardBack = scene.add.sprite(x, y, 'cardBack');\r\n            cardBack.setOrigin(0.5, 1);\r\n            cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n            cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n            \r\n            this.deckTrackerArray.push(cardBack);\r\n            x += 3;\r\n        }\r\n    }\r\n    \r\n    // implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\n    shuffle() {\r\n        for (let i = this.deckArray.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i+1));\r\n            [this.deckArray[i], this.deckArray[j]] = [this.deckArray[j], this.deckArray[i]]\r\n        }\r\n    }\r\n\r\n    resetDeck(scene) {\r\n        if (this.deckArray.length <= 0) {\r\n            // push all the cards in graveYard array back to the deck\r\n            for (let i=this.graveYardArray.length; i > 0; i--) {\r\n                let card = this.graveYardArray.shift();\r\n                this.deckArray.push(card);\r\n            }\r\n            this.shuffle();\r\n            this.deckSetUp(scene);\r\n        }\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health += health;\r\n\r\n        // setting it back to max health if going over\r\n        if (this.health > this.maxHealth) {\r\n            this.health = this.maxHealth;\r\n        }\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints += actionPoints;\r\n\r\n        // setting it back to max AP if going over\r\n        if (this.actionPoints > this.maxActionPoints) {\r\n            this.actionPoints = this.maxActionPoints\r\n        }\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n}","export default class Enemy extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(10, 30);\r\n        this.spriteType = \"enemy\";\r\n        this.setInteractive();\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    action() {\r\n        return Math.floor(Math.random() * 10);\r\n    }\r\n\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n}","export class Tooltip extends Phaser.GameObjects.Text {\r\n    constructor(scene, x, y, label) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 20,\r\n            y: 20\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\r\n        scene.add.existing(this);\r\n        this.visible = false;\r\n        this.setDepth(2);\r\n    }\r\n\r\n    showTooltip() {\r\n        this.visible = true;\r\n    }\r\n\r\n    removeTooltip() {\r\n        this.visible = false;\r\n    }\r\n    \r\n    setLabelCoordinates(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class DamageCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (this.effect.target == \"single\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\r\n                    this.setHealth(this.getHealth() - card.effect.damage);\r\n                    this.heartText.setText(this.getHealth());\r\n\r\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\r\n                        enemy.enemyOnScene[j].input.enabled = false;\r\n                    }\r\n                })\r\n            }\r\n        } else if (this.effect.target == \"all\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\r\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\r\n            }\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        return \"Damage: Inflicted damage is on the enemy's health.\";\r\n    }\r\n    \r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ComboCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        console.log(this);   \r\n    }\r\n\r\n    getLabel() {\r\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\r\n    }\r\n    \r\n   \r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ReloadCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // nned to account for next turn side effects\r\n    // such as losing action points next turn\r\n    activateCard(scene) {\r\n        if (this.effect.sideEffects !== null) {\r\n            // removing health if its overloading card\r\n            scene.player.setHealth(this.effect.sideEffects);\r\n            scene.heartext.setText(scene.player.health);\r\n            // add function here to kill the player if health goes to 0\r\n        }\r\n\r\n        scene.player.setActionPoints(this.effect.amount);\r\n    }\r\n\r\n    getLabel() {\r\n        return \"AP: \\nAction Points are used when activating a card.\"\r\n    }\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class HealingCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        if (this.effect.target == \"health\") {\r\n            scene.player.setHealth(this.effect.amount);\r\n            scene.heartext.setText(scene.player.health);\r\n        }\r\n        // include bottom when armour is introduced\r\n        // } else (this.effect.target == \"armour\") {\r\n        //     scene.player.setArmour(this.effect.amount);\r\n        //     scene.armourText.setText(scene.player.armour);\r\n        // }\r\n    }\r\n\r\n    getLabel() {\r\n        if (this.effect.target == \"armour\") {\r\n            return \"Armour: \\nRemoved before health when receiving damage.\";\r\n        } else if (this.effect.target == \"health\") {\r\n            return \"Health: \\nIf this reaches zero, you die.\"\r\n        }\r\n    }    \r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/button.js';\r\nimport { gameOptions, enemy} from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/zone.js\";\r\nimport HealthBar from \"../helpers/classes/healthBar.js\";\r\nimport Player from \"../helpers/classes/player.js\";\r\nimport Enemy from \"../helpers/classes/enemy.js\";\r\nimport DamageCard from \"../helpers/classes/cards/damageCard.js\";\r\nimport ComboCard from \"../helpers/classes/cards/comboCard.js\";\r\nimport ReloadCard from \"../helpers/classes/cards/reloadCard.js\";\r\nimport HealingCard from \"../helpers/classes/cards/healingCard.js\";\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        // data returns a list of preloaded cards\r\n        let cards = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        //this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\");\r\n        this.load.image(\"player\", \"./assets/sprites/player.png\")\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemy.spriteWidth,\r\n            frameHeight: enemy.spriteHeight\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        this.player = new Player(this, 0, 0, \"guy\");\r\n        this.player.setPosition(gameWidth/3.5, gameHeight/1.7);\r\n        this.player.setScale(3);\r\n\r\n        //let heart = this.add.image(0, 0, \"heart\");\r\n        //this.heartext = this.add.text(0,0, this.player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        //heart.setScale(4);\r\n        //this.heartext.setPosition(-18, -18);\r\n        //let health = this.add.container(0, 0, [heart, this.heartext]);\r\n        //health.setPosition(gameWidth/20, gameHeight/2.2);\r\n        this.playerHealth = new HealthBar(this, this.player.x - 40, this.player.y + 100, this.player.maxHealth, this.player.health)\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        this.actiontext = this.add.text(0,0, this.player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        this.actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, this.actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        // launch the discard pile scene in parallel\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', (event) => {\r\n            this.scene.launch(CST.SCENES.DISCARD_PILE, this.player.graveYardArray);\r\n        }, this);\r\n        \r\n        // loads all the different types of cards\r\n        this.loadCards();\r\n        \r\n        this.endTurnButton = new Button(gameWidth, gameHeight/2, \"End Turn\", this, this.endTurn.bind(this, this.player, this.endTurnButton), '#202529');\r\n        this.keepCardButton = new Button(gameWidth, gameHeight/2, \"Keep Cards\", this, this.keepCard.bind(this, this.player, this.keepCardButton), '#202529');\r\n\r\n        // zone where cards can be dropped and activated\r\n        //let dropZone = new Zone(this, 500, 250, 665, 665);\r\n        let dropZone = this.add.zone(500, 250, 665, 665).setRectangleDropZone(665, 665);\r\n\r\n        // shuffles the deck and sets up the visual for the deck cards\r\n        this.player.shuffle();\r\n        this.player.deckSetUp(this);\r\n        this.player.drawCard(gameOptions.startCards, this);\r\n\r\n        // spawning enemies according to spritesheet randomly\r\n        for (let i=0; i < enemy.numberOfSprites; i++) {\r\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemy.enemyList.push(enemySprite);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n\r\n        // card event listeners for pointer interactions\r\n        this.input.on('dragstart', (pointer, gameObject) => {\r\n            gameObject.tooltip.removeTooltip();\r\n            this.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            this.tweens.add({\r\n                targets: this.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = this.player.handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                this.player.handArray.splice(index, 1);\r\n            }\r\n\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n\r\n        }, this);\r\n\r\n        this.input.on('drag', (pointer, gameObject, dragX, dragY) => {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        this.input.on('gameobjectover', (pointer, gameObject) => {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                let yOffSet = 50;\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    y: gameObject.startPosition.y - yOffSet,\r\n                    displayWidth: gameOptions.cardWidth * 2,\r\n                    displayHeight: gameOptions.cardHeight * 2,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.showTooltip();\r\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\r\n\r\n            }\r\n        }, this);\r\n\r\n        // hover out listener\r\n        this.input.on('gameobjectout', (pointer, gameObject) => {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    y: gameObject.startPosition.y,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.removeTooltip();\r\n            }\r\n       }, this);\r\n\r\n        this.input.on('dragenter', (pointer, gameObject, dropZone) => {\r\n            //dropZone.renderActiveOutline();\r\n            gameObject.setTint(0xffa500);\r\n        });\r\n\r\n        this.input.on('dragleave', (pointer, gameObject, dropZone) => {\r\n            //dropZone.renderNormalOutline();\r\n            gameObject.clearTint();\r\n            if (gameObject.cost > this.player.actionPoints) {\r\n                gameObject.setTint(0xff0000);\r\n            }\r\n        }); \r\n\r\n        this.input.on('drop', (pointer, gameObject, dropZone) => {\r\n            if (this.player.getActionPoints() >= gameObject.getCost()) {\r\n                gameObject.input.enabled = false;\r\n                gameObject.tooltip.removeTooltip();\r\n                gameObject.clearTint();\r\n        \r\n                // setting card in the middle \r\n                gameObject.displayHeight = gameOptions.cardHeight;\r\n                gameObject.displayWidth = gameOptions.cardWidth;\r\n                gameObject.x = dropZone.x;\r\n                gameObject.y = dropZone.y + dropZone.y / 3;\r\n                \r\n                this.player.graveYardArray.push(gameObject);\r\n                gameObject.activateCard(this);\r\n\r\n                // remove the card from the scene after 500ms\r\n                setTimeout(function() { \r\n                    gameObject.setActive(false).setVisible(false); \r\n                }, 500);\r\n        \r\n                this.player.actionPoints = this.player.getActionPoints() - gameObject.getCost();\r\n                this.actiontext.text = this.player.getActionPoints();\r\n                //dropZone.renderNormalOutline(this);\r\n        \r\n                this.cameras.main.shake(100, 0.02);\r\n                for (let card of this.player.handArray){\r\n                    if (card.cost > this.player.actionPoints){\r\n                        card.setTint(0xff0000);\r\n                    }\r\n                }\r\n            } else {\r\n                gameObject.setTint(0xff0000);\r\n                this.dragend(pointer, gameObject, false);\r\n            }\r\n        });\r\n\r\n        this.input.on(\"dragend\", this.dragend, this);\r\n    }\r\n\r\n    dragend(pointer, gameObject, dropped) {\r\n        \r\n        if (!dropped) {\r\n            this.player.handArray.push(gameObject);\r\n            gameObject.displayHeight = gameOptions.cardHeight;\r\n            gameObject.displayWidth = gameOptions.cardWidth;\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n        }\r\n    }\r\n\r\n    damage_calculation(character, damage, modifiers) {\r\n        for (let modifier of modifiers){\r\n            damage = damage * modifier;\r\n        }\r\n        // console.log(damage);\r\n        character.health = character.health - damage;\r\n        character.setTint(0xff0000);\r\n        let damage_num = this.add.text(0,0, \"-\" + damage, {color: \"red\", fontSize: \"30px\"});\r\n        damage_num.setPosition(character.x + 40, character.y - 80);\r\n        this.time.delayedCall(450, this.damage_event, [character, damage_num], this);\r\n    }\r\n\r\n    damage_event(character, damage_num){\r\n        character.clearTint();\r\n        damage_num.destroy();\r\n    }\r\n\r\n    loadCards() {\r\n        // damage cards\r\n        let cannon = new DamageCard(\"cannon\", 1, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\r\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\r\n\r\n        // combo cards\r\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\r\n        \r\n        // reload cards\r\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\r\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -15}, this, 0, 0, \"overload\");\r\n\r\n        // healing cards\r\n        let medkit = new HealingCard(\"medkit\", 0, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\r\n        let kevlar = new HealingCard(\"kevlar\", 1, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\r\n\r\n        this.player.deckArray.push(cannon);\r\n        this.player.deckArray.push(grenade);\r\n        this.player.deckArray.push(headshot)\r\n        this.player.deckArray.push(reload);\r\n        this.player.deckArray.push(overload);\r\n        this.player.deckArray.push(medkit);\r\n        this.player.deckArray.push(kevlar);\r\n    }\r\n    \r\n   \r\n    arrangeCardsInCenter(handArray) {\r\n        // arranges for the cards to be organised around the bottom middle of the screen\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            // cards remember their original coordinates for events that make the cards leave and renter the hand\r\n            card.startPosition = {\r\n                x: card.x,\r\n                y: card.y,\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(2);\r\n        }\r\n    }\r\n\r\n\r\n    // start keep cards and make keep cards button appear\r\n    keepCard(player) {\r\n        this.keepCardButton.visible = false;\r\n        this.endTurnButton.visible = true;\r\n        // for (let card of this.player.handArray){\r\n        //     card.clearTint();\r\n        // }\r\n        this.player.selectCardInHand(player);\r\n    }\r\n    \r\n    \r\n    // ends the player's turn\r\n    endTurn() {\r\n        this.keepCardButton.visible = true;\r\n        this.endTurnButton.visible = false;\r\n        this.player.moveCardsBackInDeck(this);\r\n        \r\n        // simulate enemies attacking\r\n        for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n            let base_damage = enemy.enemyOnScene[i].action();\r\n            this.damage_calculation(this.player, base_damage, [1]);\r\n        }\r\n        this.playerHealth.health = this.player.health;\r\n        this.playerHealth.show_health();\r\n        \r\n        // automatic drawing goes here and checking if needing to reshuffle the deck\r\n        this.player.drawCard(5 - this.player.handArray.length, this);\r\n        this.player.resetDeck(this);\r\n        for (let card of this.player.handArray){\r\n            if (card.cost > this.player.actionPoints){\r\n                card.setTint(0xff0000);\r\n            }\r\n        }\r\n    }\r\n    \r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n            randomEnemy.setDepth(1);\r\n\r\n            enemy.enemyOnScene.push(randomEnemy);\r\n        }\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport HandCard from \"../helpers/classes/cards/handCard\";\r\nimport { BattleScene } from \"./battleScene\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/Overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\r\n    }\r\n\r\n    create() {\r\n        this.scene.start(CST.SCENES.BATTLE);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport { LoadScene } from \"./scenes/loadScene\";\r\nimport {BattleScene} from \"/src/scenes/battleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 1000,\r\n    height: 800,\r\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\r\n    scene: [\r\n        LoadScene,\r\n        BattleScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}