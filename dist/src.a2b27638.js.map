{"version":3,"sources":["src/CST.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/handCard.js","src/helpers/font.js","src/helpers/classes/button.js","src/helpers/classes/zone.js","src/helpers/classes/player.js","src/helpers/classes/enemy.js","src/helpers/classes/cards/toolTip.js","src/helpers/classes/cards/damageCard.js","src/helpers/classes/cards/comboCard.js","src/helpers/classes/cards/reloadCard.js","src/helpers/classes/cards/healingCard.js","src/scenes/battleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","graveYardArray","DiscardPileScene","key","data","load","spritesheet","frameWidth","frameHeight","image","console","log","bg","add","sprite","setOrigin","setScale","alpha","startX","startY","length","i","setVisible","discardCard","existing","x","y","displayWidth","displayHeight","input","once","scene","stop","Phaser","Scene","HandCard","name","cost","cardType","effect","visible","setInteractive","setDraggable","GameObjects","Sprite","loadFont","url","newFont","FontFace","then","loaded","document","fonts","catch","error","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","useHandCursor","on","newX","newY","Text","Zone","width","height","setRectangleDropZone","setDepth","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Player","frame","maxHealth","health","maxActionPoints","actionPoints","handArray","deckArray","deckTrackerArray","spriteType","keepCards","keepCardsLimit","player","disableDragOnCards","cards","pointer","includes","splice","indexOf","clearTint","push","setTint","indexList","index","setActive","shuffle","deckSetUp","arrangeCardsInCenter","enableDragOnCards","amountOfCards","lastCard","pop","drawCard","cardInHand","draggable","game","config","j","destroy","cardBack","Math","floor","random","card","shift","Enemy","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","getHealth","min","max","Tooltip","wordWrap","DamageCard","tooltip","getLabel","target","setHealth","damage","setText","enabled","ComboCard","ReloadCard","sideEffects","heartext","setActionPoints","amount","HealingCard","BattleScene","gameWidth","gameHeight","hud_bg","tileSprite","card_bg","setPosition","heart","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","launch","loadCards","endTurnButton","endTurn","bind","keepCardButton","keepCard","dropZone","enemySprite","spawnEnemyOnScene","gameObject","removeTooltip","tweens","targets","angle","duration","background","dragX","dragY","type","yOffSet","startPosition","depth","showTooltip","setLabelCoordinates","renderActiveOutline","getCost","activateCard","setTimeout","cameras","main","shake","dragend","dropped","cannon","grenade","headshot","reload","overload","medkit","kevlar","bottomOfScreen","screenCenterX","yDelta","cardX","selectCardInHand","moveCardsBackInDeck","action","resetDeck","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","LoadScene","start","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AKAP,AMAA,ADAA,APAA,AUAA,ADAA,ALAA,ADAA,ALAO,AGAA,AYCP,AFDA,AZAA,AaAA,IfAaA,ACAAK,GDAG,EIAA6D,CJAG,KCAK,EGAA,CHAG,AGAFT,IAAI,EAAEU,GAAG,EAAE;ACAF,AMClC,ADAA,APD2C,AUC3C,ADAA,ALDgD,ADAR,AUExC,AFDA,AZAA,AaAA,EfAIlE,ACAAK,AGAA,IHAI,AGAA8D,EJAE,ACAA,CAAC,CDAC,GIAG,GAAG,IAAIC,QAAQ,CAACZ,IAAI,EAAE,aAAa,CAAC;ACDjB,AMElC,ADAA,APF2C,AUE3C,ADAA,ALFgD,ADAR,AUGxC,AFDA,AZDgD,AaChD,EdAIlD,AGAA6D,EJAIlE,IAAI,CIAD,CJAG,AIAFwB,EHAE,EAAE,AGAA,CHAC,CDAG,AIAF,CAAC4C,IAAI,CAAC,UAAUC,MAAM,EAAE;ACFR,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AUAxC,AFGA,AZFgD,AaCJ,EdCxC/D,EDAIL,AIAAqE,MJAM,CCAD,CDAG,AIAA,CHAD,AGAEC,GHAC,EGAI,CAACvC,CJAC,EIAE,CAACqC,MAAM,CAAC;ACHA,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQIxC,AZHgD,AaCJ,EdExC9D,AGAA,CAAC,CJAGL,AIAF,CAACsE,KAAK,CAAC,CHAC,EAAE,EDAI,CCAD,CDAG,GIACC,KAAK,EAAE;ACJI,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AUKxC,AFAA,AZJgD,AaCJ,EfGxC,ACAAjE,EGAI,OAAOiE,GHAC,EAAE,AGAE,GHAC;ADCrB,AKNkC,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQMxC,AZLgD,AaCJ,CfI3C,CCAGhE,AGAA,CAAC,CAAC,OHAO,EAAE,CAAC;ADAf,AKNiC,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AFOxC,AYAO,AFAP,AZNgD,AaCJ,EdKxCC,EeAO+H,MAAM,GfAF,AeAK,EfAH;AIPiB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALQxC,AaAA,AZPgD,AaCJ,CdM3C,CeAGwE,IAAI,EAAE7J,MAAM,CAACmM,IAAI;AXRa,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALQvC,AaCD,AZRgD,AaCJ,ECOxC/J,KAAK,EAAE,IAAI;AXTmB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALUjC,AaD2D,AZRlB,AaCJ,ECQxCC,EfAS9E,IeAH,EAAE,GAAG,SfAgB,GAAG;AIVA,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQS0B,AZRlB,AaCJ,EdSxCC,AeAA4O,KAAK,EAAE,EfAE,EAAE,GAAG;AIXgB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQS0B,AZRlB,AaCJ,EdUxC3O,EeDS4O,MAAM,EfCL,AeDO,EfCL,gBeDuB;AXXL,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALaxC,AaJkE,AZRlB,AaCJ,CdW3C,GQbY5F,ADAQX,AQWoBwG,IAAI,CRXnB,CQWoBtM,CPX1B,KOWgC,CAACuM,KAAK,CAACC,GAAG;AXV9D,AMCoC,ADAA,APApC,AUAoC,ADAA,ALFY,ADAR,ALavC,AaJiE,AZRlB,AaCJ,ENFxB,ADAM,EFELrK,AUS2CsK,IVTvC,MUSiD,EAAEzM,MAAM,CAACuM,KAAK,CAACG;AXVzF,AMCoC,ADAA,APApC,AUAoC,ADAA,ALFY,ANezC,AaN2D,AZNlE,AaD4C,ENFxB,ADAM,AFED,AUS4E,CAAC,CXRjFpL,AFAApB,AFYRxC,ACZTM,KDYc,CIZS,EFAE,AFYR,MCZH;ASDkB,ADAA,AGAA,ADAA,ALFY,AOSkB,AZN/C,AaDyB,EVCjB,AFAE,AMFzB,ADAA,AFCqB,ALcrBL,AeJAmC,EdPS7B,GcOJ,EAAE,CACHgO,GfGO,EAAE,EOfDnM,ECAAA,AReK,CCXQ,EMJR,ECAA,ADAEN,CAAC,CCADA,CAAC,ADAEC,CAAC,CCADA,CAAC,ADAEZ,AQYZ,EPZY0C,AOarBtD,IRb2B,CCAD,CDAGiF,CCAD,IDAM,EAAE,qBQapB;ALZY,ADAA,AGAA,ADAA,ALFY,ASgBhD,AFPkE,ACPtB,CCc3C,CXb0B,AFAE,AGAzB,ALcAtF,ACZyB,EOJO,ADAQ,ADCvBqF,AQERgJ,MRFc,GQEL,CdaN,EKdAnM,ALcE,GAAG,EKdA,EAAEN,CAAC,EAAEC,CAAC,EAAE2C,KAAK,EAAEC,MAAM,EAAE;AKDR,ADAA,AGAA,ADAA,AIclC,AFPgE,ETJ9D,AFDA,AIFuB,ANgBvBxE,ACbyB,AaDP,ENHc,ADAQ,AFEA,aLezB,CIbH2B,CAAC,AJaI,CEdLW,AFcM,CIbHV,CAAC,EAAE8B,AFDF,EAAEnB,GECK,CFDD,CECGN,CFDDO,IECM,EAAEmB,EFDA,EAAElB,IECM,EAAEmB,AFDF,EAAE3B,KAAK,CECG,CFDDN,CECG,AFDF,EAAEC,CAAC,EAAEZ,MAAM,EAAE;AQF/B,ADAA,AGAA,ADAA,AIgBpC,AFTkE,EPPvC,ANiBvBf,ACbA,AaFkB,EVCkC,AMDnCqJ,ADAAR,APA8C,AUA9Cc,ADAAL,AHFb,ADAA,AFCoC,AUexChC,IAAI,GfCK,AeDF,ELdmB,AVef,CSfgB,AEAA,CCAC,AZef,AeDFpF,MAAM,CAAC2M,IAAI,CAACtH,GPhBbvF,ADAAA,ANII,GcYe,CAAC,CPhBf,ADAA,ECAEN,ADAAA,CCAC,ADAA,ECAEC,ADAAA,CCAC,ADAA,ECAE8B,ADAA1C,KCAK,CDAC,EAAEqE,KAAK;AMO0B,EHLpC,ADAC,AGAC,ADAD,ALA3B,ANgBAnF,AcfA,EVAoD,AFDW,AMD3D,ADAA,AFCA,AJEU,MOHL2D,ADAA3C,IPiBG,EAAE,CQjBE,CDAC,ADCLe,CCDM,CCAC,ADAA,CAAC,EDCH,AQCH,ERDKN,CAAC,EAAEC,CAAC,EAAEZ,ADAfiB,KAAK,CCAgB,CDAdN,CCAgB0D,ADAf,EAAEzD,CAAC,ECAiB,ADAf2C,ECAiB,GDAZ,EAAEC,MAAM,GAAEC,oBAAoB,CAAC9C,CAAC,EAAEC,CAAC,CAAC;ALiBpE,AaZkE,CbYjE,CUjB6B,ADAC,AGAC,ADAD,EPEvB,AFDA,AKDA,ADAoC,ADCpC,AJCU,AaDA,ENDND,CAAC,EAAE,CDAF4D,AFCAtE,CGDI,KDAE,GAAG,AFCA,CAAC,CAAC,EAAE,CAAC,CEDAiH,AFCC,IJEd,CGDAjG,AFDAA,KECK,AFDA,EECEN,AFDAA,CECC,AFDA,EECEC,AFDAA,AKDkB,CHEjB,AFDA,AKDkB,EHEhB8B,AFDA1C,AKDkB,EAAE,EAAE,CHEjB,AGFkB,CLCjB;AFgBhC,AaZiE,EHJ9D,ADAA,AGAA,ADAA,EPEI,AFDA,AKDA,ADDoC,ADEpC,ASDU,ENANY,APGAvB,COHC,EAAE,APGA,CGDFwD,AFDAvB,AKDAuD,AFCAnB,CJEI7F,GCFA,GECG,AFDAyD,CGAC,CAAC,AJEF,CGDG,AGFA,AFCA,AJEFxD,CSHLwD,ARCQ,AGAA,CIDRA,AEAAA,CCAAA,ALAU,EGAN,CDAA,AEAA,AVGO,CSHLC,AEAF,AXGQtD,CQHNsD,AEAAA,CCAAA,AECR,CPDmB,CGAP,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,MFAQ,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAER,AEAF,CHAEA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CDAEN,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEC,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEZ,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE,AEAF,CHAE,AEAA,CCAA;ACID,IHJC,ADAA,APE3D,AUF2D,ADAA,AHC3D,ADAA,ADDA,ADEAiB,AJEA,COHC,APGA,CGDGN,AUDAtB,CVCC,EAAE,ACDF,ASAE,CVCC,AFDHkC,AKDAI,AFCC5B,CSAGlC,ETAA,CHAA,AGAC6C,GHAEa,EYAA,CAACzD,CZAG,CGAE,EEDC,EAAE,AOCF,CAACC,GRFdkD,KAAK,EAAEN,CAAC,EAAEC,CAAC,EAAEZ,MAAM,EAAEqE,EDEH,GCFQ;AOI0B,EZC9D,ESL+D,ADAA,APG3D,AUH2D,ADAA,AHE3D,ADCA,ADFA,ADEA,AQGKwE,ACHL,CAAC,CVCGjI,CAAC,EAAE,CFDFa,AMDAqB,ADCAqE,ADFA7C,ADEAX,KQGW,CXHL,GAAGlC,AKAA,ADFA,CECC,AHCA,CGDC,CDCCR,ADFA,CDEC,CCFC,CJEC,EMDC4B,ADCC,CAAC9C,GAAG,AFAA,CEACqH,AFAA,CAAC,CGDA,CAACzG,CAAC,ADCC,CAACM,CCDA,IDCK,CAACsF,CCDD1D,GDCK,CAAC2D,GCDC,CAAC5F,CAAC,CAAC,ADCE,CAAC2C,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAKgB,MAAM,EAAE;EMG9D,AZDnB,AaDD,EVCI,AMJA,ADAA,APGA,AUHA,ADAA,AHEA,AFDA,ADEA,CDCC,CGF8E8C,ILC1E7F,AMDAuB,AFDAwB,ADEAX,CED+E,EAAE,GDD3E,EJEE,AMDA,ADA8E,CCA7E,AFDA,CDEC,CHACpC,EGAE,ECFC8C,IJEK,CQHlBhD,ADAAA,AGAAA,ADAAA,CNGoB,CAAC,CAAC,CKHlB,ADAA,AGAA,ADAA,ALCkB,EIDhBC,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA,EDAER,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEN,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEZ,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA;EEKvC,ACFnB,EVEG,AMJA,ADAA,APEyB,AUFzB,ADAA,ALCA,ALEH,EOFmBgD,ADA6EsE,IHGxFrH,AMJA8H,ADAAA,AGAAA,ADAAA,ALCAvD,ICAgG,EAAE,CGD3F,ADAA,AGAA,ADAA,EPIE,CAAC,AMJA,ADAA,AGAA,ADAA,CPIC,AIHe,EJGb,AIHe,CEDdoD,ADAAA,AGAAA,ADAAA,CLCC,CFGC,CAAC,CEHC,CAAC,GEAkB,QEDhB,ADAA,AGAA,ADAA,CDAC3G,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEN,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,GDAC,ADAA,AGAA,ADAA,MDAKE,ADAAA,AGAAA,ADAAA,YDAY,ADAA,AGAA,ADAA,EDAED,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,MDAKoH,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA;ETG9E,AWEA,ETAI,AMJA/G,ADAAA,AGAAA,ADAAA,AJA6G,ADC7G,ADEA,AJDH,AaDA,CPDiH,CCAlEoG,ADAmE,GGA1G,ADAA,AGAA,ADAA,CPIAvE,AMJC/C,ADAAA,AGAAA,ADAAA,ALCD0E,ADEAZ,CGH4C,APIrD,ESJa,ADAA,AGAA,ADAA,AHA0C,CEAzCnD,ADAAA,AGAAA,ADAAA,MPIK,CAAC,ACDA,CKHE,ADAA,AGAA,ADAA,AHA0C,AFC3C,EDEEO,CCFC,AOGV,AZAT3B,EGAoBuD,ECDG,AJCnB,CIDoB9C,CCFAyE,ALGlB,EIDqB,CDCA,ACDCV,CDCAnD,CAAC,EAAE,ICDK,EDCAkC,ACDE,ECFC,KFGI,CAACjC,CAAC,AMJtB,ADAA,AGAA,ADAA,CPIuB;EFFlD,EEGG,AMJA,ADAA,AGAA,ADAA,AJAA,ADCA,ADEA,AQAU,ACHb,ENDiEiH,APK9D1I,IGAK4D,AMJAsD,ADAAA,AGAAA,ADAAA,AJAAc,ADCAzC,ADEAX,CSDT,GNH0E,EAAE,EJK3D,CAAC,AGJA,ADCA,CIDC,ADAA,AGAA,ADAA,AJAA9D,ANID,CSJEgB,ADAAA,AGAAA,ADAAA,CLCC,CLGA3B,CKHE,EIDE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA,AVID,EMJG,AFGA,CEHC,AFGA2B,ASDnB,CPFoB,EAAE,CAAC,CAAC,AFGA,CAAC;IKHR,ADAA,APC1B,AUD0B,ADAA,AJEvBA,ADAA,ADCgC,AQAtB,AZEd,EGDoB+B,AUDhB,ENJyEO,CDGpE,CAACxD,ADAD4E,AQCD,CAACpF,ENJyE,ADGrE,CAACmB,CCHsE,AMIvE,CAACf,GRDI,EFEiB,AUDhB,CPDG,ADAD,AQCD,CVCiBiD,CEFd,KOEb,CCDkB,EAAE,qBPDF,MOC6B,CAAC;EJF1D,ADAA,AGAA,ADAA,ANIA,AJAC,EGD4C,AFH5C,AKGG,ADDA,CFC0C,CAAC,AILwC,AKM/EvD,ACDJ,GDCO,CNDFkI,ADDA3C,AQCD,CZDR,AWEa/G,ACDJ0B,IAAI,CAACI,GDCE,CAAC7B,CCDE,CAAC,IRDK,AOEF,CAACE,ENDI,ADDA,CCCCiD,CLDlBA,AIAmB,AQCD,EAAE,EPAG,CLDlB,AKCmB,ELDjB,uBYCyC,CAAC;EJH3D,ADAA,AGAA,ADAA,ANIA,EDAG,AINoF,ADMpF,ADDA,AOEA,AZDH,CONwF,AKOpF,CXFD,AMLsF,AMMtF,IVAKU,AFDD,AKCC6F,ADDArI,AQCD,CZDCuC,AYCAnC,IAAI,CAACI,EZDE,EKCG,CLDA,AYCA,CZDC,AKCC,AOAD,EVAG,AEDA,CFCE,CFDD,CAAC+B,AIAC,EAAE,GQCE,EZDE,AYCA,6BAA6B,CAAC;EDE9D,EHNC,ADAA,AGAA,ADAA,AHDGT,AFKA,ADAH,AJAA,EGA0BgC,AFAvB,AYCA,GNNK,CNKD,AMLElD,AFKD8E,AQCD,CZDClD,ADET,AaDSpC,ENNI,CAACmB,CMMD,CAACf,GVD0B,CEArB,CFAuB,AUCvB,CNNG,AMMF,CRDE,EJAC,EAAE,GDEf,AaDkB,CRDE,CQCA,qBNNF,MMM6B,CAAC;EDCzD,ETF6C,AMJ7C,ADAA,AGAA,ADAA,AHAG,ADMA,ADDA,ADDH,CDA8C,CAAC,AFC5CsB,ADEA,AaDA,INNKS,AFKAoD,ALED,AaDA,CJJR,ADAA,APGS,AUHT,ADAA,ANIA,AJCSvF,AaDAA,CZDCwB,GDEG,AaDA,CbCCvB,AaDAG,CZDC,AMLC,CNKAiC,CIAE,CELC,CMMA,CRDE,AQCD,ERDG,CELC,EPOC,CAAC,ECFE,AYCA,CJJjBX,ADAAA,APGkB,AUHlBA,ADAAA,CGImB,GZDG,ADEA,CSLjB,ADAA,APGkB,AUHlB,ADAA,CVKmB,CSLjB,ADAA,AGAA,ADAA,INII,iBSAmC,CAAC,WbCW,EAAE;IGFnE,AIJA,ADKA,ADAA,AOAH,EHHG,ADAA,APGA,AUHA,ADAA,ANIA,ASAA,EbCIxB,EGHCyD,AFCD,AMLCQ,AFKAqB,ADCD,ASAA,CZDC9E,AGCA4D,ASAAtE,CVFE,CAAC,EUEC,CAACI,ENNG,APOC,COPA,CNKA,AMLC,APOCzB,CCFD,AMLC,AMMD,CTAC,ASAA,CTAC8F,CHDC,AIAC,EFDE,AFCD,CAAC,AIAC,CFDC,AFCD,AIAC,ADCD,EAAE,ESAE,EAAE,KbCD,CAAC3F,SAAS,caDoB,CAAC,gBJJzC4C,CDAAA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CCAA;ELI1B,EGHA,ADAA,AGAA,ADAA,AHHqB,AFMjBA,AODH,ETD0B,ACGvB,ASAA,EbCIvB,CKFC,CAACK,ADCF,ASAA,CTAC8D,AQAT,ACAStE,EVHwBoD,AEEpB,CAACjC,CQCD,CAACf,GbCK,EGJsB,AHIpBzB,AaDF,CRDG,ADCF,ASAA,CVHuB,ACGtB+F,EQAhB3E,IAAI,CCAmB,CDAjB,CRAmB,ASAA,CTAC,CAAC,EAAE,IAAI,AJCN,CIDOqE,AJCNrF,UIDgB,CAAC,CCDtB,MQC6B,CAAC;EJJzD,ADAA,AGAA,AJFD,EJG2C,AEEd,AQE7B,EVJ4C,AFGxC,AGCA,AQAA,AZCA,CAAC,CAAC,EIDE,CAACuF,WAAW,CAACK,UAAU,CAAC,IAAI,CAACvD,CAAC,GAAG,IAAI,CAACI,KAAK,CAACoD,OAAO,CAACZ,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC3C,CAAC,GAAG,IAAI,CAACG,KAAK,CAACoD,OAAO,CAACX,MAAM,GAAG,CAAC,EAAE,IAAI,CAACzC,KAAK,CAACoD,OAAO,CAACZ,KAAK,EAAE,IAAI,CAACxC,KAAK,CAACoD,OAAO,CAACX,MAAM,CAAC;EGPlK,ADOD,ADDA,AQCC,EVHGvC,AMFH,ADAA,AGAA,ADED,ANIA,EHDI,AWCA,AZCA,GGLK,CAAClB,AFGF,AWCAmF,AZCA,CCFCrE,ADEAtB,EGLI,CAACmB,CSID,AZCA,CAACf,EYDEL,GZCG,CGLG,ASIF,AZCA,CCFC,GAAGpB,QDEQ,EAAE,SCFC,CAACG,OEHR,EFGiB,MDEc,CAAC;EMD5D,ADFC,ADEA,EDJ4B,AMF5B,ADAA,AGAA,ADGD,AHLC,AKSD,AZCA,AaHC,EZCG,IAAI,CQJR,ADAA,APISyC,AUJT,aVIsB,GAAG5C,MQJZ+C,ADAAA,AGAAA,KFAK,ADAA,AGAA,EFAE,ADAA,AGAA,MVIgB,CAAC3C,UAAU;EEH/C,AOAA,AJGA,AMCC,AZCA,ECDD,AMTC,AFMA,ADEA,ASDA,EJFG,ADAA,AGAA,IFAIyI,ADAAA,AGAA,CJHR,AMOA,GJJY,ADAA,AGAA,CAACtF,EFAE,ADAA,ICAI,ADAA,AGAA,CAACwG,MAAM,CEIjB,GFJqB,EJHhB,MIGwB,EAAE;ERAvC,AFIA,ESJD,AJGA,ADFC,ADEA,AQCA,AZCA,ESJGrI,ADAA,ADHA,AMOA,EFJIqB,EHAA,ADHA,AMOA,CNPCS,AFKT,ADEA,ASAST,EJJE,AEAE,CFADpB,ADAA,AGAEmF,CHADvD,CKIC,CJJC,AIIA1B,CJJC,AFHA,EIGI,AEIF,CLJC,AGAEmI,AJHF,AMOArK,CJJC,ADAAoK,CCAC,EFHE,GCGG,CKIJ,CFJQ,AEIPnK,CFJQ,CHAD,GGAK,CAAC2D,AEIP,CRFZuD,AQEahH,GLJQ,EAAE,AGAE,APIpB,COJqB2K,ANEpB,AQEa,ERFX,AQEaE,IFJW,CAAC,mBEID,EAAE,KAAK,CAAC;IVLxD,AMED,AREC,ASJD,AHDA,ADIA,AMCC,AZCA,EKDG,ADEA,ASAA,ELJI,AGAA5H,EPIA,ASAA,CHLR,AJGA,AFES4C,AQAT,AZCA,AaDS5C,ELJI,AGAA,CAACwH,EEIA,CLJGlI,AKIF8M,CLJG,GAAC,CAAC,AGAE,APIF,ASAA,CFJGjF,APIFpE,ASAAnG,CLJC0C,CAAC,EFEhBU,CEFmBpC,AJIA,CJCjB,CWLqB,APIF,AQAlB,CDJqBoC,AEIP,CPFZ,AOEanD,CHLZmD,CJGC,EKFsB,CAAC+D,CDDnB,AGKa,CAAChH,CHLZ,CFCW,CAACkB,CGAW,CAACqF,CEIN,CAAC,IFJW,CAAC,GHAP,CAACjE,MAAM,EAAEC,CAAC,EAAE,EAAE;ECAzD,AFHA,EJCA,AFIA,AYGD,EFJI,ADDA,AJGAU,ADAA,ADEA,AQAA,AZCArB,IQLQf,AEDJ,ALGA,ADEA,AQAA,CTLR,AFIA,AKDS,ADAAoG,ADEApB,AQAAtE,CNFCyF,CNGC,CUNC,AVMAnF,CUNC4B,AEKA,CAAC9B,CZCC,CMHC,ANGA,CMHC4E,EIHE,AEKA,CFLCiE,ANKA,AQAA,CJJH,AJIIvE,CIJH/E,ARKI,CMHC,ANGA,EYDE,CNFC+B,CDAC,AOEA,CXDjB,CIDmB,CDEC,CMLC,AJGA,AFEA,CDLjBkC,AGGkB6B,AFEA,EIJF,AJII,CIJHzE,CLDb,AKCc,AEDI,CFCH,CLDb6C,AKCcpC,AFEI,AFEA,CEFCyG,AFEA7D,CMLC,EPAhB,AKCc,AEDI,CFCH,CLDb,IGGsB,AMEA,CRAC,AQAA,CNFC,AFEA,GEFG,CAAC,EEFF,EAAE,UAASuB,OAAO,EAAE;EKIvE,EJLA,AFHA,ADOD,EHHI,AFIA,AUHA,ANC0B,ADG1B,AQAA,AZCA,EUNI,EPAA,ACKA,AQAA,AZCArF,CGNC+C,ACKAgB,AQAAtE,CJJO,ARKN,CCFC,EWCE,AZCA,CQLO,AIINI,CJJOuI,APGN,CEJC,AFIA5G,CDEC,CAACvB,CGNC,ASKA,CXDC,AGCA,AQAA,CRACmE,AJCA,CAAClE,EQLQ,CAAC,GRKH,CQLO,ARKN,CQLOyH,ARKN,CIDC,CAAC,AQAA,CZCC,CYDC,CZCC,CIDC,AJCA,CIDC9G,CAAC,AJCA,CQLO,EAAE,AJIN,GIJSoG,CJIL,CAAChG,CCDxB,CGHgC,CAACU,CRKL,CKFxB,ADCyB,AJCA,CKFxBiD,ADCyBP,AJCAlE,GQLS,CAACkI,GJIH,AQAA,CRAC5E,AQAA,CPDxB,ALEyB,CQLO,ARKN,CQLO,ARKN,EIDE,AJCD,CAAC,CAAC,CIDE,CAAC,EAAE,IAAI,CAAC3C,CAAC,GAAG,IAAI,CAACG,KAAK,CAACoD,OAAO,CAACX,MAAM,GAAG,CAAC,EAAE,IAAI,CAACzC,KAAK,CAACoD,OAAO,CAACZ,KAAK,EAAE,IAAI,CAACxC,KAAK,CAACoD,OAAO,CAACX,MAAM,CAAC;EEFlK,AOCA,EJLA,ARMD,AMTC,AHUD,EOJI,ACIA,AZCA1D,EGNIa,AOAAM,ALG4B,ALG9B,CGNG,AHMFf,CYDC,CTLGiD,AMAX,AFHA,AKQS5D,CJJO,CEDH,CAACyF,CPAC,ASKF,CJJO,AIINrF,CJJOwH,ARKN,CAAC,CAAC,CUNG,AVMF,CUNGe,AEKF,CAAC,IJJU,CAACE,GEDD,CDAnB,ACAoB,GFCO,CAAC,AEDJ,AEKF,CFLG3G,AHHpB,CKQmB,EJJQ,CAACgG,EEDF,CAACe,MFCU,EAAE,CAAC,EEDF,CAAC,QEKM,CAAC;ACF7D,EZCA,AGCA,AStB0BrH,EPmB1B,EGDG,AECA,AJJA,AFKgC,AOGhC,AZCArB,EGNIc,AOAAK,AVMF,AaxB2B,CVkBxB,AHMFd,AaxB2BiB,CNe1B,AKQA,CTLGgC,AIHF1B,AKQAnC,CJHO,CCFL,ACAE,CAACkJ,AVMF,AaxB2B,CDuB1B,CAAC9I,CJHO,ARIN,COTC,EPSE,CQJO8G,ADLN,AKQA,CJHO,AEFJ,AEKF,CFLG2B,EFEI,CAAC,ADLJ,CKQC,CJHK3B,CAAC,AIGJ,CFLG,CAACxF,CFEGpC,IEFE,CAACmG,MAAM,CAACT,CFEL,CAACrF,IEFU,CAAC,OFEC,CAACoB,MAAM,EAAEmG,CAAC,EAAE,EAAE,AIGI,CAAC,UHLU;AIlB1C,ETsBtC,EKHD,AREC,AMLD,ADGC,EHAG,AQCA,ACIA,AZEA,CGPC,COAG,ALCJ,EOII,AZEArG,CMLR,AMGSb,GJHWV,CIGP,CAACc,AZEA,GAAG,CAAC,CYFC,CAAC,KJHK,CAACT,CIGC,EAAE,KNHbwI,GAAG,CEAmB,CAACjB,AFAlBkB,CEAmB,CAAC,CAAC5G,AFAlB,EAAE,GEAqB,CAACsH,OAAO,EIGE,CJHC,AHDpB,AOIoB,KJHK;AJC9D,EKHA,AFHA,AHlB6BlH,EHuB7B,EEDG,AQCA,ADDA,AJEA,AMGA,AZEA,EI7BgC,CAACU,CDsB7B,AEA8B,AOK9B,AZEAxB,CGPCyC,AFGT,AWESvD,CJHO,CFALqH,CDFE1B,COKA,CAACvF,AZEA,CMLC,CAACkH,CDFE,ALOD,CI7B+B,AJ6B9B,CGPC,ACtB8BvD,AQ2B9B,CTLC,ASKA,CNHC,CAACsD,CFxB+B,CDsB7B,CAAC/D,CGEC,CAACiE,CLCjB,EWEoB,ETLE,ASKA,CTLCnG,AGEA,CHFC,CGEC,CHFC,GGEGgH,CHFC,CAAC9E,CGEC,GAAG6E,GHFG,AGEA,CHFC9G,CAAC,CAAC,AGEA,CAAC,CAAC,CAAC,GAAG8G,GAAG,GMGG,CAAC;AR3BX,EKqBpD,ENED,AQCA,AJNC,ADOD,ELCI,AWEA,AZIA,IQPQ,AHFJxC,AOKA,AZIA/F,CQPK,AIGJI,CJHK,CPCH,EIHE,AOKA,CPLC2D,AOKAvD,CXFC,CAAC4B,AIHA,CAAC,EOKE,CXFC,AWEA,EZIE,CAACjB,MAAM,CKTC,EAAE,COKC,AZIA,CAAC,CYJC,CZIE,MKTI6E,OAAO,EAAE,kBOKmB,CAAC;AHPrE,ENEA,AMrBkC9D,AEsBlC,ALCA,ELED,AMTC,EGMGJ,AEKA,EJHI,AROArB,EYJA,CFLC,AHJT,AKSSL,CFLCyF,ALAE,GOKC,AZIE,CYJDxF,AZIEK,EUTA,CDtB2B,ACsB1B6I,AVSE,CAAC,OYJK,CAAC,MFLM,CAAC,AEKA,EAAE,EFLE,CAACjH,AHJlBd,CAAC,EAAEC,CAAC,EGIoB,AHJlB,CGImB+H,MAAM,CAAC,IVSM,CAAC,iBYJe,EAAE;AH3BjC,ERyB1C,EEJA,AQCA,ADCD,AJAC,EEEG,ADNA,APaA,CQPC,AROA,CYJGlJ,ELTA,CAACkB,CAAC,AFIE,CGED,AROA,EObEA,CAAC,AFIEqE,CGED,CIGG,EAAEnG,CJHD,CAAC4C,AHFE,CAACqD,KGEG,CAACmD,GHFK,CAAC7C,AOKR,CAACtG,CJHO,IAAI,EHFI,CAAC,EGEA,CIGL,CJHO,AHFE,CAAC,EAAE;EKAhD,EPFA,AFIA,AUHA,ALCA,ECHG,ECMI,AIGAY,AZIA,EObA,CJGR,AQCA,AJJSkB,ADKT,CCLU,CCMG,AROA,CKTO,CEJPA,CAAC,CCMGL,AROAA,CAAC,CQPA,AIGC,EAAE1B,AZIF,CQPA,AROC,CQPA,CROE0B,CQPAA,AROC,EQPA,CROGpB,EQPAN,CGFf,ERDEsE,CSMa,CAACpE,ETNV,EAAEqE,CGECnC,ENQoB,CGVjB,AKGQ,AROUX,CQPTpB,CLHP,AGEA,EAAE,ENQoB,EAAEqB,CAAC,EAAE,EQPR,AROU,CQPTD,MAAM,EAAEC,EAAC,EAAE,EAAE;IPDzD,ASFA,AHFD,EJGI,AQCA,ALCA,AMIA,CAAC,CAAC,ETNE,AKGI1B,AGFJ,ALCA,ANQIM,CGVH,AFGT,AKDSyB,CAAC,EKDE,ANAIoE,CFDH7B,AQCA1B,ALCAR,IHFI,CGEC,ADDI,CMAH,ALCAsF,ADDIzB,CMAHmD,CRDC,AKGJ,CLHK,AKGJ/I,AROQ,CMRH,ANQIqB,CMRHiG,ANQI,CAAC,CGVH,AQCA,AXSIhG,CGVH,CECK,CAAC6E,CJErB,AUFkB,ALCA,CHFCjC,AGEAI,GECD,CLHK,AKGJjD,AHFQ,CAACyE,ALSA,CQPR,AFDK,ANQI,CQPR,AGFK,CRDC,AKGLkD,CLHM,AQCA,ALCA,CNQK,CGVH,AECI,ALSA,CMRH,ADDIpD,KGEJ,CAACjG,GHFY,CAACyG,OAAO,CAAC,CGEhB,CAACpG,EHFmB,CAAC,EAAE,CAAC,CAAC,KGEZ,CAACqB,EAAC,CAAC,CAACkH,SAAS,EAAE,GAAGV,IAAI,CAACtF,MAAM,CAAC0G,MAAM,CAAC;EDNlG,EGEA,AEQD,EXHI,AKDA,EHFI,AQCA,EHEItJ,AFDJ,ANQI,CUVZ,AJES8B,CHFG,AGEF,CHFGV,AFGF,CIFK,ALSAQ,CWTD,ALCFQ,ELCE,CAACQ,AIFI,CAAC8D,CCCH,CAACgB,CHFG,CAACpD,AKGN,CAACjE,APAI,CKDC,ANQI,CMRHsH,CHFG,CECG,ALSA,CGVDpD,CECG,CKDrB,CJEmB,ANQI,CGVD,AGEFG,ANQIxD,CGVD,EKGJ,AROQ,CQPPQ,AROQG,CMRH,CECJ,CAAC,CAACyG,AFDK,GAAG,CNQK,CAAChI,IQPL,CAACiJ,OAAO,CAACvJ,CROU,CAAC0B,CAAC,CAAC,CAAC,OWTK,CHEd,CAACrB,YAAY,CAACqB,EAAC,CAAC,CAACkH,SAAS,EAAE,CAAC;EDPrF,AKUA,EXFD,AKDA,EHFI,AQCA,ADDA,CCCC,CHEG,EROIhH,EKTA,CMAD,ADDA,ALCE,IMAE,ENAI,EMAA,AXSI,CWTHgB,AXSId,CAAC,GAAGP,EWTF,CAAC6H,GXSO,GWTD,AXSK1H,CAAC,GWTF,AXSK,GAAI,KWTD,EAAE,kBDDkB;AHLhE,ENQA,AMjCwBY,ADgCxB,EHDD,AOAA,AEIC,EJDG,EGFI,AJhCuB,CAACU,CPyCpBpB,IKTI,CMAD,GNAKuE,EEhCuB,CAAC3B,APyCrB,CAACzC,CAAC,CKTC,CEhCsB,AFgCrBkE,CLSCzE,MAAM,EKTE,CAACC,MAAM,GAAG0E,MAAM,CAACD,MMAI,QNAU,EAAE;AEhCrB,EJ+B/C,AOAA,EFID,APFC,AKDA,AMGA,EDFG,IXSQtE,CYLZ,KPJoBuE,KLSG,CKTG,ALSF/E,CKTG6E,MOIlB,EZKwB,CKTG,ALSF,CKTGU,ALSF,EAAE,CAAC,CKTG,ALSF,CKTG,IAAI,CAAC;EFF9C,AKIA,AEJA,ETEA,AUCD,ALFC,EMKQ,IZMG/E,CCRZ,AKDA,KDAoB,KLSG,CAACI,QCRd,GKDG,CNSuB,GAAG3C,mBAAW,CAACG,SAAS;AGZ3D,AOAA,EP5B+B8C,AQ+B/B,AD9BmCE,EF+BnC,EPCG,AKDA,AMGA,ETnCkC,CAACQ,CGgC/B,AMGAiH,AZMIrI,CMTHiB,ELCE,GIDS,CJCL,CAACF,AKDA,CI/B4B,AEkC3B,CTnCiC,AEgC1B,CFhC2B6B,AGgChC,ADAMoC,ALSF,CMTH,AMGA,AZMI3E,GGzC+B,CFiC/B,AKDA,AMGA,CNHCY,AMGA6E,CPHO,CAAC,EOGJ,CAACC,ENHE,CNSK,EKTI,CAAC,AOGN,AZMItI,CYNHqF,KAAK,aZMS,CAACjF,UAAU;AGzCP,AOCX,EC8B3C,EHCA,APED,EKDI,AMGA,EZMI,EMTA,AMGAyK,CJFR,AFDS5B,GDAO,MCAE,AMGA,CNHCzF,EMGE,IAAI,CNHC,AMGA6E,GJFf,AFDkB,CAAC,AMGA,CAACC,GNHG,CAACW,EMGE,CAAC3D,MNHM,AMGA,CNHC9B,OAAO;AKFnD,EVGA,AUjCoCL,ELiCrC,EECI,AIGA,AZKA,IYLI2H,EPJI,CGCD,GIGG,GDrC+B,ACqC5B,IAAI,CAACjJ,GAAG,CAACkJ,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEH,SAAS,EAAEC,SJHS,CIGC,EAAE,KAAK,CAAC;ADrC3B,ELiC5C,EEED,APFC,EWKG,AZMA,IKVI,AOIAG,AZMA,CKVC,ALUAnI,CKVC,ILUI,CYNC,AZMAC,GYNG,CZMC,CAAC,EYNE,CAACjB,GAAG,CAACJ,KAAK,CAAC,AZMA,CYNC,CZMC,CYNC,CAAC,EAAE,QZMO,KYNM,CAAC;EJHpD,EPFA,AKAA,EMMG,EPJA,ALUI,EYNAG,CXJR,CWIU,AZME,CAACmB,EYNA,GZMK,CYND,AZMEC,CYNDnB,GAAG,AZME,CYNDC,AZMEnC,ICVhB0D,EWIoB,CAAC,CXJjB,AWIkB,AZMH,CAACzD,C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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 130,\r\n    cardHeight: 205,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemy = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3,\r\n    enemyList: [],\r\n    enemyOnScene: []\r\n}\r\n\r\n","import { CST } from \"../CST\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\nlet graveYardArray;\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"background\", \"./assets/background.png\")\r\n    }\r\n\r\n    create() {\r\n        console.log(\"HERE\");\r\n        let bg = this.add.sprite(-110, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n        bg.alpha = 0.3;\r\n\r\n        let startX = 0;\r\n        let startY = 0;\r\n\r\n        \r\n        if (graveYardArray.length == 0 ) {\r\n            console.log(\"You have no discarded or used cards.\")\r\n        } else {\r\n            for (let i=0; i < graveYardArray.length; i++) {\r\n                graveYardArray[i].setVisible(true);\r\n                let discardCard = this.add.existing(graveYardArray[i]);\r\n                discardCard.x = startX + (i * 150);\r\n                discardCard.y = startY;\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth;\r\n                discardCard.displayHeight = gameOptions.cardHeight;\r\n            }\r\n        }\r\n\r\n        this.input.once(\"pointerdown\", function() {\r\n            this.scene.stop(CST.SCENES.DISCARD_PILE);\r\n        }, this);\r\n    }\r\n}","import { gameOptions } from \"../../config\";\r\n\r\n// Cards that appear in the player's hand\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(scene, x, y, sprite);\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.effect = effect;\r\n        this.cardType = cardType;\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth;\r\n        this.displayHeight = gameOptions.cardHeight;\r\n    }\r\n    \r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCost() {\r\n        return this.cost;\r\n    }\r\n\r\n    getEffect() {\r\n        return this.effect;\r\n    }\r\n\r\n    getType() {\r\n        return this.cardType;\r\n    }\r\n\r\n    setCost(cost) {\r\n        this.cost = cost;\r\n    }\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.setInteractive( { useHandCursor: true});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","import { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.setDepth(0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nexport default class Player extends Phaser.GameObjects.Sprite {\r\n\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.maxHealth = 50;\r\n        this.health = this.maxHealth;\r\n        this.maxActionPoints = 6;\r\n        this.actionPoints = this.maxActionPoints;\r\n        this.handArray = [];\r\n        this.deckArray = [];\r\n        this.deckTrackerArray = [];\r\n        this.graveYardArray = [];\r\n        this.spriteType = \"player\";\r\n        this.keepCards = [];\r\n        this.keepCardsLimit = 2;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    selectCardInHand(player) {\r\n        // disable drag first on all cards\r\n        this.disableDragOnCards();\r\n        \r\n        for (let cards of this.handArray) {\r\n            cards.on(\"pointerdown\", function(pointer) {\r\n                // this is referring to the clicked object rather than player now\r\n                if (player.keepCards.includes(this)) {\r\n                        // removes the card from list \r\n                    player.keepCards.splice(player.keepCards.indexOf(this), 1);\r\n                    this.clearTint();\r\n                } else {\r\n                    if (player.keepCards.length < player.keepCardsLimit) {\r\n                        player.keepCards.push(this);\r\n                        // add a visual effect when clicked\r\n                        this.setTint(0x999999);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    moveCardsBackInDeck(scene) {\r\n        // get indexes of cards not in this.keepCards List\r\n        let indexList = [];\r\n        for (let cards of this.handArray) {\r\n            if (!this.keepCards.includes(cards)) {\r\n                let index = this.handArray.indexOf(cards);\r\n                indexList.push(index);\r\n            }\r\n        }\r\n\r\n        // remove the indexes in reverse order not to mess up the loop\r\n        for (let index=indexList.length-1; index >= 0; index--) {\r\n            this.deckArray.push(this.handArray[indexList[index]]);\r\n            this.handArray[indexList[index]].setActive(false).setVisible(false);\r\n            this.handArray.splice(indexList[index], 1);\r\n        }\r\n\r\n        // remove tint of cards remaining in hand\r\n        for (let cards of this.handArray) {\r\n            cards.clearTint();\r\n        }\r\n\r\n        // set up the deck sprites and deckArray and organise the cards on screen\r\n        this.shuffle();\r\n        this.deckSetUp(scene);\r\n        scene.arrangeCardsInCenter(this.handArray);\r\n        this.enableDragOnCards();\r\n\r\n    }\r\n    \r\n    // draw an amount of cards\r\n    drawCard(amountOfCards, scene) {\r\n        for (let i=0; i < amountOfCards; i++) {\r\n            let lastCard = this.deckTrackerArray.pop();\r\n            lastCard.setActive(false).setVisible(false);\r\n\r\n            let drawCard = this.deckArray.pop();\r\n            this.handArray.push(drawCard);\r\n            drawCard.cardInHand(scene);\r\n            scene.arrangeCardsInCenter(this.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    disableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = false;\r\n        }\r\n    }\r\n\r\n    enableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = true;\r\n        }\r\n    }\r\n    \r\n    deckSetUp(scene) {\r\n        let x = scene.game.config.width / 25;\r\n        let y = scene.game.config.height / 1.24;\r\n\r\n        // need to remove all sprites currently active\r\n        if (this.deckTrackerArray.length > 0) {\r\n            for (let j=0; j < this.deckTrackerArray.length; j++) {\r\n                this.deckTrackerArray[j].destroy();\r\n            }\r\n        }\r\n\r\n        for (let i=0; i < this.deckArray.length; i++) {\r\n            let cardBack = scene.add.sprite(x, y, 'cardBack');\r\n            cardBack.setOrigin(0.5, 1);\r\n            cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n            cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n            \r\n            this.deckTrackerArray.push(cardBack);\r\n            x += 3;\r\n        }\r\n    }\r\n    \r\n    // implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\n    shuffle() {\r\n        for (let i = this.deckArray.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i+1));\r\n            [this.deckArray[i], this.deckArray[j]] = [this.deckArray[j], this.deckArray[i]]\r\n        }\r\n    }\r\n\r\n    resetDeck(scene) {\r\n        console.log(this.graveYardArray.length);\r\n        if (this.deckArray.length <= 0) {\r\n            // push all the cards in graveYard array back to the deck\r\n            for (let i=this.graveYardArray.length; i > 0; i--) {\r\n                let card = this.graveYardArray.shift();\r\n                this.deckArray.push(card);\r\n            }\r\n            this.shuffle();\r\n            this.deckSetUp(scene);\r\n        }\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health += health;\r\n\r\n        // setting it back to max health if going over\r\n        if (this.health > this.maxHealth) {\r\n            this.health = this.maxHealth;\r\n        }\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints += actionPoints;\r\n\r\n        // setting it back to max AP if going over\r\n        if (this.actionPoints > this.maxActionPoints) {\r\n            this.actionPoints = this.maxActionPoints\r\n        }\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n}","export default class Enemy extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n        this.spriteType = \"enemy\";\r\n        this.setInteractive();\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    action(scene) {\r\n        scene.player.health = scene.player.getHealth() - 5;\r\n    }\r\n\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n}","export class Tooltip extends Phaser.GameObjects.Text {\r\n    constructor(scene, x, y, label) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 20,\r\n            y: 20\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\r\n        scene.add.existing(this);\r\n        this.visible = false;\r\n        this.setDepth(2);\r\n    }\r\n\r\n    showTooltip() {\r\n        this.visible = true;\r\n    }\r\n\r\n    removeTooltip() {\r\n        this.visible = false;\r\n    }\r\n    \r\n    setLabelCoordinates(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class DamageCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (this.effect.target == \"single\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\r\n                    this.setHealth(this.getHealth() - card.effect.damage);\r\n                    this.heartText.setText(this.getHealth());\r\n\r\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\r\n                        enemy.enemyOnScene[j].input.enabled = false;\r\n                    }\r\n                })\r\n            }\r\n        } else if (this.effect.target == \"all\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\r\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\r\n            }\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        return \"Damage: Inflicted damage is on the enemy's health.\";\r\n    }\r\n    \r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ComboCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        console.log(this);   \r\n    }\r\n\r\n    getLabel() {\r\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\r\n    }\r\n    \r\n   \r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ReloadCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // nned to account for next turn side effects\r\n    // such as losing action points next turn\r\n    activateCard(scene) {\r\n        if (this.effect.sideEffects !== null) {\r\n            // removing health if its overloading card\r\n            scene.player.setHealth(this.effect.sideEffects);\r\n            scene.heartext.setText(scene.player.health);\r\n            // add function here to kill the player if health goes to 0\r\n        }\r\n\r\n        scene.player.setActionPoints(this.effect.amount);\r\n    }\r\n\r\n    getLabel() {\r\n        return \"AP: \\nAction Points are used when activating a card.\"\r\n    }\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class HealingCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        if (this.effect.target == \"health\") {\r\n            scene.player.setHealth(this.effect.amount);\r\n            scene.heartext.setText(scene.player.health);\r\n        }\r\n        // include bottom when armour is introduced\r\n        // } else (this.effect.target == \"armour\") {\r\n        //     scene.player.setArmour(this.effect.amount);\r\n        //     scene.armourText.setText(scene.player.armour);\r\n        // }\r\n    }\r\n\r\n    getLabel() {\r\n        if (this.effect.target == \"armour\") {\r\n            return \"Armour: \\nRemoved before health when receiving damage.\";\r\n        } else if (this.effect.target == \"health\") {\r\n            return \"Health: \\nIf this reaches zero, you die.\"\r\n        }\r\n    }    \r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/button.js';\r\nimport { gameOptions, enemy} from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/zone.js\";\r\nimport Player from \"../helpers/classes/player.js\";\r\nimport Enemy from \"../helpers/classes/enemy.js\";\r\nimport DamageCard from \"../helpers/classes/cards/damageCard.js\";\r\nimport ComboCard from \"../helpers/classes/cards/comboCard.js\";\r\nimport ReloadCard from \"../helpers/classes/cards/reloadCard.js\";\r\nimport HealingCard from \"../helpers/classes/cards/healingCard.js\";\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        // data returns a list of preloaded cards\r\n        let cards = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemy.spriteWidth,\r\n            frameHeight: enemy.spriteHeight\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        this.player = new Player(this, 0, 0, \"guy\");\r\n        this.player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        this.player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        this.heartext = this.add.text(0,0, this.player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        this.heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, this.heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        this.actiontext = this.add.text(0,0, this.player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        this.actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, this.actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        // set it so a rectangular zone appear with overflow\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.launch(CST.SCENES.DISCARD_PILE, this.player.graveYardArray);\r\n        }, this);\r\n        \r\n        // loads all the different types of cards\r\n        this.loadCards();\r\n        \r\n        this.endTurnButton = new Button(gameWidth, gameHeight/2, \"End Turn\", this, this.endTurn.bind(this, this.player, this.endTurnButton), '#202529');\r\n        this.keepCardButton = new Button(gameWidth, gameHeight/2, \"Keep Cards\", this, this.keepCard.bind(this, this.player, this.keepCardButton), '#202529');\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 200, 200, 500, 500);\r\n\r\n        // shuffles the deck and sets up the visual for the deck cards\r\n        this.player.shuffle();\r\n        this.player.deckSetUp(this);\r\n        this.player.drawCard(gameOptions.startCards, this);\r\n\r\n        // spawning enemies according to spritesheet randomly\r\n        for (let i=0; i < enemy.numberOfSprites; i++) {\r\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemy.enemyList.push(enemySprite);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n\r\n        // card event listeners for pointer interactions\r\n        this.input.on('dragstart', function (pointer, gameObject) {\r\n            gameObject.tooltip.removeTooltip();\r\n            this.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            this.tweens.add({\r\n                targets: this.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = this.player.handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                this.player.handArray.splice(index, 1);\r\n            }\r\n\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n\r\n        }, this);\r\n\r\n        this.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        this.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                let yOffSet = 50;\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    y: gameObject.startPosition.y - yOffSet,\r\n                    displayWidth: gameOptions.cardWidth * 2,\r\n                    displayHeight: gameOptions.cardHeight * 2,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.showTooltip();\r\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\r\n\r\n            }\r\n        }, this);\r\n\r\n        // hover out listener\r\n        this.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    y: gameObject.startPosition.y,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.removeTooltip();\r\n            }\r\n       }, this);\r\n\r\n        this.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        this.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        this.input.on('drop', (pointer, gameObject, dropZone) => {\r\n            if (this.player.getActionPoints() >= gameObject.getCost()) {\r\n                gameObject.input.enabled = false;\r\n                gameObject.tooltip.removeTooltip();\r\n        \r\n                // setting card in the middle \r\n                gameObject.displayHeight = gameOptions.cardHeight;\r\n                gameObject.displayWidth = gameOptions.cardWidth;\r\n                gameObject.x = dropZone.x;\r\n                gameObject.y = dropZone.y + dropZone.y / 3;\r\n                \r\n                this.player.graveYardArray.push(gameObject);\r\n                gameObject.activateCard(this);\r\n\r\n                // remove the card from the scene after 500ms\r\n                setTimeout(function() { \r\n                    gameObject.setActive(false).setVisible(false); \r\n                }, 500);\r\n        \r\n                this.player.actionPoints = this.player.getActionPoints() - gameObject.getCost();\r\n                this.actiontext.text = this.player.getActionPoints();\r\n                dropZone.renderNormalOutline(this);\r\n        \r\n                this.cameras.main.shake(100, 0.02);\r\n            } else {\r\n                this.dragend(pointer, gameObject, false);\r\n            }\r\n        });\r\n\r\n        this.input.on(\"dragend\", this.dragend, this);\r\n    }\r\n\r\n    dragend(pointer, gameObject, dropped) {\r\n        \r\n        if (!dropped) {\r\n            this.player.handArray.push(gameObject);\r\n            gameObject.displayHeight = gameOptions.cardHeight;\r\n            gameObject.displayWidth = gameOptions.cardWidth;\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    loadCards() {\r\n        // damage cards\r\n        let cannon = new DamageCard(\"cannon\", 1, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\r\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\r\n\r\n        // combo cards\r\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\r\n        \r\n        // reload cards\r\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\r\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -15}, this, 0, 0, \"overload\");\r\n\r\n        // healing cards\r\n        let medkit = new HealingCard(\"medkit\", 0, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\r\n        let kevlar = new HealingCard(\"kevlar\", 1, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\r\n\r\n        this.player.deckArray.push(cannon);\r\n        this.player.deckArray.push(grenade);\r\n        this.player.deckArray.push(headshot)\r\n        this.player.deckArray.push(reload);\r\n        this.player.deckArray.push(overload);\r\n        this.player.deckArray.push(medkit);\r\n        this.player.deckArray.push(kevlar);\r\n    }\r\n    \r\n   \r\n    arrangeCardsInCenter(handArray) {\r\n        // arranges for the cards to be organised around the bottom middle of the screen\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            // cards remember their original coordinates for events that make the cards leave and renter the hand\r\n            card.startPosition = {\r\n                x: card.x,\r\n                y: card.y,\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(2);\r\n        }\r\n    }\r\n\r\n\r\n    // start keep cards and make keep cards button appear\r\n    keepCard(player) {\r\n        this.keepCardButton.visible = false;\r\n        this.endTurnButton.visible = true;\r\n        this.player.selectCardInHand(player);\r\n    }\r\n    \r\n    \r\n    // ends the player's turn\r\n    endTurn() {\r\n        this.keepCardButton.visible = true;\r\n        this.endTurnButton.visible = false;\r\n        this.player.moveCardsBackInDeck(this);\r\n        \r\n        // simulate enemies attacking\r\n        for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n            enemy.enemyOnScene[i].action(this);\r\n        }\r\n        this.heartext.text = this.player.getHealth();\r\n        \r\n        // automatic drawing goes here and checking if needing to reshuffle the deck\r\n        this.player.drawCard(1, this);\r\n        this.player.resetDeck(this);\r\n    }\r\n    \r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n            randomEnemy.setDepth(1);\r\n\r\n            enemy.enemyOnScene.push(randomEnemy);\r\n        }\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport HandCard from \"../helpers/classes/cards/handCard\";\r\nimport { BattleScene } from \"./battleScene\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/Overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\r\n    }\r\n\r\n    create() {\r\n        this.scene.add(CST.SCENES.BATTLE, BattleScene, false);\r\n        this.scene.start(CST.SCENES.BATTLE);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport { LoadScene } from \"./scenes/loadScene\";\r\nimport {BattleScene} from \"/src/scenes/battleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 1000,\r\n    height: 800,\r\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\r\n    scene: [\r\n        LoadScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}