{"version":3,"sources":["src/CST.js","src/helpers/classes/button.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/handCard.js","src/helpers/classes/zone.js","src/helpers/classes/player.js","src/helpers/classes/enemy.js","src/helpers/classes/cards/toolTip.js","src/helpers/classes/cards/damageCard.js","src/helpers/classes/cards/comboCard.js","src/helpers/classes/cards/reloadCard.js","src/helpers/classes/cards/healingCard.js","src/scenes/battleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","Button","x","y","label","scene","callback","bgColour","padding","setOrigin","setPadding","setStyle","backgroundColor","setInteractive","useHandCursor","on","add","existing","fontColour","color","newX","newY","Phaser","GameObjects","Text","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","DiscardPileScene","key","data","graveYardArray","load","image","gameWidth","game","config","width","gameHeight","height","bg","setScale","title","text","fontSize","startX","startY","xOffset","yOffSet","xCounter","yCounter","length","cards","setVisible","discardCard","displayWidth","displayHeight","input","stop","console","log","Scene","HandCard","name","cost","cardType","effect","sprite","visible","setDraggable","Sprite","Zone","setRectangleDropZone","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Player","frame","maxHealth","health","maxActionPoints","actionPoints","handArray","deckArray","deckTrackerArray","spriteType","keepCards","keepCardsLimit","player","disableDragOnCards","pointer","includes","splice","indexOf","clearTint","push","setTint","indexList","index","setActive","shuffle","deckSetUp","arrangeCardsInCenter","enableDragOnCards","amountOfCards","i","lastCard","pop","drawCard","cardInHand","draggable","j","destroy","cardBack","Math","floor","random","card","shift","Enemy","getRandomHealth","heartText","setEnemyCoordinates","enemySpawn","min","max","Tooltip","wordWrap","setDepth","DamageCard","tooltip","getLabel","target","once","setHealth","getHealth","damage","setText","enabled","ComboCard","ReloadCard","sideEffects","heartext","setActionPoints","amount","HealingCard","BattleScene","spritesheet","frameWidth","frameHeight","hud_bg","tileSprite","card_bg","setPosition","heart","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","launch","loadCards","endTurnButton","endTurn","bind","keepCardButton","keepCard","dropZone","zone","enemySprite","spawnEnemyOnScene","gameObject","removeTooltip","tweens","targets","angle","duration","background","alpha","dragX","dragY","type","startPosition","depth","showTooltip","setLabelCoordinates","getCost","activateCard","setTimeout","cameras","main","shake","dragend","dropped","character","modifiers","modifier","damage_num","time","delayedCall","damage_event","cannon","grenade","headshot","reload","overload","medkit","kevlar","bottomOfScreen","screenCenterX","yDelta","cardX","selectCardInHand","moveCardsBackInDeck","base_damage","action","damage_calculation","resetDeck","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","LoadScene","start","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AUAP,ADAA,ALAA,AQAA,ADAA,ALAA,AJAO,AaCP,AFDA,AVAA,AWAA,IdAaA,AEAA6B,GFAG,GAAG,KEAK,GAAG;AQC3B,ADAA,ALD2C,AQC3C,ADAA,ALDgD,ASEhD,AFDA,AVAA,AWAA,EdAI5B,AEAA6B,IAAI,EFAE,AEAA,CAAC,CFAC;AUCZ,ADAA,ALF2C,AQE3C,ADAA,ALFgD,ASGhD,AFDA,AVAA,AWAA,EZAIC,EFAI7B,IAAI,EAAE,EEAA,EAAE,CAAC,CFAG;AUAgB,ADAA,ALFO,AQEP,ADAA,ALFY,ASAhD,AFGA,AVDgD,AWAJ,EZCxC8B,EFAI7B,MAAM,CEAD,CFAG,CEAD,GAAG,IFAM;AUDY,ADAA,ALFO,AQEP,ADAA,ALFY,AOIhD,AVFgD,AWAJ,EZExC8B,EFAI7B,QEAM,EAAE,EFAI,CEAD,CFAG;AUFc,ADAA,ALFO,AQEP,ADAA,ALFY,ASKhD,AFAA,AVHgD,AWAJ,EdGxC,AEAA8B,YAAY,EAAE,GAAG;AFCrB,AUJoC,ADAA,ALFO,AQEP,ADAA,ALFY,AOMhD,AVJgD,AWAJ,CdI3C,CEAGC,SAAS,EAAE,CAAC;AFAf,AUJmC,ADAA,ALFO,AQEP,ADAA,ALFY,ASOzC,AFAP,AVLgD,AWAJ,EZKxCC,EaAOkB,MAAM,GbAF,AaAK,EbAH;AQLmB,ADAA,ALFO,AQEP,ADAA,ALFY,AJQhD,AWAA,AVNgD,AWAJ,CZM3C,CaAG0J,IAAI,EAAEtL,MAAM,CAACmO,IAAI;ALNe,ADAA,ALFO,AQEP,ADAA,ALFY,AJQ/C,AWCD,AVPgD,AWAJ,ECOxCtM,KAAK,EAAE,IAAI;ALPqB,ADAA,ALFO,AQEP,ADAA,ALFY,AJUzC,AWD2D,AVPlB,AWAJ,ECQxCE,EbASpB,IaAH,EAAE,GAAG,SbAgB,GAAG;AQRE,ADAA,ALFO,AQEP,ADAA,ALFY,AOSkB,AVPlB,AWAJ,EZSxCC,AaAAwN,KAAK,EAAE,EbAE,EAAE,GAAG;AQTkB,ADAA,ALFO,AQEP,ADAA,ALFY,AOSkB,AVPlB,AWAJ,EZUxCvN,EaDSwN,MAAM,EbCL,AaDO,EbCL,gBaDuB;AdXvC,ASEoC,ADAA,ALFO,AQEP,ADAA,ALFY,AJahD,AWJkE,AVPlB,AWAJ,CZW3C,GMbYzG,ADAQP,AFAAtD,AUWoBuK,IVXhB,AUWoB,CRXnB,CQWoBtO,CPX1B,KOWgC,CAACuO,KAAK,CAACC,GAAG;AdV9D,ASCoC,ADAA,ALApC,AQAoC,ADAA,ALFY,AJa/C,AWJiE,AVPlB,AWAJ,ENFxB,ADAM,AFAD,EUWuCC,UAAU,EAAEzO,MAAM,CAACuO,KAAK,CAACG;AdVzF,ASCoC,ADAA,ALApC,AQAoC,ADAA,ALFY,AJezC,AWN2D,AVPlB,AWAJ,ENFxB,ADAM,AFAD,AUW4E,CAAC,CdRjF/P,AGAA2E,AFYRxC,KAAK,CDZS,EGAE,AFYR;AQbe,ADAA,AGAA,ADAA,ALFY,AOSkB,AVPlB,AWAJ,EbCjB,AGAE,AIFzB,ADAA,AFAA,AHeAC,AaJAhC,KAAK,EAAE,CACHkP,GbGO,EAAE,CGfDlP,CEAAA,ECAAA,ANeK,EGfA,CEAA,CFAEH,CGAF,ADAEA,AFAC,CEAA,CCADA,AHAGC,CGAF,ADAEA,AFAC,CEAA,CCADA,AHAGgD,CGAF,ADAE8B,AQYZ,EPZY7E,AOarBkK,EVb0B,EEAC,AFACjH,CGAF,CDAG4C,CCAD,GHAM,CEAA,CFAE,CEAA,WQazB,EACXvD,kCAAgB;ALbY,ADAA,AGAA,ADAA,ALFY,ASiBhD,AFRkE,AVPlB,AWAJ,CCe3C,Cdd0B,AGAE,AFczBJ,EMhBgC,ADAQ,ADCvB0D,ADDuB,ASG/BuJ,MRFc,GQEL,CZaN,EAAE,GAAG;AQfe,ADAA,AGAA,ADAA,AIelC,AFRgE,AVPlB,EFG5C,AGDA,AEFuB,AJgBvBhN,AYdkB,ENHc,ADAQ,AFAA,aHiBzB,CDbHrC,CAAC,ACaI,CEdL2E,AFcM,CDbH1E,CAAC,EAAEC,AGDF,EAAE0E,GHCK,CGDD,CHCGzE,CGDD0E,IHCM,EAAEzE,EGDA,EAAE0E,IHCM,EAAEzE,AGDF,EAAEF,KAAK,CHCG,CGDDH,CHCG,AGDF,EAAEC,CAAC,EAAE8E,MAAM,EAAE;AMF/B,ADAA,AGAA,ADAA,AIiBpC,AFVkE,AVPlB,EGArB,AJiBvBzC,AYfkB,EbCkC,ASDnCuH,ADAAV,ALA8C,AQA9CgB,ADAAL,AHFb,ADAA,AFAA,AUiBJ/G,IAAI,GbAK,AaAF,ELfmB,ARef,COfgB,AEAA,CCAC,AVef,AaAF3B,MAAM,CAAC2O,IAAI,CAAC/M,GPjBb7C,ADAAA,CFAAA,EUiBmB,CAAC,CPjBf,ADAA,CFAA,CGAEH,ADAAA,CCAC,ADAA,AFADA,CAAC,CGAEC,ADAAA,CCAC,ADAA,AFADA,CAAC,CGAEC,ADAA6E,CFAA9B,IGAK,CDAC,AFAD,EEAG8C,AFAD5C,KEAM,CFAA,GAAEiC,oBAAoB,CAACnC,KAAK,EAAEE,MAAM,CAAC;AQOX,AVPlB,EOElB,ADAC,AGAC,ADAD,ALA3B,AJgBAZ,AYfA,EbAoD,AGDW,AID3D,ADAA,AFAApC,AFEKqC,KEFA,CGAAlC,ADAA+C,AFACvC,GAAG,CAACC,AHiBF,EAAE,CMjBE,CDAC,ADCLZ,CCDM,CCAC,ADAA,AJEM,CIFL,CFAE,CCCL,AQCH,ERDKH,CAAC,EAAEC,CAAC,EAAE8E,MAAM,EAAEgB,KAAK,EAAE,ODDZ;AHkBhC,AWZkE,CXYjE,CQjB6B,ADAC,AGAC,ADAD,ARCF,EFCrB,AGDA,AGDA,ADAoC,ADApC,ASCU,ENDN/F,CAAC,EAAE,CDAFiG,AFAAZ,CGAI,KDAE,GAAG,CFAC,GAAG,EEACqD,KNEbvI,AGDAA,CCDoB,CAAC,CAAC,EJEjB,AGDA,EHCEH,AGDAA,CHCC,AGDA,EHCEC,AGDAA,AGDkB,CNEjB,AGDA,AGDkB,ENEhBC,AGDA6E,AGDkB,EAAE,EAAE,CNEjB,AMFkB,CHCjB;AFgBhC,AWZiE,EHJ9D,ADAA,AGAA,ADAA,ARAyB,EFErB,AGDA,AGDA,ADDoC,ADCpC,ASAU,ENAN9E,CAAC,EAAE,CPEFK,AGDAqE,AGDA4B,AFAAjB,IDCI,GHCG,AGDAX,GHCG,AMFA,AFAA,CKAPA,ANCQ,CKDRA,AEAAA,CCAAA,ALAU,AFAA,EKAN,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,AECR,CPDmB,CGAP,ALAQ,CIAR,AEAA,ANAS,CKAPC,AEAF,APAU,CIARA,AEAAA,CCAAA,MFAQ,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE3E,AEAF,CHAEA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CDAEH,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEC,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAE8E,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE,AEAF,CHAE,AEAA,CCAA;ACID,EVH9D,EOD+D,ADAA,ALE3D,AQF2D,ADAA,AHC3D,ADAA,ADDA,CECC,CPEG/E,AaDAyC,CbCC,EAAE,AaDA,CbCC,AGDHmC,AGDAjE,COCIjB,GVAA,GAAGkF,EUAA,CAACjF,CVAG,GGDG,EAAE,AOCF,CAACC,GRFdO,AHCI,KGDC,EAAEH,CAAC,EAAEC,CAAC,EAAE8E,MAAM,EAAEgB,KAAK;AOI0B,IHJC,ADAA,ALG3D,AQH2D,ADAA,AHE3D,ADCA,ADFA,ADCA,AFDU,AWEV,CAAC,CbCG9F,CAAC,EAAE,CGDF6E,AIDAtE,ADCAmI,ADFA3C,ADCAT,MDCM,GAAGT,AGAA,ADFA,CECC,CAAC,AHAA,CECC3E,ADFA,EAAE,ADCAA,CDCC,EIDCG,ADCC,CAACQ,CFDC,CAACA,CECC,CAACyC,CFDC,CGAA,AHACiC,CGAAxF,CAAC,ADCC,CAACG,CCDA,IDCK,AFDA,CECC4C,CCDDzC,AHAE,GECG,CAAC0C,GCDC,CAAC/C,CAAC,CAAC,ADCE,CAACgD,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAKgD,MAAM,EAAE;AMCpB,ECA9D,EbCI,ASJA,ADAA,ALGA,AQHA,ADAA,AHEA,AFDA,ADAwC,AFD9B,CFIT,CMF8EhF,IHC1E4D,AIDApE,AFDAwF,CCC+E,EAAE,GDD3E,EFEE,AIDA,ADA8E,CCA7E,AFDA,EFEEpB,IEFGmB,IFEK,ADFlB,CODArB,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,ALCkB,EIDhBC,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA,EDAE3E,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEH,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE8E,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA;AEGG,ECA7D,EbEG,ASJA,ADAA,ALEyB,AQFzB,ADAA,ALCA,ADAA,EGAgBrE,ADA6E8C,AJAzFf,GAAG,CFGFlC,ASJA6I,ADAAA,AGAAA,ADAAA,ALCAlD,ADAAT,CFAI/F,GIA4F,EAAE,CGD3F,ADAA,AGAA,ADAA,EVIE,AEHF,CFGG,ASJA,ADAA,AGAA,ADAA,ARCFC,CFGG,AOHe,EPGb,AOHe,CEDdqJ,ADAAA,AGAAA,ADAAA,CLCC,CLGC,AEHF,CFGG,AEHFlJ,CGAG,CAAC,ADAA,CAACK,EGAiB,GHAZ,CAAC,IKDL,ADAA,AGAA,ADAA,CDACA,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEH,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,GDAC,ADAA,AGAA,ADAA,MDAKmE,ADAAA,AGAAA,ADAAA,YDAY,ADAA,AGAA,ADAA,EDAElE,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,MDAKoJ,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA;AEEhB,ETC9D,EHEI,ASJAlJ,ADAAA,AGAAA,ADAAA,AJA6G,ADC7G,ADDgC,AQG3BiK,AVFL,AWAH,CPDiH,AJC7G,CKD2CnJ,ADAmE,GGA1G,ADAA,AGAA,ADAA,CVIAT,ASJCM,ADAAA,AGAAA,ADAAA,ALCDqF,CED4C,EEAxC,ADAA,AGAA,ADAA,AHA0C,CEAzCpF,ADAAA,AGAAA,ADAAA,CEGM,KZCD,CAAC,CSJE,ADAA,AGAA,ADAA,AHA0C,AFC3C,GAAG,ELGCT,IKHI4F,GLGG,CAAClG,CAAC,EAAE,MAAKM,EKHG,KLGI,CAACL,CAAC,ASJtB,ADAA,AGAA,ADAA,CVIuB;EGFlD,ACAD,AQCoB,AVDpB,EFGI,ASJA,ADAA,AGAA,ADAA,AJAA,ADCA,AQDH,ENDiEgJ,IPKzDxI,ASJAsH,ADAAA,AGAAA,ADAAA,AJAAY,ADCAvC,CQCT,GNH0E,EAAE,EPK3D,CAAC,AMJA,ADCA,CIDC,ADAA,AGAA,ADAA,AJAA7F,CGACJ,ADAAA,AGAAA,ADAAA,CLCC,EAAE,EIDE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA,EJAE,CAAC,AOEnB,CPFoB,EAAE,CAAC,CAAC;EFCjC,AQCmB,AVDnB,EOD0B,ADAA,ALC1B,AQD0B,ADAA,AJEvBA,ADAA,ELEgBO,AaDhB,ENJyEuC,CDGpE,CAACnC,ADADuF,AQCD,CAACzD,ENJyE,ADGrE,CAAC7B,CCHsE,AMIvE,CAAC8B,GRDI,ELEiB,AaDhB,CPDG,ADAD,AQCD,CbCiBxC,CKFd,MQCK,EAAE,qBPDF,MOC6B,CAAC;EJF1D,ADAA,AGAA,ADAA,AEEA,EZC6C,AGH5C,AGGG,ADDA,ADFH,AFAA,CFG6C,CAAC,AOLwC,AMKnF,IPAKuI,ADDAtC,AQCD,CVDR,AUCS1D,IAAI,CAACC,KAAK,CAAC,GDDN,CPAW,GCCG,ADDA,CCCC1C,CHDlBA,AEAmB,AQCD,EAAE,EPAG,CHDlB,AGCmB,EHDjB,uBUCyC,CAAC;EJH3D,ADAA,AGAA,ADAA,EVIG,AONoF,ADMpF,ADDA,ADHH,AQEa,AVFb,CKFwF,CJKrF,AILsF,AMMtF,IbAKQ,AGDD,AGCCkI,ADDAlG,AQCD,CVDCqC,ACDT,AFAA,AWESpC,IAAI,CAACC,EVDE,EGCG,CHDA,AUCA,CVDC,AGCC,AOAD,EbAG,AKDA,CLCE,AEFpBH,CCCmB,CAACsC,AEAC,EAAE,AHDnB,EAAE,CWEmB,EVDE,AUCA,QTFV,qBSEuC,CAAC;IJJ7D,ADAA,AGAA,ADAA,AHDG7E,AFKA,AOFU,EZEaS,AGAvB,ACDA,AFAA,AWEA,GNNK,CJKD,AILEE,AFKDyF,ADDD,AFAA,AWEA,CVDC5F,ACDA4E,AFAA5C,AWEAC,ENNI,CAAC7B,CMMD,CAAC8B,GbD0B,CKArB,CLAuB,AaCvB,CNNG,AHIF,ASEA,CRDE,ADDD6C,EDCE,ADDA,ECCE,CCDC,AFAAhD,CUAhB,CRAkB,ASEA,CRDE,CHDA,AWEA,qBNNF,MMM6B,CAAC;IbDZ,ASJ7C,ADAA,AGAA,ADAA,AHAG,ADMA,ADDA,AHDJ,CFA+C,CAAC,AGC5CvC,ACDA,AQAIsC,ACEJ,GDFO,CLJFuC,AFKAwB,ADDD,ASEA,CJJR,ADAA,ALGS,AQHT,ADAA,ANESjB,AQAI7F,ACEJkD,CVDCyB,GUCG,CAACxB,CVDC,AILC,CJKAoC,CEAE,AODF,CLJG,AKIFtF,CCEE,CRDE,ADDD,ASEA,CTFCgG,CCCE,CELC,CKID,CAAC9F,GTCI,AUCA,CJJjBM,ADAAA,ALGkB,AQHlBA,ADAAA,CNEmB,ASEA,CTFC,CAAC,CDCC,CMHjB,ADAA,ALGkB,AQHlB,ADAA,ANEkB,EKFhB,ADAA,AGAA,ADAA,ENEoB,CAACkF,UAAU,CAAC,OSEO,CAAC;EXFzD,EFCG,AOJA,ADKA,ADAA,AODA,CAAC,CHFD,ADAA,ALGA,AQHA,ADAA,ANEA,ASEA,IbFKxE,AGCD,AILCqI,AFKAzC,ADDD,ASEA,CVDClG,ACDAgF,ASEA3C,CbFE,CAAC,EaEC,CAACC,ENNG,CAAC,CJKA,AILC,CJKA,AILC,AMMD,CTFC,ASEA,CTFC+C,CDCC,AEAC,ELDE,AGCD,CAAC,AEAC,CLDC,AGCD,AEAC,IQCG,CTFC,CAAC,ASEA,ITFI,CAAC5F,CAAC,GAAG,IAAI,CAACqE,KAAK,CAACwB,OAAO,CAAC5C,CSEC,CAAC,GTFG,GAAG,CAAC,EAAE,IAAI,CAAChD,CAAC,CKFxDE,CDAAA,AEAAA,CCAAA,APE2D,GKFtD,CDAA,AEAA,ANE0D,COF1D,APE2DkE,KAAK,CAACwB,OAAO,CAAC1C,MAAM,GAAG,CAAC,EAAE,IAAI,CAACkB,KAAK,CAACwB,OAAO,CAAC5C,KAAK,EAAE,IAAI,CAACoB,KAAK,CAACwB,OAAO,CAAC1C,MAAM,CAAC;EEEnK,AMDA,EHFA,ADAA,AGAA,ADAA,AHHqB,AFMjBhD,ADDJ,AFFC,EFC0B,AaGvB,GRDK,CAACW,AQCF,CAAC8B,EbHwBxC,AKEpB,CAACW,CQCD,CAAC8B,KbH2B,AaGtB,CRDG,AQCF,CbHuB,OaGf,EAAE,qBRDF,MQC6B,CAAC;EJJzD,ADAA,AGAA,AJFD,AHIC,AQAA,EZD0C,AKEd,AHH5B,AWKD,EbJ4C,AGGxC,KDFJ,mBAAU;EKJT,ADOD,ADDA,AQCC,EbHG1C,ASFH,ADAA,AGAA,ADED,ANAC,AQAA,ETGG,ADFA,GFDK,CAACW,AGGF,ADFA,CCECqD,ADFAvB,EFDI,CAAC7B,CECD,CAAC8B,KAAK,CFDG,AECF,CCEC,GAAGtB,QDFQ,EAAE,SCEC,CAACG,OHHR,EGGiB,MDFc,CAAC;EIG5D,ADFC,ELF4B,ASF5B,ADAA,AGAA,ADGD,AHLC,AHIA,AQAA,ACGA,EVCG,ADFA,ICEI,ADFA,COFR,ADAA,ALIS0C,AQJT,APEA,AQAA,AVASxB,IAAI,CAACC,KAAK,CAAC,ECEE,CSFjBH,ETEoBnB,ESFhB,CVAmB,CUAjB,CVAmB,COFjBpB,ADAAA,AGAAA,KFAK,ADAA,AGAA,EFAE,ADAA,AGAA,EPEE,IDEc,CAACwB,UAAU,EDFU,CAAC;EFD1D,AUAA,AJGA,EHCA,AITC,AFMA,AHCD,AWAC,EJFG,ADAA,AGAA,APEA,AQAA,IHFI4G,ADAAA,AGAA,APEA,CGLR,AHKShD,ASET,GJJY,ADAA,AGAA,CAACT,EFAE,ADAA,ICAI,ADAA,AGAA,CAACwE,APEA,CAAC5D,KOFK,APEA,CSEjB,CTFmB,EOFE,EJHhB,MIGwB,EAAE;EXAvC,AGIA,ADFA,EQFD,AJGA,ADFC,EIAGnB,ADAA,ADHA,AHKA,AQAA,ACEA,EFJIpE,EHAA,ADHA,AHKA,AQAA6D,ACEA,CNPCgB,AFKT,ADASO,ASEApF,EJJE,AEAE,CFADqE,ADAA,AGAEkC,CHAD5B,AIEA,CCEC,CJJC,AIIAwK,CJJC,AFHA,AKKA5M,EDFI,CHAD,AGAE8G,AJHF,CEGC,ADAAF,AJEA,AQAA,ACEA,CJJC,ALEA3D,ASEAjG,ENPE,GCGG,EGAI,CAAC,AEIP,CLJM,AJEA,ASELC,CTFM,CAAC,COFG,CAACmF,APEF,CCAjB4B,CQEc,CAAC7G,CLJM,AJEA,CAACyF,CIFC,AGAE,CAAC4E,ANEpB,EAAE,AQEa,CAAC,GFJU,CAAC,CPED,CAAC;IJHjD,ASED,ANEC,AOJD,AHDA,ADIA,AMCA,AVFC,AWID,ERFI,ADAA,EIFI,AGAA/J,EPEA,CMHR,AJGA,AFASoF,EIFI,AGAA,CAACyE,GHAGrC,CAAC,GAAC,CAAC,AGAE,APEF,COFGgC,APEF/D,CIFC+B,CAAC,GAAGzF,CFEjB,CKFqB,CAAC/B,EDDlBA,ANGkB,CAAC,EOFI,CAACuG,CDDnB,ANGkB,CAAC1G,CMHjB,ANGkB,CIFP,CAACuC,CGAW,APEF,COFG0D,GPEC,CAAC5B,EOFI,CAAC,EPEA,CIFP,AJEQwB,CIFP9B,MAAM,AJEQ,CAACd,CIFP0E,CAAC,EAAE,CJES,CIFP,EJEU,CAAC,EAAE,IAAI,CAAC1H,CAAC,GAAG,IAAI,CAACoE,KAAK,CAACwB,OAAO,CAAC1C,MAAM,GAAG,CAAC,EAAE,IAAI,CAACkB,KAAK,CAACwB,OAAO,CAAC5C,KAAK,EAAE,IAAI,CAACoB,KAAK,CAACwB,OAAO,CAAC1C,MAAM,CAAC;EKFlK,AFHA,AKKA,ACEA,EbNA,AGIA,ACCD,AFHC,ESCG,ADDA,AJGA,ADAA,IGFQjB,AEDJ,ALGA,CLHR,AGIA,AEDSyE,AHDT,EICWyB,CIHC,CAACtD,EJGE,CAACuD,GIHG,CAAC0B,CFCH,AFEI,CEFHxH,AFEI6F,IAAI,CAACE,ADAA,AHDlB,CCEC,CEDmB,EKHE,CVAjBtH,CMGmB,CEFH,CAAC2G,AFEI,CEFH,AEDI,CFCH,CAAC4B,AFEI,EIHE,AJGA,CAAC,CNHjB,AQCc,AEDI,CFCH,CRDb,YQC0B,EAAE,UAAS3C,OAAO,EAAE;EJEvE,ASCA,EJJA,AFHA,ADOD,AMFC,EZDG,AGIA,AQHA,ANC0B,AHA1B,EQFI,EVAA,AEEA9D,CFFCrC,CQCO,CLGL,GKHS,CAAC+I,ALGN,CAAC7E,CHJC,AEEA,CFFC,EGIE,ADFA,IMDU,ANCN,CMDO,ANCN5B,IMDU,ANCN,CMDO0G,ANCNzG,MAAM,CAACC,EMDQ,EAAE,CNCL,EMDQsF,GHG5B,CGHgC,CAACzD,EHG7B,CAACsB,GGHkC,CAACsD,KHG1B,CGHgC,CAAC;AKEpE,EPAA,AFDA,ASlB0BtI,EJe1B,ANMD,AITC,AKKA,EDCG,ATCA,EFHeH,AUCXd,ALG4B,AQpBH,CAACsE,CXmB1BvB,COFR,AFHA,AKKA,CJDgB,CRFQ,AUCX,CAACwD,AGjByB,CbgBb,CQEN,CAACiC,GEDD,AREF,CQFGa,EREA,GMDS,CAACG,ANCN,CAAC5G,EQFI,AEEpB,CHFC,ACAoB,CRED,CAACC,CMDO,CAAC,AEDJ,CAAC8B,AHHpB,GCI2B,ANCN,CMDO2E,ANCNtG,EQFI,CAAC4G,GREC,GMDS,EAAE,CAAC,EEDF,CAAC;ANCtD,ASlBsC,EVqBtC,ACzB6B3I,EEuB7B,ENHkC,ASE/B,AECA,AJJA,AFKgC,AOAhC,AVCA,CFLgC,CAAC,AUE7BjB,ANtB4B,CAACkB,CGmB7B,AKKA,AVCA+B,CKNC4B,AKKApC,CJAO,ANCN,COHC,ACAE,CAACoH,CEED,AVCA,CUDCnH,CJAO,CDLL,CLMC,CEzB+B,AFyB9B/B,CMDOmH,ADLN,AHnB8B9C,AQwB9B,CJAO,AEFJ,AEEF,CFFGwE,ARGF,CAAC9G,CMDK,AJxB0B,CIwBzB,ADLJ,CKKC,CJAKoF,CAAC,AIAJ,AVCA,CQHG,ARGF,CQHG9H,ARGF,CMDK+B,CNCH,EAAE,CQHG,ARGF,CQHGwE,CRGD,KQHO,CAACT,CFEL,CAAC1D,IEFU,AEEF,AVCA,CQHG,AEEF,AVCA,CAAChC,MMDE,CAACwD,ENCM,CAAC,CAAC,EMDF,ANCG,CAAC,CMDFkE,ANCG,CMDF,EAAE,EAAE,WCFe;ALtB5B,IJqBrD,ASEA,ANEC,AILD,ADGC,EKCG,ACCA,AVCA7E,EQHI,ALCJ,AHEE,CAACC,CUDC,CNAR,AMAST,GJAWV,CIAP,CAACW,CVCC,CAAC,CAAC,CAAC,CUDC,CAAC,KJAK,CAACN,MIAM,ENAhBuG,AMAkB,GNAf,CEAmB,CAACb,AFAlBc,CEAmB,CAAC,CAAC1E,AFAlB,EAAE,GEAqB,CAACuF,OAAO,GAAG,AHDpB,COCqB,CAAC,GJAG;ERJ9D,ASEA,AFHA,EJKA,EQAG,ADDA,AJEA,AMAA,AVEA,IGJkC,AOE9B,AVEAtG,CCDR,ASDSV,CJAO,CFALwF,CDFEpE,COEA,AVEA,CUFCnB,CNAC,CAACwF,AJEA,CGJE,EOEC,CAAC,AVEA,CIFC,AJEAvH,CIFCsH,EJEE,CAAC7E,CIFC,CAAC+E,CHCjB,CDCmB,CAACxF,GIFG,AMAA,ENAE,AMAA,INAIiG,AJEA,GIFG,AJEF,CAAC,EIFID,AJEF,CAAC,EIFI,AJEF,GIFK,CAAC,CAAC,CAAC,GAAGA,GAAG,CMAC,CAAC,AVEF,EAAE;EOL7D,ETFA,AWKD,AJNC,ADOD,EHCI,ASDA,EVC2DtF,EMDnD,AHFJQ,AOEA,CJAK,AIAJpB,CJAK,CLCH,EEHE,AOEA,CPFC/B,AOEAgC,AVCyD,CCAxD,CAAC+B,AEHA,AHGyD,CGHxD,EOEE,CTCC,ASDA,KAAK,EAAE,GPFG,EAAE,UAASgC,OAAO,EAAE,mBOEoB,CAAC;AHJtE,EAnBkClC,AEsBlC,ALCA,ENNA,AGQD,AITC,EGMGvE,AEEA,AVA2E,CAAC,CMAxE,ANAyE,EUAzE,CZLR,AUGS,AHJT,AKMSyC,CFFC8D,ALAE,GOEC,CAAC7D,EFFE,CDtB2B,ACsB1BoH,EEEE,CAAC,OAAO,EAAE,GZLf/I,AUGkB,CAAC,GVHf,CUGmB,CVHjBC,AUGkB2D,AHJlB9E,CAAC,EAAEC,CPCC,AODA,EPCE,AUGkB,AHJlB,CGImBiK,MAAM,CAAC,KEEK,CAAC;AHxBf,ENyB1C,EQHA,ADCD,AJAC,ENHG,AQKA,ADNA,AKMA,AVAA5G,CMAC,GRLG,AODA,AKMA,CZLChD,AODAN,AKMA4C,AVAA,CKNC,AFIE,AHEFrC,CMAC,EDNEP,AKMA,CLNC,AFIE0G,AOEF7D,CJAC,CRLC,GAAG,AQKA,AIAA,AVAA,CMACiC,AHFE,AOEF,AVAA,CGFG0B,EHEA,EAAE,CMAC,ANAA,CMAC8C,ANAA,GGFK,AOEF,CPFGzC,COED,CJAC,IAAI,EHFI,CAAC,EGEA,EAAE,AHFE,CAAC,EAAE,gBOEc,CAAC;EFF/D,EPEA,AQHA,ALCA,ECHG,AKMA,AVCA,EFNI7G,AQKA,CRLC,CODD,AKMA,AVCAyD,CFNGvC,AWGX,AJJSjB,ADKT,AMCS2C,CLNC,CCMG,CHFO,CLHL,AODF3C,AKMA,CLNC,AKMA4C,AVCA,CMDG8E,EAAC,ANCD,EUDE,AVCA,CMDA,AIAC,CJAA,EAAEA,EAAC,GAAGzF,CGFf,ICEsB,EAAE,GNDf/B,GECW,CAACoC,CFDP,EAAE,SECiB,CAACwB,MAAM,EAAE4D,EAAC,EAAE,EAAE,AIAW,CAAC;ITDrE,AOFA,AHFD,EIII,ALCA,AMCA,AVCA,EFNI1H,CAAC,CQKGiC,AGFJ,ALCA,AMCA,AVCAwB,CFNGvC,AGKX,AGDSlB,AMCA2C,CNDC,EKDE,ANAI8D,CMAH5B,ALCA3E,AMCA,CAACkK,AVCA,GAAG,CIFC,ADDI,CMAH,ALCAtH,ADDIyD,AHGJ,CSHC8C,CHEH,CAAC/G,CFDK,CAACS,CMCC,CDFC,ACEA,EPFM,CAAC8D,CFErB,AQFkB,ALCA,CAAC3D,EMCE,CJAH,CAACwE,AHFQ,AOEJ,CPFKjB,CGER,AFDK,CECJ,AGFK,CHEJ8C,CGFM,ALCA,EDDM,CCCH,ADDIhD,KGEJ,CAACtE,GHFY,CAAC6E,OAAO,CAAC,CGEhB,CAACxE,EHFmB,CAAC,EAAE,CAAC,CAAC,IOEA,CJAZ,CAACoF,AIAa,EJAZ,CAAC,CAAC8B,SAAS,EAAE,GAAGlB,IAAI,CAACzD,MAAM,CAAC4E,MAAM,CAAC;EDNlG,EGEA,EVAG,AGKA,AGDA,AJEA,CFNC,CWGG,ACEAY,EJAIpI,AFDJ,AJEAyB,CQJR,AJES3D,CAAC,CHCC,CEFK,CMAD,ALCFG,EHCE,ADCA,CCDC2E,AEFI,AOEF,CPFGkC,CCCH,AMCE9E,AVCFX,CIFCwB,EECF,CAACR,ALAI,CGDC,CAACS,EDDM,EAAE,CKDrB,CJEmB,CAACC,AMCN,CAACd,EJAI,CAACwF,CFDK,CECJ,ANCH,CMDI,ANCHjG,CMDIiH,AFDK,GAAG,CMCL,IVCE,CMDI,CAACgB,CNCF,EAAE,IMDO,CAACzH,YGFmB,CHEd,CAACK,YAAY,CAACoF,EAAC,CAAC,CAAC8B,SAAS,EAAE,CAAC;EDPrF,EJQD,AGDA,ENJI,AWGA,ADDA,ARIA,CSHC,CHEG,AIAAc,EZLA,AEMA3G,CFNCpD,CKGG,CMAD,ADDA,ALCE,IMAE,ATGA,EGHI,AOEA,CVCDe,CFNC,AWGA,ACEEW,CZLD,AWGA4C,IXHI,CAACxE,CWGC,CAACgJ,KXHK,AYKN,CZLOtJ,AWGA,ACENoC,CZLO,EAAE,CWGC,ATGR,CAACT,EFNU,CAACrB,IWGI,EAAE,CXHC,AEMR,CFNSL,CAAC,CAAC,AEMR,EAAE,YQJoB;AHLhE,EJQA,AIjCwBmB,ADgCxB,ENHD,AUEA,EFGI,AIAA,AVCA,CUDC,CDFG,AJhCuB,AKkCzB,CLlC0BC,CLmCxBwC,IGHQ,CMAD,GNAK6C,AHGJ,EKnC2B,CAACpF,ALmCzB,CAAC,EGHM,CEhCsB,AFgCrBkF,SAAS,CAACzC,MAAM,GAAG2C,MAAM,CAACD,MMAI,QNAU,EAAE;AEhCrB,EP6B/C,AUEA,EFID,ALFC,AGDA,AMGD,EDFI,ATGA,IAAI3C,MGHY4C,EHGJ,GAAG,CGHO,AHGN,CGHOF,SAAS,CAACS,IAAI,CAAC,IAAI,CAAC;EGE9C,AEJA,AEIA,EZNA,AGIA,AQCD,ALFC,EJMG,IAAI,CCHR,AGDA,GJIY,CAACtE,CGJO,aHIO,CCHjB,ADGkBoB,GIJf,GJIqB,GAAG,CAAC,EAAE;AQPvC,ECGA,AD9BmCW,EVyBnC,AQMA,AIAA,ETCG,AGDA,EJGoC,EIHhC,CNJR,AMISM,EHCE,GEDS,CFCL,CAACH,AGDA,CI/B4B,CL+BpB,CCAL,ADAMqC,CCAL,IHCI,AGDA,CAAClC,CDAO,CAAC,ILJpB9D,CMImB,GNJf,AKIwB,CAAC,CLJvBC,IAAI,EAAE,MEQC,IAAI,CAACwB,cAAc;AQnCD,EC8B3C,EHCA,ALED,ASFC,EZHG,AMIA,INJI,AMIA,AJGqC,CFPpC,AQKT,AFDSgG,AMCT,GPDgB,CLJHzH,IAAI,CMIC,CAAC8D,ENJE,CAAC,IAAI,AMIA,CNJC,AYKlB,EJAE,AFDkB,CAAC,CNJC7D,GMIG,CNJC,AMIAwH,INJI,CAAC,EAAE,EMIE,CAAC3D,OAAO;AKFnD,ERGA,AQjCoCN,ELiCrC,EECI,AIDK,EZJD,AEMqC,IFNjC,AKIA,CLJCnE,AQKF,MGlCkC,GX6BvB,CAACW,IAAI,EAAEC,IAAI,CAAC,+BQK6B;AGlClB,ELiC5C,EEED,ALFC,EHHG,AYIA,IPAI,AOAA2B,AVCA,CGDC,CAAC,OOAO,GAAG,IAAI,CAACC,IAAI,CAACC,MAAM,CAACC,KAAK,kBVCK;EMA9C,ERJD,AGEC,AGAA,EMEG,EPAA,EOAIC,CTAR,CDA+C,IAA9Bc,IUAC,CVAI,EUAD,IAAI,CTAjBY,ASAkB7B,ITAd,ASAkB,CAACC,CTAjB,KSAuB,CAACG,MAAM;EZJ3C,AQIA,EFFA,EHGG,AEDC,AOED,ITDI,ASCAqH,CTDC5F,AGDT,CJCYZ,GCAC,CSCC,CVDG,CCADY,ADAEX,CUCD,GTDG,CSCC,CAACnD,GAAG,CAAC2J,AVDE,CAAC,IAAI,CAAC,EIDlB,EMEoB,CAAC,CAAC,EAAE,CAAC,EAAE3H,SAAS,EAAEI,UAAU,EAAE,KAAK,CAAC;AJFvE,ERJA,AQ/BmCwB,ELqCpC,EGDI,AMEA,EPHC,EOGGgG,EVDI,CIDD,GJCKxG,CIDD,AMEA,CNFCqC,CEpC4B,CIsC1B,IAAI,CAACzF,EVDI,CIDD,AMEA,CAAC+B,CVDG,IUCE,AVDE,CUCD,AVDE/B,CUCD,EAAE,AVDE,CUCD,AVDEC,EUCA,MVDQ,CAACiD,KAAK,CUCD,AVDE,CUCD;AZPpD,AQ/B2C,ERDZ5C,AGsC/B,EGAD,EDFK,AOID,EZxCkC,CAACC,CYwC/B+B,EAAE,AVDEc,GUCC,IAAI,CZxCiC,AYwChCpD,CZxCiCQ,EYwC9B,AVDE,CUCDyD,AVDE/E,CFvC+B,AEuC9B,GAAGyD,EUCA,CAAC,CAAC,EAAE,AVDE,CUCD,EAAE,AVDGI,QAAQ,GAAGF,CUCF,CAAC,KVDS;AFvCF,EGsCtD,AGAA,IMGG6G,EPLC,IOKK,AVDEtG,CUCDb,QAAQ,CAAC,CAAC,AVDE,CUCD,AVDEpD,CAAC,GAAGyD,MAAM,GAAII,QAAQ,GAAGF,OAAQ;ACFxD,EAtCiCxC,EGsCjC,EDFI,AOODsJ,ET3CoC,CAACrJ,GDyC7B6C,CUED,CAACyG,MT3CwC,CAACzF,EDyC9B,CAAC3E,CUED,CAACuC,CT3CmC,MDyC1B,CAAC,CUED,AVFE,EAAE,CUEH,AVFI,CUEH,AVFI,EUEFI,UAAU,CAAC;AT3CW,IGsC1D,ADAD,EOMIwH,KNJJ,CJEYxG,CUED,CAACb,QAAQ,CAAC,AVF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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\n    SCENES: {\n        LOAD: \"LOAD\",\n        BATTLE: \"BATTLE\",\n        DISCARD_PILE: \"DISCARD_PILE\"\n    }\n}","// import { loadFont } from \"../font\"\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\n\nexport default class Button extends Phaser.GameObjects.Text {\n\n    constructor(x, y, label, scene, callback, bgColour) {\n        super(scene, x, y, label);\n        this.padding = {\n            x: 8,\n            y: 15\n        }\n        this.setOrigin(1, 0.5);\n        this.setPadding(this.padding.x, this.padding.y);\n        this.setStyle({ backgroundColor: bgColour});\n        this.setInteractive( { useHandCursor: true});\n        this.on('pointerdown', () => callback());\n        scene.add.existing(this);\n    }\n\n    setFontColour(fontColour) {\n        this.setStyle({color: \"#202529\"});\n    }\n\n    changePadding(newX, newY) {\n        this.padding = {\n            x: newX,\n            y: newY\n        }\n        this.setPadding(this.padding.x, this.padding.y);\n    }\n\n    changeOrigin(newX, newY) {\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\n            this.setOrigin(newX, newY);\n        }\n    }\n}\n","export const gameOptions = {\n    deck: 6,\n    startCards: 6,\n    cardWidth: 130,\n    cardHeight: 205,\n    cardDistance: 100,\n    cardAngle: 3,\n    cardYOffset: 10\n}\n\nexport const cardBackDimensions = {\n    backWidth: 130,\n    backHeight: 205\n}\n\nexport const enemy = {\n    spriteWidth: 73.3,\n    spriteHeight: 103,\n    numberOfSprites: 3,\n    enemyList: [],\n    enemyOnScene: []\n}\n\n","import { CST } from \"../CST\";\nimport Button from \"../helpers/classes/button\";\nimport { gameOptions } from \"../helpers/config\";\n\n\nexport class DiscardPileScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.DISCARD_PILE\n        })\n    }\n\n    init(data) {\n        this.graveYardArray = data;\n    }\n\n    preload() {\n        this.load.image(\"background\", \"./assets/background.png\");\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\n    }\n\n    create() {\n        let gameWidth = this.game.config.width;\n        let gameHeight = this.game.config.height;\n\n        let bg = this.add.image(-20, 0, \"background\").setOrigin(0,0);\n        bg.setScale(1);\n\n        let title = this.add.text(gameWidth/2, 5, \"Discard Pile\", {fontSize: \"45px\"});\n        title.setOrigin(0.5, 0);\n\n        let startX = 10;\n        let startY = 50;\n        let xOffset = gameOptions.cardWidth + 50;\n        let yOffSet = gameOptions.cardHeight + 60;\n        let xCounter = 0;\n        let yCounter = 0;\n\n        if (this.graveYardArray.length > 0) {\n            for (let cards of this.graveYardArray) {\n                cards.setVisible(true);\n                let discardCard = this.add.existing(cards);\n                discardCard.x = startX + (xCounter * xOffset);\n                discardCard.y = startY + (yCounter * yOffSet);\n                discardCard.setOrigin(0, 0);\n                discardCard.displayWidth = gameOptions.cardWidth * 1.3;\n                discardCard.displayHeight = gameOptions.cardHeight * 1.3;\n\n                xCounter++;\n                if (xCounter === 5) {\n                    xCounter = 0;\n                    yCounter++;\n                }\n            }\n        }\n\n        this.input.on(\"pointerdown\", function() {\n            this.scene.stop(CST.SCENES.DISCARD_PILE);\n        }, this);\n    }\n\n    damageCardFilter() {\n        console.log(\"Hello\");\n    }\n}","import { gameOptions } from \"../../config\";\n\n// Cards that appear in the player's hand\nexport default class HandCard extends Phaser.GameObjects.Sprite {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(scene, x, y, sprite);\n        this.name = name;\n        this.cost = cost;\n        this.effect = effect;\n        this.cardType = cardType;\n    }\n\n    cardInHand(scene) {\n        this.visible = !this.visible;\n        this.setInteractive();\n        scene.input.setDraggable(this);\n        this.setOrigin(0.5, 1);\n\n        // Minimises the cards initial display size\n        this.displayWidth = gameOptions.cardWidth;\n        this.displayHeight = gameOptions.cardHeight;\n    }\n    \n    getName() {\n        return this.name;\n    }\n\n    getCost() {\n        return this.cost;\n    }\n\n    getEffect() {\n        return this.effect;\n    }\n\n    getType() {\n        return this.cardType;\n    }\n\n    setCost(cost) {\n        this.cost = cost;\n    }\n}","export default class Zone extends Phaser.GameObjects.Zone {\n    constructor(scene, x, y, width, height) {\n        super(scene, x, y, width, height).setRectangleDropZone(width, height);\n        scene.add.existing(this);\n        this.normalZone = 0xffff00; // yellow\n        this.activeZone = 0x00ffff; // lightblue / turquoise \n\n        this.zoneOutline = scene.add.graphics();;\n        this.renderNormalOutline(scene);\n        \n    }\n\n    renderNormalOutline() {\n        this.zoneOutline.clear();\n        this.zoneOutline.lineStyle(2, this.normalZone);\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\n    }\n\n    renderActiveOutline() {\n        this.zoneOutline.clear();\n        this.zoneOutline.lineStyle(2, this.activeZone);\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\n    }\n}","import {cardBackDimensions} from \"../config.js\";\n\nexport default class Player extends Phaser.GameObjects.Sprite {\n\n    constructor(scene, x, y, sprite, frame) {\n        super(scene, x, y, sprite, frame);\n        this.maxHealth = 50;\n        this.health = this.maxHealth;\n        this.maxActionPoints = 6;\n        this.actionPoints = this.maxActionPoints;\n        this.handArray = [];\n        this.deckArray = [];\n        this.deckTrackerArray = [];\n        this.graveYardArray = [];\n        this.spriteType = \"player\";\n        this.keepCards = [];\n        this.keepCardsLimit = 2;\n        scene.add.existing(this);\n    }\n\n    selectCardInHand(player) {\n        // disable drag first on all cards\n        this.disableDragOnCards();\n        \n        for (let cards of this.handArray) {\n            cards.on(\"pointerdown\", function(pointer) {\n                // this is referring to the clicked object rather than player now\n                if (player.keepCards.includes(this)) {\n                        // removes the card from list \n                    player.keepCards.splice(player.keepCards.indexOf(this), 1);\n                    this.clearTint();\n                } else {\n                    if (player.keepCards.length < player.keepCardsLimit) {\n                        player.keepCards.push(this);\n                        // add a visual effect when clicked\n                        this.setTint(0x999999);\n                    }\n                }\n            });\n        }\n\n    }\n\n    moveCardsBackInDeck(scene) {\n        // get indexes of cards not in this.keepCards List\n        let indexList = [];\n        for (let cards of this.handArray) {\n            if (!this.keepCards.includes(cards)) {\n                let index = this.handArray.indexOf(cards);\n                indexList.push(index);\n            }\n        }\n\n        // remove the indexes in reverse order not to mess up the loop\n        for (let index=indexList.length-1; index >= 0; index--) {\n            this.deckArray.push(this.handArray[indexList[index]]);\n            this.handArray[indexList[index]].setActive(false).setVisible(false);\n            this.handArray.splice(indexList[index], 1);\n        }\n\n        // remove tint of cards remaining in hand\n        for (let cards of this.handArray) {\n            cards.clearTint();\n        }\n\n        // set up the deck sprites and deckArray and organise the cards on screen\n        this.shuffle();\n        this.deckSetUp(scene);\n        scene.arrangeCardsInCenter(this.handArray);\n        this.enableDragOnCards();\n\n    }\n    \n    // draw an amount of cards\n    drawCard(amountOfCards, scene) {\n        for (let i=0; i < amountOfCards; i++) {\n            let lastCard = this.deckTrackerArray.pop();\n            lastCard.setActive(false).setVisible(false);\n\n            let drawCard = this.deckArray.pop();\n            this.handArray.push(drawCard);\n            drawCard.cardInHand(scene);\n            scene.arrangeCardsInCenter(this.handArray);\n        }\n    }\n\n\n    disableDragOnCards() {\n        for (let i=0; i < this.handArray.length; i++) {\n            this.handArray[i].input.draggable = false;\n        }\n    }\n\n    enableDragOnCards() {\n        for (let i=0; i < this.handArray.length; i++) {\n            this.handArray[i].input.draggable = true;\n        }\n    }\n    \n    deckSetUp(scene) {\n        let x = scene.game.config.width / 25;\n        let y = scene.game.config.height / 1.24;\n\n        // need to remove all sprites currently active\n        if (this.deckTrackerArray.length > 0) {\n            for (let j=0; j < this.deckTrackerArray.length; j++) {\n                this.deckTrackerArray[j].destroy();\n            }\n        }\n\n        for (let i=0; i < this.deckArray.length; i++) {\n            let cardBack = scene.add.sprite(x, y, 'cardBack');\n            cardBack.setOrigin(0.5, 1);\n            cardBack.displayWidth = cardBackDimensions.backWidth / 2;\n            cardBack.displayHeight = cardBackDimensions.backHeight / 2;\n            \n            this.deckTrackerArray.push(cardBack);\n            x += 3;\n        }\n    }\n    \n    // implementing Durstenfeld shffle, an optimised version of Fisher-Yates\n    shuffle() {\n        for (let i = this.deckArray.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i+1));\n            [this.deckArray[i], this.deckArray[j]] = [this.deckArray[j], this.deckArray[i]]\n        }\n    }\n\n    resetDeck(scene) {\n        if (this.deckArray.length <= 0) {\n            // push all the cards in graveYard array back to the deck\n            for (let i=this.graveYardArray.length; i > 0; i--) {\n                let card = this.graveYardArray.shift();\n                this.deckArray.push(card);\n            }\n            this.shuffle();\n            this.deckSetUp(scene);\n        }\n    }\n\n    getHealth() {\n        return this.health;\n    }\n\n    setHealth(health) {\n        this.health += health;\n\n        // setting it back to max health if going over\n        if (this.health > this.maxHealth) {\n            this.health = this.maxHealth;\n        }\n    }\n\n    getActionPoints() {\n        return this.actionPoints;\n    }\n\n    setActionPoints(actionPoints) {\n        this.actionPoints += actionPoints;\n\n        // setting it back to max AP if going over\n        if (this.actionPoints > this.maxActionPoints) {\n            this.actionPoints = this.maxActionPoints\n        }\n    }\n\n    getSpriteType() {\n        return this.spriteType;\n    }\n}","export default class Enemy extends Phaser.GameObjects.Sprite {\n    constructor(scene, x, y, sprite, frame) {\n        super(scene, x, y, sprite, frame);\n        this.setScale(2);\n        this.health = this.getRandomHealth(10, 30);\n        this.spriteType = \"enemy\";\n        this.setInteractive();\n\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\n        this.heartText.setOrigin(1, 0);\n        \n        scene.add.existing(this);\n\n        this.setEnemyCoordinates(scene);\n        this.enemySpawn();\n\n        // this.heart = scene.add.image(0, 0, \"heart\");\n    }\n  \n    // generates a random number between min and max parameters\n    // min and max included\n    action() {\n        return Math.floor(Math.random() * 10);\n    }\n\n    getRandomHealth(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    setEnemyCoordinates(scene) {\n        this.y = scene.game.config.height * 0.6;\n        this.x = scene.game.config.width * 0.6;\n    }\n\n    enemySpawn() {\n        this.visible = !this.visible;\n        this.heartText.visible = !this.heartText.visible;\n    }\n\n    getSpriteType() {\n        return this.spriteType;\n    }\n\n    getHealth() {\n        return this.health;\n    }\n\n    setHealth(health) {\n        this.health = health;\n    }\n}","export class Tooltip extends Phaser.GameObjects.Text {\n    constructor(scene, x, y, label) {\n        super(scene, x, y, label);\n        this.padding = {\n            x: 20,\n            y: 20\n        }\n        this.setPadding(this.padding.x, this.padding.y);\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\n        scene.add.existing(this);\n        this.visible = false;\n        this.setDepth(2);\n    }\n\n    showTooltip() {\n        this.visible = true;\n    }\n\n    removeTooltip() {\n        this.visible = false;\n    }\n    \n    setLabelCoordinates(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n\n}","import { gameOptions, enemy } from \"../../config\";\nimport HandCard from \"./handCard\";\nimport { Tooltip } from \"./toolTip\";\n\nexport default class DamageCard extends HandCard {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(name, cost, cardType, effect, scene, x, y, sprite);\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\n        scene.add.existing(this);\n        this.cardInHand(scene);\n    }\n\n    cardInHand(scene) {\n        super.cardInHand(scene);\n    } \n\n    activateCard(scene) {\n        let card = this;\n        if (this.effect.target == \"single\") {\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\n                    this.setHealth(this.getHealth() - card.effect.damage);\n                    this.heartText.setText(this.getHealth());\n\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\n                        enemy.enemyOnScene[j].input.enabled = false;\n                    }\n                })\n            }\n        } else if (this.effect.target == \"all\") {\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\n            }\n        }\n    }\n\n    getLabel() {\n        return \"Damage: Inflicted damage is on the enemy's health.\";\n    }\n    \n\n}","import { gameOptions, enemy } from \"../../config\";\nimport HandCard from \"./handCard\";\nimport { Tooltip } from \"./toolTip\";\n\nexport default class ComboCard extends HandCard {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(name, cost, cardType, effect, scene, x, y, sprite);\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\n        scene.add.existing(this);\n        this.cardInHand(scene);\n    }\n\n    cardInHand(scene) {\n        super.cardInHand(scene);\n    } \n\n    activateCard(scene) {\n        let card = this;\n        console.log(this);   \n    }\n\n    getLabel() {\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\n    }\n    \n   \n}","import { gameOptions, enemy } from \"../../config\";\nimport HandCard from \"./handCard\";\nimport { Tooltip } from \"./toolTip\";\n\nexport default class ReloadCard extends HandCard {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(name, cost, cardType, effect, scene, x, y, sprite);\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\n        scene.add.existing(this);\n        this.cardInHand(scene);\n    }\n\n    cardInHand(scene) {\n        super.cardInHand(scene);\n    } \n\n    // nned to account for next turn side effects\n    // such as losing action points next turn\n    activateCard(scene) {\n        if (this.effect.sideEffects !== null) {\n            // removing health if its overloading card\n            scene.player.setHealth(this.effect.sideEffects);\n            scene.heartext.setText(scene.player.health);\n            // add function here to kill the player if health goes to 0\n        }\n\n        scene.player.setActionPoints(this.effect.amount);\n    }\n\n    getLabel() {\n        return \"AP: \\nAction Points are used when activating a card.\"\n    }\n\n}","import { gameOptions, enemy } from \"../../config\";\nimport HandCard from \"./handCard\";\nimport { Tooltip } from \"./toolTip\";\n\nexport default class HealingCard extends HandCard {\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\n        super(name, cost, cardType, effect, scene, x, y, sprite);\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\n        scene.add.existing(this);\n        this.cardInHand(scene);\n    }\n\n    cardInHand(scene) {\n        super.cardInHand(scene);\n    } \n\n    activateCard(scene) {\n        if (this.effect.target == \"health\") {\n            scene.player.setHealth(this.effect.amount);\n            scene.heartext.setText(scene.player.health);\n        }\n        // include bottom when armour is introduced\n        // } else (this.effect.target == \"armour\") {\n        //     scene.player.setArmour(this.effect.amount);\n        //     scene.armourText.setText(scene.player.armour);\n        // }\n    }\n\n    getLabel() {\n        if (this.effect.target == \"armour\") {\n            return \"Armour: \\nRemoved before health when receiving damage.\";\n        } else if (this.effect.target == \"health\") {\n            return \"Health: \\nIf this reaches zero, you die.\"\n        }\n    }    \n\n}","import { CST } from \"../CST.js\";\nimport Button from '../helpers/classes/button.js';\nimport { gameOptions, enemy} from \"../helpers/config.js\";\nimport Zone from \"../helpers/classes/zone.js\";\nimport Player from \"../helpers/classes/player.js\";\nimport Enemy from \"../helpers/classes/enemy.js\";\nimport DamageCard from \"../helpers/classes/cards/damageCard.js\";\nimport ComboCard from \"../helpers/classes/cards/comboCard.js\";\nimport ReloadCard from \"../helpers/classes/cards/reloadCard.js\";\nimport HealingCard from \"../helpers/classes/cards/healingCard.js\";\n\nexport class BattleScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.BATTLE\n        })\n    }\n\n    init(data) {\n        // data returns a list of preloaded cards\n        let cards = data;\n    }\n\n    preload() {\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\n        this.load.image(\"background\", \"./assets/background.png\");\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\n            frameWidth: enemy.spriteWidth,\n            frameHeight: enemy.spriteHeight\n        });\n    }\n\n    create() {\n        let gameWidth = this.game.config.width;\n        let gameHeight = this.game.config.height;\n\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\n        let card_bg = this.add.image(0, 0, \"card_holder\");\n        let bg = this.add.sprite(0, 0, \"background\");\n        hud_bg.setScale(2);\n\n        card_bg.setPosition(gameWidth/2, gameHeight);\n        card_bg.setScale(0.325);\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\n        bg.setScale(0.65);\n        \n        this.player = new Player(this, 0, 0, \"guy\");\n        this.player.setPosition(gameWidth/4, gameHeight/1.65);\n        this.player.setScale(3);\n\n        let heart = this.add.image(0, 0, \"heart\");\n        this.heartext = this.add.text(0,0, this.player.getHealth(), {color: \"black\", fontSize: \"30px\"});\n        heart.setScale(4);\n        this.heartext.setPosition(-18, -18);\n        let health = this.add.container(0, 0, [heart, this.heartext]);\n        health.setPosition(gameWidth/20, gameHeight/2.2);\n\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\n        this.actiontext = this.add.text(0,0, this.player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\n        this.actiontext.setPosition(-10, -18);\n        let actions = this.add.container(0, 0, [chamber, this.actiontext]);\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\n\n        // launch the discard pile scene in parallel\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\n        discardPile.on('pointerdown', (event) => {\n            this.scene.launch(CST.SCENES.DISCARD_PILE, this.player.graveYardArray);\n        }, this);\n        \n        // loads all the different types of cards\n        this.loadCards();\n        \n        this.endTurnButton = new Button(gameWidth, gameHeight/2, \"End Turn\", this, this.endTurn.bind(this, this.player, this.endTurnButton), '#202529');\n        this.keepCardButton = new Button(gameWidth, gameHeight/2, \"Keep Cards\", this, this.keepCard.bind(this, this.player, this.keepCardButton), '#202529');\n\n        // zone where cards can be dropped and activated\n        //let dropZone = new Zone(this, 500, 250, 665, 665);\n        let dropZone = this.add.zone(500, 250, 665, 665).setRectangleDropZone(665, 665);\n\n        // shuffles the deck and sets up the visual for the deck cards\n        this.player.shuffle();\n        this.player.deckSetUp(this);\n        this.player.drawCard(gameOptions.startCards, this);\n\n        // spawning enemies according to spritesheet randomly\n        for (let i=0; i < enemy.numberOfSprites; i++) {\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\n            enemy.enemyList.push(enemySprite);\n        }\n        this.spawnEnemyOnScene();\n\n        // card event listeners for pointer interactions\n        this.input.on('dragstart', (pointer, gameObject) => {\n            gameObject.tooltip.removeTooltip();\n            this.tweens.add({\n                targets: gameObject,\n                angle: 0,\n                x: pointer.x,\n                y: pointer.y,\n                duration: 50\n            });\n            this.tweens.add({\n                targets: this.background,\n                alpha: 0.3,\n                duration: 50\n            });\n            \n            let index = this.player.handArray.indexOf(gameObject);\n            if (index !== -1) {\n                this.player.handArray.splice(index, 1);\n            }\n\n            this.arrangeCardsInCenter(this.player.handArray);\n\n        }, this);\n\n        this.input.on('drag', (pointer, gameObject, dragX, dragY) => {\n            gameObject.x = dragX;\n            gameObject.y = dragY;\n        });\n\n        // hover over listener\n        this.input.on('gameobjectover', (pointer, gameObject) => {\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\n                let yOffSet = 50;\n                this.tweens.add({\n                    targets: gameObject,\n                    angle: 0,\n                    y: gameObject.startPosition.y - yOffSet,\n                    displayWidth: gameOptions.cardWidth * 2,\n                    displayHeight: gameOptions.cardHeight * 2,\n                    depth: 100,\n                    duration: 10\n                });\n                gameObject.tooltip.showTooltip();\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\n\n            }\n        }, this);\n\n        // hover out listener\n        this.input.on('gameobjectout', (pointer, gameObject) => {\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\n                this.tweens.add({\n                    targets: gameObject,\n                    y: gameObject.startPosition.y,\n                    angle: gameObject.startPosition.angle,\n                    displayWidth: gameOptions.cardWidth,\n                    displayHeight: gameOptions.cardHeight,\n                    depth: gameObject.startPosition.depth,\n                    duration: 10\n                });\n                gameObject.tooltip.removeTooltip();\n            }\n       }, this);\n\n        this.input.on('dragenter', (pointer, gameObject, dropZone) => {\n            //dropZone.renderActiveOutline();\n            gameObject.setTint(0xffa500);\n        });\n\n        this.input.on('dragleave', (pointer, gameObject, dropZone) => {\n            //dropZone.renderNormalOutline();\n            gameObject.clearTint();\n            if (gameObject.cost > this.player.actionPoints) {\n                gameObject.setTint(0xff0000);\n            }\n        }); \n\n        this.input.on('drop', (pointer, gameObject, dropZone) => {\n            if (this.player.getActionPoints() >= gameObject.getCost()) {\n                gameObject.input.enabled = false;\n                gameObject.tooltip.removeTooltip();\n                gameObject.clearTint();\n        \n                // setting card in the middle \n                gameObject.displayHeight = gameOptions.cardHeight;\n                gameObject.displayWidth = gameOptions.cardWidth;\n                gameObject.x = dropZone.x;\n                gameObject.y = dropZone.y + dropZone.y / 3;\n                \n                this.player.graveYardArray.push(gameObject);\n                gameObject.activateCard(this);\n\n                // remove the card from the scene after 500ms\n                setTimeout(function() { \n                    gameObject.setActive(false).setVisible(false); \n                }, 500);\n        \n                this.player.actionPoints = this.player.getActionPoints() - gameObject.getCost();\n                this.actiontext.text = this.player.getActionPoints();\n                //dropZone.renderNormalOutline(this);\n        \n                this.cameras.main.shake(100, 0.02);\n                for (let card of this.player.handArray){\n                    if (card.cost > this.player.actionPoints){\n                        card.setTint(0xff0000);\n                    }\n                }\n            } else {\n                gameObject.setTint(0xff0000);\n                this.dragend(pointer, gameObject, false);\n            }\n        });\n\n        this.input.on(\"dragend\", this.dragend, this);\n    }\n\n    dragend(pointer, gameObject, dropped) {\n        \n        if (!dropped) {\n            this.player.handArray.push(gameObject);\n            gameObject.displayHeight = gameOptions.cardHeight;\n            gameObject.displayWidth = gameOptions.cardWidth;\n            this.arrangeCardsInCenter(this.player.handArray);\n        }\n    }\n\n    damage_calculation(character, damage, modifiers) {\n        for (let modifier of modifiers){\n            damage = damage * modifier;\n        }\n        console.log(damage);\n        character.health = character.health - damage;\n        character.setTint(0xff0000);\n        let damage_num = this.add.text(0,0, \"-\" + damage, {color: \"red\", fontSize: \"30px\"});\n        damage_num.setPosition(character.x + 40, character.y - 80);\n        this.time.delayedCall(450, this.damage_event, [character, damage_num], this);\n    }\n\n    damage_event(character, damage_num){\n        character.clearTint();\n        damage_num.destroy();\n    }\n\n    loadCards() {\n        // damage cards\n        let cannon = new DamageCard(\"cannon\", 1, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\n\n        // combo cards\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\n        \n        // reload cards\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -15}, this, 0, 0, \"overload\");\n\n        // healing cards\n        let medkit = new HealingCard(\"medkit\", 0, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\n        let kevlar = new HealingCard(\"kevlar\", 1, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\n\n        this.player.deckArray.push(cannon);\n        this.player.deckArray.push(grenade);\n        this.player.deckArray.push(headshot)\n        this.player.deckArray.push(reload);\n        this.player.deckArray.push(overload);\n        this.player.deckArray.push(medkit);\n        this.player.deckArray.push(kevlar);\n    }\n    \n   \n    arrangeCardsInCenter(handArray) {\n        // arranges for the cards to be organised around the bottom middle of the screen\n        let bottomOfScreen = this.game.config.height;\n        let screenCenterX = this.game.config.width / 2;\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\n\n        for (let i=0; i < handArray.length; i++) {\n            let card = handArray[i];\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\n\n            card.x = cardX;\n            card.y = bottomOfScreen + yDelta;\n            card.angle = cardAngle;\n            if (i > handArray.length / 2 - 1) {\n                yDelta += gameOptions.cardYOffset;\n            } else {\n                yDelta -= gameOptions.cardYOffset;\n            }\n\n            // cards remember their original coordinates for events that make the cards leave and renter the hand\n            card.startPosition = {\n                x: card.x,\n                y: card.y,\n                angle: card.angle,\n                depth: card.depth\n            }\n\n            // sets card to the right in front\n            card.setDepth(2);\n        }\n    }\n\n\n    // start keep cards and make keep cards button appear\n    keepCard(player) {\n        this.keepCardButton.visible = false;\n        this.endTurnButton.visible = true;\n        for (let card of this.player.handArray){\n            card.clearTint();\n        }\n        this.player.selectCardInHand(player);\n    }\n    \n    \n    // ends the player's turn\n    endTurn() {\n        this.keepCardButton.visible = true;\n        this.endTurnButton.visible = false;\n        this.player.moveCardsBackInDeck(this);\n        \n        // simulate enemies attacking\n        for (let i=0; i < enemy.enemyOnScene.length; i++) {\n            let base_damage = enemy.enemyOnScene[i].action();\n            this.damage_calculation(this.player, base_damage, [1]);\n        }\n        this.heartext.text = this.player.getHealth();\n        \n        // automatic drawing goes here and checking if needing to reshuffle the deck\n        this.player.drawCard(6 - this.player.handArray.length, this);\n        this.player.resetDeck(this);\n        for (let card of this.player.handArray){\n            if (card.cost > this.player.actionPoints){\n                card.setTint(0xff0000);\n            }\n        }\n    }\n    \n    // spawning in enemies and their life\n    spawnEnemyOnScene() {\n        let minEnemies = 1;\n        let maxEnemies = 2;\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\n\n        let spawnEnemyDistanceX = 0;\n        let spawnHeartDistanceY = 0;\n\n        for (let i=0; i < numberOfEnemies; i++) {\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\n\n            // For some reason, enemies spawn invisible, no clue.\n            randomEnemy.enemySpawn();\n            randomEnemy.x += spawnEnemyDistanceX;\n            randomEnemy.heartText.y += spawnHeartDistanceY;\n\n            spawnEnemyDistanceX += 150;\n            spawnHeartDistanceY += 100;\n            randomEnemy.setDepth(1);\n\n            enemy.enemyOnScene.push(randomEnemy);\n        }\n    }\n}","import { CST } from \"../CST\";\nimport HandCard from \"../helpers/classes/cards/handCard\";\nimport { BattleScene } from \"./battleScene\";\n\nexport class LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.LOAD\n        })\n    }\n\n    preload() {\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\n        this.load.image(\"overload\", \"./assets/cards/Overload.png\");\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\n    }\n\n    create() {\n        this.scene.start(CST.SCENES.BATTLE);\n    }\n}","/** @type {import(\"../typings/*\")} */\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\nimport { LoadScene } from \"./scenes/loadScene\";\nimport {BattleScene} from \"/src/scenes/battleScene.js\";\n\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\n\nexport var config = {\n    type: Phaser.AUTO,\n    width: 1000,\n    height: 800,\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\n    scene: [\n        LoadScene,\n        BattleScene,\n        DiscardPileScene\n    ]\n};\n\nlet game = new Phaser.Game(config);"]}