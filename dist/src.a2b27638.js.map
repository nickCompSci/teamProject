{"version":3,"sources":["src/CST.js","src/helpers/classes/button.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/handCard.js","src/helpers/classes/zone.js","src/helpers/classes/player.js","src/helpers/classes/enemy.js","src/helpers/classes/cards/toolTip.js","src/helpers/classes/cards/damageCard.js","src/helpers/classes/cards/comboCard.js","src/helpers/classes/cards/reloadCard.js","src/helpers/classes/cards/healingCard.js","src/scenes/battleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","Button","x","y","label","scene","callback","bgColour","padding","setOrigin","setPadding","setStyle","backgroundColor","setInteractive","useHandCursor","on","add","existing","fontColour","color","newX","newY","Phaser","GameObjects","Text","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","DiscardPileScene","key","data","graveYardArray","load","image","gameWidth","game","config","width","gameHeight","height","bg","setScale","title","text","fontSize","startX","startY","xOffset","yOffSet","xCounter","yCounter","length","cards","setVisible","discardCard","displayWidth","displayHeight","input","stop","Scene","HandCard","name","cost","cardType","effect","sprite","visible","setDraggable","Sprite","Zone","setRectangleDropZone","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Player","frame","maxHealth","health","maxActionPoints","actionPoints","handArray","deckArray","deckTrackerArray","spriteType","keepCards","keepCardsLimit","player","disableDragOnCards","pointer","includes","splice","indexOf","clearTint","push","setTint","indexList","index","setActive","shuffle","deckSetUp","arrangeCardsInCenter","enableDragOnCards","amountOfCards","i","lastCard","pop","drawCard","cardInHand","draggable","j","destroy","cardBack","Math","floor","random","console","log","card","shift","Enemy","getRandomHealth","heartText","setEnemyCoordinates","enemySpawn","getHealth","min","max","Tooltip","wordWrap","setDepth","DamageCard","tooltip","getLabel","target","once","setHealth","damage","setText","enabled","ComboCard","ReloadCard","sideEffects","heartext","setActionPoints","amount","HealingCard","BattleScene","spritesheet","frameWidth","frameHeight","hud_bg","tileSprite","card_bg","setPosition","heart","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","launch","loadCards","endTurnButton","endTurn","bind","keepCardButton","keepCard","dropZone","enemySprite","spawnEnemyOnScene","gameObject","removeTooltip","tweens","targets","angle","duration","background","alpha","dragX","dragY","type","startPosition","depth","showTooltip","setLabelCoordinates","renderActiveOutline","getCost","activateCard","setTimeout","cameras","main","shake","dragend","dropped","cannon","grenade","headshot","reload","overload","medkit","kevlar","bottomOfScreen","screenCenterX","yDelta","cardX","selectCardInHand","moveCardsBackInDeck","action","resetDeck","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","LoadScene","start","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AUAP,ADAA,ALAA,AQAA,ADAA,ALAA,AJAO,AaCP,AFDA,AVAA,AWAA,IdAaA,AEAA6B,GFAG,GAAG,KEAK,GAAG;AQC3B,ADAA,ALD2C,AQC3C,ADAA,ALDgD,ASEhD,AFDA,AVAA,AWAA,EdAI5B,AEAA6B,IAAI,EFAE,AEAA,CAAC,CFAC;AUCZ,ADAA,ALF2C,AQE3C,ADAA,ALFgD,ASGhD,AFDA,AVAA,AWAA,EZAIC,EFAI7B,IAAI,EAAE,EEAA,EAAE,CAAC,CFAG;AUAgB,ADAA,ALFO,AQEP,ADAA,ALFY,ASAhD,AFGA,AVDgD,AWAJ,EZCxC8B,EFAI7B,MAAM,CEAD,CFAG,CEAD,GAAG,IFAM;AUDY,ADAA,ALFO,AQEP,ADAA,ALFY,AOIhD,AVFgD,AWAJ,EZExC8B,EFAI7B,QEAM,EAAE,EFAI,CEAD,CFAG;AUFc,ADAA,ALFO,AQEP,ADAA,ALFY,ASKhD,AFAA,AVHgD,AWAJ,EdGxC,AEAA8B,YAAY,EAAE,GAAG;AFCrB,AUJoC,ADAA,ALFO,AQEP,ADAA,ALFY,AOMhD,AVJgD,AWAJ,CdI3C,CEAGC,SAAS,EAAE,CAAC;AFAf,AUJmC,ADAA,ALFO,AQEP,ADAA,ALFY,ASOzC,AFAP,AVLgD,AWAJ,EZKxCC,EaAOkB,MAAM,GbAF,AaAK,EbAH;AQLmB,ADAA,ALFO,AQEP,ADAA,ALFY,AJQhD,AWAA,AVNgD,AWAJ,CZM3C,CaAGyJ,IAAI,EAAErL,MAAM,CAAC0N,IAAI;ALNe,ADAA,ALFO,AQEP,ADAA,ALFY,AJQ/C,AWCD,AVPgD,AWAJ,ECOxC7L,KAAK,EAAE,IAAI;ALPqB,ADAA,ALFO,AQEP,ADAA,ALFY,AJUzC,AWD2D,AVPlB,AWAJ,ECQxCE,EbASpB,IaAH,EAAE,GAAG,SbAgB,GAAG;AQRE,ADAA,ALFO,AQEP,ADAA,ALFY,AOSkB,AVPlB,AWAJ,EZSxCC,AaAA+M,KAAK,EAAE,EbAE,EAAE,GAAG;AQTkB,ADAA,ALFO,AQEP,ADAA,ALFY,AOSkB,AVPlB,AWAJ,EZUxC9M,EaDS+M,MAAM,EbCL,AaDO,EbCL,gBaDuB;AdXvC,ASEoC,ADAA,ALFO,AQEP,ADAA,ALFY,AJahD,AWJkE,AVPlB,AWAJ,CZW3C,GMbY/F,ADAQR,AFCAxD,AUUoBgK,IVVhB,AUUoB,CRXnB,CQWoB7N,CPX1B,KOWgC,CAAC8N,KAAK,CAACC,GAAG;AdV9D,ASCoC,ADAA,ALApC,AQAoC,ADAA,ALFY,AJa/C,AWJiE,AVPlB,AWAJ,ENFxB,ADAM,AFCD,EUUuCC,UAAU,EAAEhO,MAAM,CAAC8N,KAAK,CAACG;AdVzF,ASCoC,ADAA,ALApC,AQAoC,ADAA,ALFY,AJezC,AWN2D,AVPlB,AWAJ,ENFxB,ADAM,AFCD,AUU4E,CAAC,CdRjFtP,AGAAyE,AFYRtC,KAAK,CDZS,EGAE,AFYR;AQbe,ADAA,AGAA,ADAA,ALFY,AOSkB,AVPlB,AWAJ,EbCjB,AGAE,AIFzB,ADAA,AFCA,AHcAC,AaJAhC,KAAK,EAAE,CACHyO,GbGO,EAAE,CGdDzO,CEDAA,ECAAA,ANeK,EGdA,CEDA,CFCEH,CGDF,ADAEA,AFCC,CEDA,CCADA,AHCGC,CGDF,ADAEA,AFCC,CEDA,CCADA,AHCGgD,CGDF,ADAE4B,AQYZ,EPZY3E,AOarBkK,EVZ0B,EEDC,AFCCjH,CGDF,CDAG0C,CCAD,GHCM,CEDA,CFCE,CEDA,WQazB,EACXrD,kCAAgB;ALbY,ADAA,AGAA,ADAA,ALFY,ASiBhD,AFRkE,AVPlB,AWAJ,CCe3C,Cdd0B,AGAE,AFczBJ,EMhBgC,ADAQ,ADCvBwD,ADAuB,ASE/BgJ,MRFc,GQEL,CZaN,EAAE,GAAG;AQfe,ADAA,AGAA,ADAA,AIelC,AFRgE,AVPlB,EFG5C,AGDA,AEFuB,AJgBvBvM,AYdkB,ENHc,ADAQ,AFCA,aHgBzB,CDbHrC,CAAC,ACaI,CEdLyE,AFcM,CDbHxE,CAAC,EAAEC,AGDF,EAAEwE,GHCK,CGDD,CHCGvE,CGDDwE,IHCM,EAAEvE,EGDA,EAAEwE,IHCM,EAAEvE,AGDF,EAAEF,KAAK,CHCG,CGDDH,CHCG,AGDF,EAAEC,CAAC,EAAE4E,MAAM,EAAE;AMF/B,ADAA,AGAA,ADAA,AIiBpC,AFVkE,AVPlB,EGArB,AJiBvBvC,AYfkB,EbCkC,ASDnCuH,ADAAT,ALA8C,AQA9Ce,ADAAL,AHFb,ADAA,AFCA,AUgBJ/G,IAAI,GbAK,AaAF,ELfmB,ARef,COfgB,AEAA,CCAC,AVef,AaAF3B,MAAM,CAACkO,IAAI,CAACtM,GPjBb7C,ADAAA,CFCAA,EUgBmB,CAAC,CPjBf,ADAA,CFCA,CGDEH,ADAAA,CCAC,ADAA,AFCDA,CAAC,CGDEC,ADAAA,CCAC,ADAA,AFCDA,CAAC,CGDEC,ADAA2E,CFCA5B,IGDK,CDAC,AFCD,EEDG4C,AFCD1C,KEDM,CFCA,GAAE+B,oBAAoB,CAACjC,KAAK,EAAEE,MAAM,CAAC;AQMX,AVPlB,EOElB,ADAC,AGAC,ADAD,ALA3B,AJgBAZ,AYfA,EbAoD,AGDW,AID3D,ADAA,AFCApC,AFCKqC,KEDA,CGDAlC,ADAA+C,AFCCvC,GAAG,CAACC,AHgBF,EAAE,CMjBE,CDAC,ADCLZ,CCDM,CCAC,ADAA,AJEM,CIFL,CFCE,CCAL,AQCH,ERDKH,CAAC,EAAEC,CAAC,EAAE4E,MAAM,EAAEgB,KAAK,EAAE,ODAZ;AHiBhC,AWZkE,CXYjE,CQjB6B,ADAC,AGAC,ADAD,ARCF,EFCrB,AGDA,AGDA,ADAoC,ADCpC,ASAU,ENDN7F,CAAC,EAAE,CDAF+F,AFCAZ,CGDI,KDAE,GAAG,CFCC,GAAG,EEDCuD,KNEbvI,AGDAA,CCAoB,CAAC,CAAC,EJCjB,AGDA,EHCEH,AGDAA,CHCC,AGDA,EHCEC,AGDAA,AGDkB,CNEjB,AGDA,AGDkB,ENEhBC,AGDA2E,AGDkB,EAAE,EAAE,CNEjB,AMFkB,CHCjB;AFgBhC,AWZiE,EHJ9D,ADAA,AGAA,ADAA,ARAyB,EFErB,AGDA,AGDA,ADDoC,ADEpC,ASDU,ENAN5E,CAAC,EAAE,CPEFK,AGDAmE,AGDA4B,AFCAjB,IDAI,GHCG,AGDAX,GHCG,AMFA,AFCA,CKDPA,ANCQ,CKDRA,AEAAA,CCAAA,ALAU,AFCA,EKDN,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,AECR,CPDmB,CGAP,ALCQ,CIDR,AEAA,ANCS,CKDPC,AEAF,APCU,CIDRA,AEAAA,CCAAA,MFAQ,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAEzE,AEAF,CHAEA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CDAEH,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEC,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAE4E,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE,AEAF,CHAE,AEAA,CCAA;ACID,EVH9D,EOD+D,ADAA,ALE3D,AQF2D,ADAA,AHC3D,ADAA,ADDA,CECC,CPEG7E,AaDAyC,CbCC,EAAE,AaDA,CbCC,AGDHiC,AGDA/D,COCIjB,GVAA,GAAGgF,EUAA,CAAC/E,CVAG,GGDG,EAAE,AOCF,CAACC,GRFdO,AHCI,KGDC,EAAEH,CAAC,EAAEC,CAAC,EAAE4E,MAAM,EAAEgB,KAAK;AOI0B,IHJC,ADAA,ALG3D,AQH2D,ADAA,AHE3D,ADCA,ADFA,ADEA,AQGKuE,AVLK,AWEV,CAAC,CbCGnK,CAAC,EAAE,CGDF2E,AIDApE,ADCAmI,ADFA7C,ADEAT,KQGW,CTHL,GAAGT,AGAA,ADFA,CECC,CAAC,AHCA,CEACzE,ADFA,EAAE,ADEAA,CDAC,EIDCG,ADCC,CAACQ,CFAC,CAACA,CEAC,CAACyC,CFAC,CGDA,AHCC+B,CGDAtF,CAAC,ADCC,CAACG,CCDA,IDCK,AFAA,CEAC4C,CCDDzC,AHCE,GEAG,CAAC0C,GCDC,CAAC/C,CAAC,CAAC,ADCE,CAACgD,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAK8C,MAAM,EAAE;EMG9D,ACFpB,EbCI,ASJA,ADAA,ALGA,AQHA,ADAA,AHEA,AFDA,ADCwC,AFF9B,CFIT,CMF8E9E,IHC1E0D,AIDAlE,AFDAsF,CCC+E,EAAE,GDD3E,EFEE,AIDA,ADA8E,CCA7E,AFDA,EFEEpB,IEFGmB,IFEK,ADFlB,CODArB,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,ALCkB,EIDhBC,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA,EDAEzE,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEH,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE4E,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA;EEKvC,ACFnB,EbEG,ASJA,ADAA,ALEyB,AQFzB,ADAA,ALCA,ADCA,EGDgBnE,ADA6E8C,AJAzFf,GAAG,CFGFlC,ASJA8I,ADAAA,AGAAA,ADAAA,ALCArD,ADCAT,CFDI7F,GIA4F,EAAE,CGD3F,ADAA,AGAA,ADAA,EVIE,AEHF,CFGG,ASJA,ADAA,AGAA,ADAA,ARCFC,CFGG,AOHe,EPGb,AOHe,CEDdsJ,ADAAA,AGAAA,ADAAA,CLCC,CLGC,AEHF,CFGG,AEHFnJ,CGAG,CAAC,ADCA,CAACK,EGDiB,GHCZ,CAAC,IKFL,ADAA,AGAA,ADAA,CDACA,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEH,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,GDAC,ADAA,AGAA,ADAA,MDAKmE,ADAAA,AGAAA,ADAAA,YDAY,ADAA,AGAA,ADAA,EDAElE,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,MDAKqJ,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA;EPG9E,ASEA,EZAI,ASJAnJ,ADAAA,AGAAA,ADAAA,AJA6G,ADC7G,ADAgC,AFAhC,AWAH,CPDiH,AJC7G,CKD2Cc,ADAmE,GGA1G,ADAA,AGAA,ADAA,CVIAT,ASJCM,ADAAA,AGAAA,ADAAA,ALCDmF,CED4C,EEAxC,ADAA,AGAA,ADAA,AHA0C,CEAzClF,ADAAA,AGAAA,ADAAA,MVIK,CAAC,CSJE,ADAA,AGAA,ADAA,AHA0C,AFC3C,GAAG,AOGV,EZAWT,IKHI0F,GLGG,CAAChG,CAAC,EAAE,MAAKM,EKHG,KLGI,CAACL,CAAC,ASJtB,ADAA,AGAA,ADAA,CVIuB;EGFlD,ACCD,AFDA,EFGI,ASJA,ADAA,AGAA,ADAA,AJAA,ADCA,AOEU,ACHb,ENDiEiJ,IPKzDzI,ASJAoH,ADAAA,AGAAA,ADAAA,AJAAc,ADCAzC,CQCT,GNH0E,EAAE,EPK3D,CAAC,AMJA,ADCA,CIDC,ADAA,AGAA,ADAA,AJAA3F,CGACJ,ADAAA,AGAAA,ADAAA,CLCC,EAAE,EIDE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA,EJAE,CAAC,AOEnB,CPFoB,EAAE,CAAC,CAAC;EFEjC,AFDA,EOD0B,ADAA,ALC1B,AQD0B,ADAA,AJEvBA,ADAA,AOCU,EZCMO,AaDhB,ENJyEuC,CDGpE,CAACnC,ADADqF,AQCD,CAACvD,ENJyE,ADGrE,CAAC7B,CCHsE,AMIvE,CAAC8B,GRDI,ELEiB,AaDhB,CPDG,ADAD,AQCD,CbCiBxC,CKFd,KOEb,CCDkB,EAAE,qBPDF,MOC6B,CAAC;EJF1D,ADAA,AGAA,ADAA,EVG6C,AGH5C,AGGG,ADDA,ADDH,AFDA,CFG6C,CAAC,AOLwC,AKM/EoC,ACDJ,GDCO,CNDFmG,ADDAxC,AQCD,CVDR,ASEa1G,ACDJkD,IAAI,CAACC,GDCE,CAAClD,CCDE,CAAC,IRDK,AOEF,CAACE,ENDI,ADDA,CCCCM,CHDlBA,AEAmB,AQCD,EAAE,EPAG,CHDlB,AGCmB,EHDjB,uBUCyC,CAAC;EJH3D,ADAA,AGAA,ADAA,EVIG,AONoF,ADMpF,ADDA,ADFH,AQIG,AVLH,CKFwF,AKOpF,CTFD,AILsF,AMMtF,IbAKQ,AGDD,AGCCkI,ADDAlG,AQCD,CVDCmC,ACAT,AFDA,AWESlC,IAAI,CAACC,EVDE,EGCG,CHDA,AUCA,CVDC,AGCC,AOAD,EbAG,AKDA,CLCE,AEFpBH,CCCmB,CAACoC,AEAC,EAAE,AHDnB,EAAE,CWEmB,EVDE,AUCA,QTDV,qBSCuC,CAAC;EDE9D,EHNC,ADAA,AGAA,ADAA,AHDG3E,AFKA,ELAuBS,AGAvB,ACAA,AFDA,AWEA,GNNK,CJKD,AILEE,AFKDuF,ADAD,AFDA,AWEA,CVDC1F,ACAA0E,AFDA1C,AWEAC,ENNI,CAAC7B,CMMD,CAAC8B,GbD0B,CKArB,CLAuB,AaCvB,CNNG,AHKF,ASCA,CRDE,ADAD2C,EDAE,ADDA,ECCE,CCAC,AFDA9C,EECE,ASCA,CRDE,CHDA,AWEA,qBNNF,MMM6B,CAAC;EDCzD,EZF6C,ASJ7C,ADAA,AGAA,ADAA,AHAG,ADMA,ADDA,AHDJ,CFA+C,CAAC,AGC5CvC,ACAA,ASCA,INNK2E,AFKAwB,ADAD,ASCA,CJJR,ADAA,ALGS,AQHT,ADAA,ANGSjB,ASCAzC,CVDCyB,GUCG,CAACxB,CVDC,AILC,CJKAkC,CEAE,CELC,CMMA,CRDE,ADAD,ASCA,CTDCU,CCAE,CELC,KJKI,AUCA,CJJjBtF,ADAAA,ALGkB,AQHlBA,ADAAA,CNGmB,ASCA,CTDC,CAAC,CDAC,CMHjB,ADAA,ALGkB,AQHlB,ADAA,ANGkB,EKHhB,ADAA,AGAA,ADAA,ENGoB,CAACgF,UAAU,CAAC,OSCO,CAAC;EXFzD,EFCG,AOJA,ADKA,ADAA,AOAH,EHHG,ADAA,ALGA,AQHA,ADAA,ANGA,ASCA,IbFKtE,AGCD,AILCsI,AFKA5C,ADAD,ASCA,CVDChG,ACAA8E,ASCAzC,CbFE,CAAC,EaEC,CAACC,ENNG,CAAC,CJKA,AILC,CJKA,AILC,AMMD,CTDC,ASCA,CTDC6C,CDAC,AEAC,ELDE,AGCD,CAAC,AEAC,CLDC,AGCD,AEAC,IQCG,CTDC,CAAC,ASCA,ITDI,CAAC1F,CAAC,GAAG,IAAI,CAACqE,KAAK,CAACsB,OAAO,CAAC1C,CSCC,CAAC,GTDG,GAAG,CAAC,EAAE,IAAI,CAAChD,CAAC,CKHxDE,CDAAA,AEAAA,CCAAA,APG2D,GKHtD,CDAA,AEAA,ANG0D,COH1D,APG2DkE,KAAK,CAACsB,OAAO,CAACxC,MAAM,GAAG,CAAC,EAAE,IAAI,CAACkB,KAAK,CAACsB,OAAO,CAAC1C,KAAK,EAAE,IAAI,CAACoB,KAAK,CAACsB,OAAO,CAACxC,MAAM,CAAC;EECnK,EGHA,ADAA,AGAA,ADAA,AHHqB,AFMjBhD,ADAJ,AQDC,AVFA,EFC0B,AaGvB,GRDK,CAACW,AQCF,CDAR,ACAS8B,EbHwBxC,AKEpB,CAACW,CQCD,CAAC8B,KbH2B,AaGtB,CRDG,AQCF,CbHuB,EYGtCH,IAAI,CCAmB,CDAjB,CCAmB,qBRDF,MQC6B,CAAC;EJJzD,ADAA,AGAA,AJFD,AHKC,EJF0C,AKEd,AHH5B,AWKD,EbJ4C,AGGxC,ASCA,KVHJ,mBAAU;EKJT,ADOD,ADDA,AQCC,EbHGvC,ASFH,ADAA,AGAA,ADED,ANCC,EDEG,ASCA,AVHA,GFDK,CAACW,AGGF,ASCAkD,AVHA,CCECG,ADFAvB,EFDI,CAAC7B,CYID,AVHA,CAAC8B,EUGEH,GVHG,CFDG,AYIF,AVHA,CCEC,GAAGnB,QDFQ,EAAE,SCEC,CAACG,OHHR,EGGiB,MDFc,CAAC;EIG5D,ADFC,ELF4B,ASF5B,ADAA,AGAA,ADGD,AHLC,AHKA,AQID,ACFC,EVCG,ADFA,ICEI,ADFA,COFR,ADAA,ALIS0C,AQJT,APGA,AFDSxB,IAAI,CAACC,KAAK,CAAC,ECEE,GAAGtB,GDFG,EAAE,COFjBpB,ADAAA,AGAAA,KFAK,ADAA,AGAA,EFAE,ADAA,AGAA,EPGE,IDCc,CAACwB,UAAU,EDFU,CAAC;EFD1D,AUAA,AJGA,AMCC,ETAD,AITC,AFMA,AHCD,AWAC,EJFG,ADAA,AGAA,APGA,IKHI4G,ADAAA,AGAA,APGA,CGNR,AHMSlD,ASCT,GJJY,ADAA,AGAA,CAACT,EFAE,ADAA,ICAI,ADAA,AGAA,CAAC2E,APGA,CAAC/D,KOHK,APGA,CSCjB,CTDmB,EOHE,EJHhB,MIGwB,EAAE;EXAvC,AGIA,ADFA,EQFD,AJGA,ADFC,AOGA,EHHG6C,ADAA,ADHA,AHMA,ASCA,EFJIlI,EHAA,ADHA,AHMA,ASCA,CNPC2E,AFKT,ADCSO,ASCAlF,EJJE,AEAE,CFADmI,ADAA,AGAE9B,CHAD5B,CKIC,CJJC,AIIAiK,CJJC,AFHA,EIGI,CHAD,AGAEpF,AJHF,CEGC,ADAAF,AJGA,ASCA,CJJC,ALGA9D,ASCA/F,ENPE,GCGG,EGAI,CAAC,AEIP,CLJM,AJGA,ASCLC,CTDM,CAAC,COHG,CAACiF,APGF,CCDjB4B,CQEc,CAAC3G,CLJM,AJGA,CAACuF,CIHC,AGAE,CAAC8E,ANEpB,EAAE,AQEa,CAAC,GFJU,CAAC,CPGD,CAAC;IJJjD,ASED,ANEC,AOJD,AHDA,ADIA,AMCC,AVFA,AWID,ERFI,ADCA,EIHI,AGAA/J,EPGA,CMJR,AJGA,AFCSkF,AQCT,EJJa,AGAA,CAAC2E,GHAGvC,CAAC,GAAC,CAAC,AGAE,APGF,COHGkC,APGFjE,CIHC+B,CAAC,EFEhBtH,CEFmB+B,EGAI,ACIpB,CDJqB/B,CLEnB,CIHCA,ANIkB,CEDjB,AFCkB,EOHI,CAACqG,CDDnB,ANIkB,CAACxG,CMJjB,ANIkB,CIHP,CAACuC,CGAW,APGF,COHGwD,GPGC,CAAC1B,EOHI,CAAC,EPGA,CIHP,AJGQsB,CIHP5B,MAAM,AJGQ,CAACd,CIHPwE,CAAC,EAAE,CJGS,CIHP,EJGU,CAAC,EAAE,IAAI,CAACxH,CAAC,GAAG,IAAI,CAACoE,KAAK,CAACsB,OAAO,CAACxC,MAAM,GAAG,CAAC,EAAE,IAAI,CAACkB,KAAK,CAACsB,OAAO,CAAC1C,KAAK,EAAE,IAAI,CAACoB,KAAK,CAACsB,OAAO,CAACxC,MAAM,CAAC;EKHlK,AFHA,AMOA,EbNA,AGIA,ACED,AFJC,ESCG,ADDA,AJGAhD,ADAA,AOEA,IJJQ+B,AEDJ,ALGA,AOEA,CZLR,AGIA,AGDS,ADAAuE,AOEA7D,AVHT,CICU4D,EIHE,CAAC5B,AEKA,CAAC/B,ENFE,CAACkD,EIHE,AEKA,CFLCgE,AEKA,CJJH,CAACxH,CFEK,EMEE,CNFCpC,CDAC,AOEA,AVHlB,CCEC,CEDmB,EKHE,AJGA,CNHjBa,AMGkBwF,EEFF,CAACiB,CAAC,AEDI,CFCH,CAAC+B,AFEI,CAACV,CIHC,EVAhB,AQCc,AEDI,CFCH,CRDb,IMGsB,AMEA,CAAC,CNFC,GAAG,CAAC,EEFF,EAAE,UAASpC,OAAO,EAAE;EJGvE,ASAA,EJJA,AFHA,ADOD,ENHI,AGIA,AQHA,ANC0B,AOG1B,AVHA,EQFI,EVAA,AYKA,AVHA5D,CFFCrC,AYKAmC,CJJO,CLGL,ESCE,CJJO,AIINC,CJJO4G,ALGN,CAAChF,CHJC,AEEA,CFFC,CYKC,CTDC,ASCA,AVHA,IMDU,ANCN,CMDO,ANCN1B,IMDU,ANCN,CMDO+F,ANCN9F,EUGE,EAAE,EVHE,CAACC,EMDQ,EAAE,CNCL,EMDQsF,GHG5B,CGHgC,CAAC3D,EHG7B,CAACsB,GGHkC,CAACwD,GIIH,CAAC,CPDxB,CGHgC,CAAC;AKEpE,EPAA,AFAA,ASnB0BtI,EJe1B,ANMD,AITC,EIMG,ACIA,AVHA,EFHeH,AUCXd,ALG4B,AQpBH,CAACoE,CDsB1B,AVHArB,COFR,AFHA,AKQSN,CJJO,CRFQ,AUCX,CAAC4D,AGjByB,CbgBb,AYMb,CJJO,AIIN3D,CJJO8F,GEDD,AREF,CQFGc,AEKF,CAAC,CVHC,GMDS,CAACE,ANCN,CAAC5G,EQFI,CDAnB,ACAoB,CRED,CAACC,CMDO,CAAC,AEDJ,AEKF,CFLG4B,AHHpB,CKQmB,EJJQ,ANCN,CMDOkE,ANCN3F,EQFI,CAAC4G,GREC,GMDS,EAAE,CAAC,EEDF,CAAC,QEKM,CAAC;ARH7D,ASnBsC,EVqBtC,ACxB6B3I,EEsB7B,ENHkC,ASE/B,AECA,AJJA,AFKgC,AOGhC,AVFA,CFLgC,CAAC,AUE7BjB,ANrB4B,CAACkB,CGkB7B,AKQA,AVFA+B,CKNC0B,AKQAlC,CJHO,ANCN,COHC,ACAE,CAACoH,CEKD,AVFA,CUECnH,CJHO,CDLL,CLMC,CExB+B,AFwB9B/B,CMDOiH,ADLN,AHlB8B9C,AQ0B9B,CJHO,AEFJ,AEKF,CFLG0E,ARGF,CAAC9G,CMDK,AJvB0B,CIuBzB,ADLJ,CKQC,CJHKkF,CAAC,AIGJ,AVFA,CQHG,ARGF,CQHG5H,ARGF,CMDK+B,CNCH,EAAE,CQHG,ARGF,CQHGsE,CRGD,KQHO,CAACT,CFEL,CAACxD,IEFU,ARGF,CQHG,ARGF,CAAChC,MMDE,CAACwD,ENCM,CAAC,CAAC,EMDF,ANCG,CAAC,CMDFgE,ANCG,CMDF,EAAE,EAAE,AIGI,CAAC,UHLU;ALrB5B,IJoBrD,ASEA,ANEC,AILD,ADGC,EKCG,ACIA,AVFA3E,EQHI,ALCJ,AHEE,CAACC,CUEC,CNHR,AMGST,GJHWV,CIGP,CAACW,CVFC,CAAC,CAAC,CAAC,CUEC,CAAC,KJHK,CAACN,CIGC,EAAE,KNHbwG,GAAG,CEAmB,CAAChB,AFAlBiB,CEAmB,CAAC,CAAC3E,AFAlB,EAAE,GEAqB,CAACuF,OAAO,EIGE,CJHC,AHDpB,AOIoB,KJHK;ERJ9D,ASEA,AFHA,EJKA,EQAG,ADDA,AJEA,AMGA,AVDA,IGJkC,AOK9B,AVDAtG,CCDR,ASESV,CJHO,CFALsF,CDFElE,COKA,AVDA,CUCCnB,CNHC,CAACsF,AJEA,CGJE,EOKC,CAAC,AVDA,CIFC,AJEArH,CIFCoH,EJEE,CAAC3E,CIFC,CAAC6E,CHCjB,CDCmB,CUCC,AVDAtF,EUCE,CNHC,EAAE,IAAIkG,AJEA,GIFG,AJEF,CAAC,EIFID,AJEF,CAAC,EIFI,AJEF,GIFK,CAAC,CAAC,CAAC,GAAGA,GAAG,EJEA,CUCG,CAAC,AVDF;EOL7D,ETFA,AWKD,AJNC,ADOD,EHCI,ASEA,EVF2DvF,EMDnD,AHFJQ,AOKA,CJHK,AIGJpB,CJHK,CLCH,EEHE,AOKA,CPLC/B,AOKAgC,AVFyD,CCAxD,CAAC6B,AEHA,AHGyD,CGHxD,EOKE,CTFC,ASEA,UPLU,EAAE,COKC,EAAE,OPLMgC,OAAO,EAAE,kBOKmB,CAAC;AHPrE,EAnBkClC,AEsBlC,ALCA,ENNA,AGQD,AITC,EGMGrE,AEKA,AVH2E,CAAC,CMAxE,ANAyE,EUGzE,CZRR,AUGS,AHJT,AKSSyC,CFLC4D,ALAE,GOKC,CAAC3D,EFLE,CDtB2B,ACsB1BoH,EEKE,CAAC,QAAQ,EAAE,EZRhB/I,AUGkB,CAAC,GVHf,CUGmB,CVHjBC,AUGkByD,AHJlB5E,CAAC,EAAEC,CPCC,AODA,EPCE,AUGkB,AHJlB,CGImBiK,MAAM,CAAC,OEKO,CAAC;AH3BjB,ENyB1C,EQHA,ADCD,AJAC,ENHG,AQKA,ADNA,AKSA,AVHA5G,CMAC,GRLG,AODA,AKSA,CZRChD,AODAN,AKSA4C,AVHA,CKNC,AFIE,AHEFrC,CMAC,EDNEP,AKSA,CLTC,AFIEwG,AOKF6D,CJHC,CRLC,GAAG,AQKA,ANAA,CMACzF,AHFE,AHEF,CGFG0B,EHEA,EUGE,AVHA,CMAC,AIGA,AVHA,CMACiD,ANAA,GGFK,CAAC5C,EGEA,AIGA,EAAE,EJHE,EHFI,CAAC,EGEA,EAAE,AHFE,CAAC,EAAE,2BOKyB,EAAE;EFL3E,EPEA,AQHA,ALCA,ECHG,ALOA,EFNI3G,AQKA,AIGAsK,CZRC,CODD,ALOA7G,CFNGvC,AWGX,AJJSjB,ADKT,CCLU,CCMG,CHFO,CLHL,AODFA,CAAC,ALOA,CMDGwH,CIGC,CJHA,ANCD,CUEGvF,CVFD,CMDA,CAAC,EAAEuF,EAAC,GAAGvF,CGFf,ECKc,CAACC,MNJNhC,GECW,CAACoC,CFDP,AMIY,ENJV,SECiB,CAACwB,MAAM,EAAE0D,EAAC,EAAE,EAAE;ILDzD,AOFA,AHFD,EIII,ALCA,AJEA,EFNIxH,AYQAsK,CZRC,CQKGrI,AGFJ,ALCA,AJEAwB,CFNGvC,AGKX,AGDSlB,CAAC,EKDE,ANAIuG,CMAH5B,ALCAzE,CJEC,GUEK,AVFF,CIFC,ADDI,CMAH,ALCA4C,ADDIuD,AOKFpE,AVFF,CSHCqH,CHEH,CAAChH,CFDK,CAACS,EKDE,ENAM,CAAC4D,CFErB,AQFkB,ALCA,CAACzD,CMIL,CAACf,CJHG,CAACqF,AHFQ,CAACjB,CGER,AFDK,CECJ,AGFK,CHEJiD,CGFM,ALCA,EDDM,CCCH,ADDInD,KGEJ,CAACpE,GHFY,CAAC2E,OAAO,CAAC,CGEhB,CAACtE,EHFmB,CAAC,EAAE,CAAC,CAAC,KGEZ,CAACkF,EAAC,CAAC,CAACqB,SAAS,EAAE,GAAGP,IAAI,CAAC3D,MAAM,CAAC8E,MAAM,CAAC;EDNlG,EGEA,EVAG,AGKA,AGDA,AMIA,AVFA,CFNC,AYQA,CDLG,ACKF,EJHMxH,AFDJ,AJEAyB,CQJR,AJES3D,CAAC,CHCC,CEFK,CMAD,ALCFG,EHCE,ADCA,CCDCyE,AEFI,CAACkC,CCCH,AJEAvF,CIFCwB,EECF,CAACR,ALAI,CGDC,CAACS,EDDM,EAAE,CKDrB,CJEmB,CAACC,GECD,CAACwE,CFDK,CECJ,ANCH,CMDI,ANCH/F,CMDIiH,AFDK,GAAG,KJEH,CMDI,CAACgB,CNCF,EAAE,IMDO,CAACzH,YGFmB,CHEd,CAACK,YAAY,CAACkF,EAAC,CAAC,CAACqB,SAAS,EAAE,CAAC;EDPrF,EJQD,AGDA,AMIA,EZRI,AWGA,ADDA,ARIA,CSHC,CHEG,ERLA,AEMAlF,CFNCpD,CKGG,CMAD,ADDA,ALCE,IMAE,ATGA,EGHI,CHGDe,CFNC,AWGA,CXHC,AWGAqD,IXHI,CAACtE,CWGC,CAACiJ,KXHK,CAACvJ,AWGA,CXHC,EAAE,CWGC,ATGR,CAAC2B,EFNU,CAACrB,IWGI,EAAE,CXHC,AEMR,CFNSL,CAAC,CAAC,AEMR,EAAE,YQJoB;AHLhE,EJQA,AIjCwBmB,ADgCxB,AMIA,EZPD,AUEA,EFGI,ANCA,ESHI,AJhCuB,CAACC,CLmCxBwC,IGHQ,CMAD,GNAK2C,AHGJ,EKnC2B,CAAClF,ALmCzB,CAAC,EGHM,CEhCsB,AFgCrBgF,SAAS,CAACvC,MAAM,GAAGyC,MAAM,CAACD,MMAI,QNAU,EAAE;AEhCrB,EP6B/C,AUEA,EFID,ALFC,AGDA,AMIA,EDHG,ATGA,IAAIzC,MGHY0C,EHGJ,GAAG,CGHO,AHGN,CGHOF,SAAS,CAACS,IAAI,CAAC,IAAI,CAAC;EGE9C,AEJA,EVFA,AGIA,AQCD,ALFC,AMIA,EVEG,IAAI,CCHR,AGDA,AMIA,GVAY,CAACpE,CGJO,aOIX,AVAkB,CCHjB,ADGkBoB,GIJf,GJIqB,GAAG,CAAC,EAAE;AQPvC,ECGA,AD9BmCS,EVyBnC,AQMA,ELCG,AGDA,AMGK,EVA+B,EIHhC,CNJR,AMISM,EHCE,GEDS,CFCL,CAACH,AGDA,CI/B4B,CL+BpB,CCAL,ADAMqC,CCAL,IHCI,AGDA,CAAClC,CDAO,CAAC,ILJpB5D,CMImB,GNJf,AKIwB,CAAC,CLJvBC,IAAI,EAAE,MEQC,IAAI,CAACwB,cAAc;AQnCD,EC8B3C,EHCA,ALED,EHLI,AMIA,AMGA,IZPI,AMIA,AMGAG,AVAqC,CFPpC,AQKT,AFDS6F,GDAO,CLJHzH,IAAI,AYOA,CNHC,CAAC4D,CMGC,CZPC,CAAC,EYOE,CAAC/B,CZPC,AMIA,CNJC,EQKhB,AFDkB,AMGA,CNHC,AMGAC,CZPC7B,GMIG,CNJC,AMIAwH,CMGC,CAAC1F,EZPE,CAAC,EAAE,AYOA,ENHE,CAAC6B,OAAO;AKFnD,ERGA,AQjCoCN,ELiCrC,EECI,AIEA,EZPI,AEMqC,EUCrCtB,EZPI,AKIA,CLJC3C,AQKF,MGlCkC,CCoC3B,EZPI,CAACW,AYOF,IZPM,AYOF,CAAC6B,CZPG5B,GYOC,CZPG,AYOF6B,CZPG,KYOG,CAACG,MAAM,mBJFmB;AGlClB,ELiC5C,EEED,ALFC,EHHG,AYQA,IPJI,AOIAqH,AVHA,CGDC,CAAC,IOII,GAAG,IAAI,CAAC1J,GAAG,CAAC2J,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE3H,SAAS,EAAEI,MVHP,IUGiB,EAAE,KAAK,CAAC;EJHvE,ERJD,AGEC,AGAA,EMMG,EPJA,EOIIwH,CTJR,CDA+C,IAA9B1G,CUIF,GAAG,CVJI,GUIA,CAAClD,GTJf4D,ASIkB,CAAC7B,GTJf,EAAE,ASIkB,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC;EZRpD,AQIA,EFFA,EHGG,AEDC,AOKD,ITJI,ASIAO,CTJCsB,AGDT,CMKU,AVJEV,GCAC,ASIA,EVJI,CCADU,ADAET,CUID,CAACnD,ETJE,CSIC,CAAC+D,IVJM,CAAC,CUID,CAAC,CAAC,CVJG,CUID,AVJE,CUID,CNLjB,CMKmB,YAAY,CAAC;AJL/C,ERJA,AQ/BmCL,ELqCpC,EGDI,AMKAgG,EPNC,IOMK,AVJE,CIDD,AMKAnH,GVJKa,CIDD,CAACmC,CEpC4B,EIyCzB,CAAC,CAAC,CAAC,GVJK,CIDD,EJCI,IAAI,CAACvF,GAAG,CAACC,QAAQ,CAACiD,KAAK,CAAC;AFNrD,AQ/B2C,ERDZ5C,AGsC/B,EGAD,EDFK,AOQDsJ,EZ5CkC,CAACrJ,GEuC3B6C,CUKD,CAACyG,MZ5CsC,CAACrJ,EEuC5B,CAACtB,CFvC+B,AY4ChC,AVLE,CUKD8C,EVLIW,MAAM,CUKD,EVLKI,CUKJ,CAAC,EAAEX,IVLS,GAAGS,GUKF,CAAC,GVLS;AFvCF,EGsCtD,AGAA,IMOG+G,EPTC,IHIOxG,CUKD,CAACb,QAAQ,CAAC,AVLE,CAACpD,CAAC,GUKC,AVLEyD,CUKD,KVLO,GAAII,QAAQ,GAAGF,OAAQ;ACFxD,EAtCiCxC,EGsCjC,EDFI,AOUDgC,ET9CoC,AS8ClC,CT9CmC/B,AS8ClCsJ,GVLKzG,QCzCwC,AS8ClC,CT9CmCc,AS8ClClC,EVLI,CAACvC,GCzCmC,GS8C/B,GAAC,AVLI,CUKH,AVLI,CAAC,CUKH2C,CVLK,CAAC,CAAC,OUKG,GAAC,GAAG,CAAC;AT9CY,IGsC1D,ADAD,EOSIE,EAAE,CAACC,ENPP,CJEYa,KUKG,CAAC,IAAI,CAAC,AVLE,CAACC,QIFZ,IJEwB,GAAG5C,mBAAW,CAACG,SAAS,GAAG,GAAG;EGJjE,ICGG,AMQA,IAAI,CAAC8E,CVNGtC,CIFD,IAAI,AMQA,CNRC6B,EMQE,GVNK,CIFD,AMQAH,AVNExB,aAAa,EUMT,CAAC,AVNW7C,IUMP,EAAE,CAAC,EAAE,CAAC,EAAE,OVNU,CUMF,AVNGI,CUMF,SVNY,GAAG,GAAG;IIDpE,ADJC,EOYG,IAAI,CAAC6E,CVLG3C,KUKG,CAAC8G,EVLI,EAAE,OUKK,CAAC7H,SAAS,GAAC,CAAC,EAAEI,UAAU,GAAC,IAAI,CAAC;ENRxD,EDJA,EOaG,IAAI,CPXR,AOWSsD,CVLG,IAAI3C,CUKD,CAACR,MVLQ,EUKA,CAAC,CAAC,CAAC,AVLE,CAAC,EAAE,QGNZlD,KAAK,EAAE;ICE1B,EDDG,AOYA,IAAIyK,IVNQ/G,CUMH,GAAG,IAAI,AVNI,CUMH/C,EVNM,CUMH,AVNI,CUMH+B,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;INX5C,EDAG,AOYA,IPZIoE,AOYA,CNVR,AMUS+C,GVNOlG,KGNC,AOYA,GPZG,AOYA,AVNI,EGNF,AHMI,EUMF,CAAChD,GNVfiF,AMUkB,CAACxC,IAAI,CNVjB,AMUkB,CAAC,CNVjB,CMUkB,CAAC,EAAE,IAAI,CAACiD,MAAM,CAACsC,SAAS,EAAE,EAAE;MNT5D,ADHmB,EOY0C7H,ENTzD,CAAC8E,CJIG,CUK0D,EAAE,ENTzD,GAAGA,EMS6D,INTvD,wBDFF,IAAI,CAACG,SAAS;ICGpC,IDHoC,AOW6C1C,EVJzE,MUIiF,EAAE;ENR1F,IDHmC,AOW6D,CAAC,CAAC,AVJ1F;EIJR,IMSGoH,EPZA,EHOK,CUKA,CAACvH,QAAQ,CAAC,CAAC,CAAC,wCPZiB;ACGrC,EAjD8BjC,IM2D3B,EN3DiC,AJqD5B,CIrD6BC,CD8CA,AOa9B,CAAC2I,GPbIhG,KAAK,AOaD,CN3DgC,AM2D/B2G,CN3DgC3F,MAAM,IM2D3B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;AN3DiB,MM4DpD,IPbI,AOaAe,AVPC,IGNG,CAAC,COaC,GPbG,AOaA,CPbCO,GOaG,CAACxF,GAAG,CAAC+J,CPbC,CAAClE,OOaO,CPbC,AOaA,CPbC3C,AOaA,EAAE,CAAC,EPbE,AOaA,CPbC,AOaA4G,EPbE,GOaG,EAAE,IAAI,CAACZ,QAAQ,CAAC,CAAC;MAC7DjE,EVRK,IGLG,AOaF,CAAC4E,GPbKzD,MAAK,EOaC,CPbE,AOaDpE,IPbK,CAACoD,IOaG,GAAC,EPbK,AOaH,CPbIW,COaF3D,MPbS,CAACc,GOaA,EPbK,CAAC,AOaL,GAAG,CAAC;MAEhD,AVTA,IUSI8G,EPdI7D,KOcG,GAAG,CPdG,CAACF,EOcA,CAACjG,CPdG,CAACoG,COcD,CAAC6D,IPdK,CAAC,COcA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC;MACjD,AVRA,IGNI,AOcA,AVRA,CUQCC,AVRA3G,KAAK,CAACxD,EAAE,CAAC,CUQC,GAAG,IAAI,CAACC,GAAG,CAACyC,AVRA,EAAE,EUQE,CAAC,CAAC,EAAC,CAAC,EAAE,GVRG,CUQC,CAACiD,MAAM,CAACyE,eAAe,EAAE,EAAE;QPbpE,AOaqEhK,AVPjE,IAAI,CUOkE,AVPjEd,EUOmE,GVP9D,CAACmE,GUOoE,CVPhE,CAAC5E,QAAG,CAACC,MAAM,CAACG,YAAY,CAAC;MAC5C,CAAC,CUMoF0D,CVNlF,IAAI,CAAC,EUMqF,EAAE;IVLnG,EUKyG,CAAC,CPXtG,AOWuG;EVL1G,IGNG,AOYA,IAAI,CAACwH,UAAU,CAACL,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;EVNxC,IUOG,EPbA,EOaIO,OAAO,GAAG,IAAI,CAACpK,GAAG,CAAC+J,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAACC,OAAO,EAAE,IAAI,CAACE,UAAU,CAAC,CAAC;AVPrE,EAtDiC5J,IGgD9B,AOcA8J,EV9DoC,CAAC3G,IU8D9B,CAACoG,AV9DkC,WU8DvB,CAAC7H,SAAS,GAAC,EAAE,EAAEI,UAAU,GAAC,IAAI,CAAC;AV9DR,QGgD1C;MAAA,AOgBA;MPfA,AOgBA,IAAIiI,CPhBC,IAAIjE,KAAK,COgBC,EPhBAD,COgBG,IAAI,CAACnG,GPhBC,AOgBE,CPhBDiD,AOgBEc,MPhBI,AOgBE,CAAC,CAAC,CPhBH,CAAC,AOgBI,EPhBFqC,AOgBIhE,KPhBC,IAAI,CAAC,AOgBI,EPhBFgE,AOgBI,KPhBC,EAAE,EAAE,IOgBQ,CAAC,CAAC3G,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MACjF4K,EPhBI,IAAI,CAAChF,IOgBE,CAAC9C,IPhBM,CAAC0D,GOgBC,CPhBG,AOgBF,CPhBG,EOgBA,CAAC,CPhBG,AOgBFpG,CPhBGuF,SAAS,CAACe,GOgBC,CAAC,KPhBO,CAACC,KAAK,CAAC,CAAC,CAAC;QACrD,AOesCtG,IPflC,CAACsF,QOe8C,CPfrC,CAACe,AOesC,SPf7B,CAACC,KAAK,CAAC,CAAC,CAACC,SAAS,CAAC,KAAK,CAAC,CAAClD,UAAU,CAAC,KAAK,CAAC;MOeV,CAAC,CPd1D,AOc2D,IPdvD,CAACiC,SAAS,CAACU,MAAM,CAACK,SAAS,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC;MAC9C,AOcAiE,WAAW,CAACtK,EAAE,CAAC,aAAa,EAAE,UAAUuK,KAAK,EAAE;QAC3C,IAAI,CAACjL,KAAK,CAACkL,MAAM,CAAC3L,QAAG,CAACC,MAAM,CAACG,YAAY,EAAE,IAAI,CAAC0G,MAAM,CAAC7D,cAAc,CAAC;MPb1E,AOcA,CAAC,EAAE,IAAI,CAAC;MPdR,4CACkB,IAAI,CAACuD,SAAS;MOehC,EPfgC;MAAA,AOgBhC,IAAI,CAACoF,SAAS,EAAE;MAEhB,EPlBA,EOkBI,CAACC,aAAa,GAAG,IAAIxL,eAAM,CAAC+C,SAAS,EAAEI,KPlBT,KOkBmB,GAAC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAACsI,OAAO,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI,CAACjF,MAAM,EAAE,IAAI,CAAC+E,aAAa,CAAC,EAAE,SAAS,CAAC;MAC/I,IPnBkC,AOmB9B,CAACG,GPnBI1H,MAAK,KOmBK,GAAG,IAAIjE,eAAM,CAAC+C,SAAS,EAAEI,UAAU,GAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,CAACyI,QAAQ,CAACF,IAAI,CAAC,IAAI,EAAE,IAAI,CAACjF,MAAM,EAAE,IAAI,CAACkF,cAAc,CAAC,EAAE,SAAS,CAAC;UPlBhJ1H,MAAK,CAAC8C,SAAS,EAAE;MOoBrB,EPnBA;MOoBA,IAAI8E,QAAQ,GAAG,IAAI3G,aAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QPlBjD;MAAA,AOoBA;MACA,EPrBA,EOqBI,CAACuB,MAAM,CAACY,OAAO,EAAE;MPrBrB,AOsBA,IAAI,CAACZ,MAAM,CAACa,SAAS,CAAC,IAAI,CAAC;MAC3B,EPvBA,EOuBI,CAACb,MAAM,CAACoB,QAAQ,CAACrG,mBAAW,CAACE,UAAU,EAAE,IAAI,CAAC;MPvBlD;MACA,AOwBA,IPxBI,CAAC2F,OAAO,EAAE;MACd,AOwBA,IPxBI,CAACC,AOwBA,IAAII,CAAC,GAAC,CPxBG,AOwBF,CPxBGtH,COwBDsH,CAAC,GPxBK,AOwBFvF,CPxBG,YOwBE,CAACG,eAAe,EAAEoF,CAAC,EAAE,EAAE;MPvB9CtH,EOwBI,GPxBC,CAACmH,AOwBEuE,WAAW,GAAG,IAAIpD,EPxBA,CAAC,IAAI,CAACvC,MOwBD,CAAC,EPxBS,CAAC,COwBN,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAEuB,CAAC,CAAC;MPvBvD,EOwBIvF,EPxBA,CAACqF,UOwBI,CAACjF,MPxBY,EAAE,COwBL,CAACyE,IAAI,CAAC8E,WAAW,CAAC;IPtBzC,EOuBI;MACA,IAAI,CAACC,iBAAiB,EAAE;IPtB5B;EAAA,IOwBI;IPxBJ,EOyBI,IAAI,CAACzH,KAAK,CAACxD,EAAE,CAAC,WAAW,EAAE,UAAU6F,OAAO,EAAEqF,UAAU,EAAE;IPzB9D,IO0BQA,GPzBR,OOyBkB,CAAC1C,OAAO,CAAC2C,EPzBlBxE,WOyB+B,EPzBlB,AOyBoB,EPzBlBrH,KAAK,EAAE;MAC3B,EOyBI,GPzBC,COyBG,CAAC8L,EPzBAxE,CAAC,GAAC,AOyBI,CPzBH,AOyBI3G,EPzBF2G,CAAC,AOyBI,CAAC,EPzBFD,aAAa,EAAEC,CAAC,EAAE,EAAE;QAClC,EOyBIyE,EPzBAxE,KOyBO,EAAEqE,CPzBD,GAAG,IAAI,CAAC3F,COyBG,ePzBa,CAACuB,GAAG,EAAE;QAC1CD,EOyBIyE,KAAK,CPzBD,CAAChF,AOyBE,CAAC,QPzBM,CAAC,KAAK,CAAC,CAAClD,UAAU,CAAC,KAAK,CAAC;QAE3C,EOwBIjE,CAAC,CPxBD4H,COwBGlB,OPxBK,AOwBE,CAAC1G,CAAC,CPxBD,IAAI,CAACmG,SAAS,CAACwB,GAAG,EAAE;QACnC,EOwBI1H,CAAC,CPxBD,CAACiG,AOwBEQ,OAAO,CAACzG,CPxBD,AOwBE,CPxBD8G,IAAI,CAACa,QAAQ,CAAC;QAC7BA,EOwBIwE,MPxBI,CAACvE,COwBG,EAAE,OPxBK,CAAC1H,KAAK,CAAC;QAC1BA,AOwBA,CAAC,CAAC,GPxBG,CAACmH,oBAAoB,CAAC,IAAI,CAACpB,SAAS,CAAC;MAC9C,EOwBI,IAAI,CAAC+F,MAAM,CAACnL,GAAG,CAAC;IPvBxB,MOwBYoL,OAAO,EAAE,IAAI,CAACG,UAAU;EPxBnC,QOyBWC,KAAK,EAAE,GAAG;IPzBrB,MO0BWF,QAAQ,EAAE;IP1BrB,IO2BO,CAAC,CAAC,CPxBV,8BAAqB;MACjB,EOyBI,GPzBC,COyBGlF,GPzBCO,CAAC,COyBG,EPzBF,CAAC,AOyBI,EPzBFA,CAAC,COyBK,CAACjB,CPzBH,IAAI,CAACN,AOyBI,CAACA,QPzBI,CAACnC,AOyBI,CAAC8C,KPzBC,EAAEY,AOyBI,CPzBH,AOyBIsE,EPzBF,EAAE,MOyBU,CAAC;QPxBrD,AOyBA,IPzBI,AOyBA7E,CPzBChB,IOyBI,KPzBK,AOyBA,CPzBCuB,AOyBA,CPzBC,AOyBA,CPzBC,CAACpD,AOyBA,KPzBK,CAACyD,SAAS,GAAG,KAAK;MAC7C,IOyBQ,IAAI,CAACtB,MAAM,CAACN,SAAS,CAACU,MAAM,CAACM,KAAK,EAAE,CAAC,CAAC;IPxBlD,IOyBQ;EPzBP,MO2BO,IAAI,CAACI,oBAAoB,CAAC,IAAI,CAACd,MAAM,CAACN,SAAS,CAAC;IP3BvD,EO6BG,CAAC,EAAE,IAAI,CAAC;IP7BX,EO+BG,IAAI,CP7BR,AO6BS7B,KAAK,CAACxD,EAAE,CAAC,MAAM,EAAE,UAAS6F,EP7Bf,KO6BsB,EAAEqF,UAAU,EAAEQ,KAAK,EAAEC,KAAK,EAAE;MP5BlE,EO6BIT,GP7BC,IAAItE,CAAC,EO6BI,CP7BH,AO6BIzH,CP7BH,AO6BI,EP7BFyH,CAAC,AO6BI8E,GP7BD,EO6BM,EP7BF,CAACrG,SAAS,CAACnC,MAAM,EAAE0D,CAAC,EAAE,EAAE;QAC1C,AO6BAsE,IP7BI,CAAC7F,KO6BK,CAACjG,CAAC,EP7BE,CAACwH,AO6BA+E,CP7BC,CAAC,CAACnI,EO6BE,GP7BG,CAACyD,SAAS,GAAG,IAAI;MAC5C,AO6BA,CAAC,CAAC;IP5BN;EAAC,IO8BG;IP9BH,EO+BG,IAAI,CAACzD,KAAK,CAACxD,EAAE,CAAC,gBAAgB,EAAE,UAAS6F,OAAO,EAAEqF,UAAU,EAAE;IP/BjE,IOgCO,GP9BR,CO8BYA,UAAU,CAACU,IAAI,GP9BjBtM,EO8BsB,GP9BjB,EAAE,GO8BuB,IAAI,IAAI,CAACqG,MAAM,CAACN,SAAS,CAACS,QAAQ,CAACoF,UAAU,CAAC,EAAE;MP7BpF,IAAI/L,AO8BI,CP9BH,GAAGG,AO8BIyD,KP9BC,CAACb,CO8BK,GP9BD,AO8BI,CP9BHC,CO8BK,KP9BC,CAACC,KAAK,GAAG,EAAE;MACpC,IAAIhD,AO8BI,CP9BH,GAAGE,AO8BI,CAAC8L,IP9BA,CAAClJ,CO8BK,CAACjC,EP9BF,CAACkC,AO8BI,CAAC,KP9BC,CAACG,MAAM,GAAG,IAAI;YO+B3B+I,OAAO,EAAEH,UAAU;MP7B/B,MO8BYI,KAAK,EAAE,CAAC;MP7BpB,IAAI,EO8BQlM,CAAC,CP9BL,CAACmG,AO8BM2F,UAAU,CAACW,KP9BD,CAAC3I,MAAM,CO8BO,CAAC9D,CP9BL,AO8BM,CP9BL,EAAE,AO8BM2D,OAAO;QP7B/C,IO8BQO,CP9BH,IAAI4D,CAAC,GAAC,CAAC,EAAEA,AO8BM,CP9BL,CO8BOxG,EP9BJ,IAAI,CAAC6E,YO8BU,CAAC1E,GP9BK,CAACqC,KO8BG,CP9BG,EAAEgE,AO8BF,CP9BG,AO8BF,EP9BI,EAAE;UACjD,EO8BI3D,EP9BA,CAACgC,UO8BY,EAAE7E,IP9BE,CAACwG,CAAC,CAAC,CAACC,OAAO,EAAE,EO8BJ,CAACrG,UAAU,GAAG,CAAC;QP7BjD,IO8BQgL,KAAK,EAAE,GAAG;MP7BtB,MO8BYP,QAAQ,EAAE;MP5BtB,IO6BQ,CP7BH,AO6BI,CAAC,GP7BD3E,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACtB,SAAS,CAACpC,MAAM,EAAE0D,CAAC,EAAE,EAAE;QAC1C,EO6BIsE,EP7BA9D,QAAQ,AO6BE,CAACoB,EP7BAlJ,KAAK,AO6BE,CP7BDW,AO6BE8L,GP7BC,CAAC/H,MAAM,CAAC7E,AO6BE,CP7BD,CO6BG,CP7BDC,CAAC,EAAE,UAAU,CAAC;QACjDgI,EO6BI8D,MP7BI,CAACxL,GO6BK,CAAC8I,KP7BG,CAAC,CO6BG,CAACwD,CP7BD,EAAE,CAAC,CAAC,cO6BgB,CAACd,UAAU,CAAC/L,CAAC,GAAGuB,mBAAW,CAACG,SAAS,EAAEqK,UAAU,CAAC9L,CAAC,GAAGsB,mBAAW,CAACI,UAAU,GAAG,CAAC,GAAGiC,OAAO,GAAG,EAAE,CAAC;QP5B1IqE,AO8BA,QP9BQ,CAAC9D,YAAY,GAAGpC,0BAAkB,CAACC,SAAS,GAAG,CAAC;MO+B5D,CAAC,CP9BGiG,CO8BD,IAAI,CAAC,EP9BI,CAAC7D,aAAa,GAAGrC,0BAAkB,CAACE,UAAU,GAAG,CAAC;QAE1D,IAAI,CAACmE,gBAAgB,CAACW,IAAI,CAACkB,QAAQ,CAAC;MO8BxC,EP7BIjI,CAAC,IAAI,CAAC;MACV,AO6BA,IAAI,CAACqE,KAAK,CAACxD,EAAE,CAAC,eAAe,EAAE,UAAS6F,OAAO,EAAEqF,UAAU,EAAE;IP5BjE,IO6BQ,IAAIA,UAAU,CAACU,IAAI,KAAK,QAAQ,IAAI,IAAI,CAACjG,MAAM,CAACN,SAAS,CAACS,QAAQ,CAACoF,UAAU,CAAC,EAAE;UAC5E,IAAI,CAACE,MAAM,CAACnL,GAAG,CAAC;IP5B5B,QO6BgBoL,OAAO,EAAEH,UAAU;EP7BnC,UO8BgB9L,CAAC,EAAE8L,UAAU,CAACW,aAAa,CAACzM,CAAC;IP9B7C,QO+BgBkM,KAAK,EAAEJ,UAAU,CAACW,aAAa,CAACP,KAAK;IP/BrD,OACA,CO+BgBhI,YAAY,EAAE5C,IP/BpB,eO+B+B,CAACG,SAAS;MP9B/C,KAAK,CO+BO0C,GP/BHqD,CAAC,GAAG,IAAI,CAACtB,CO+BO,EAAE5E,MP/BA,CAACwC,MAAM,GAAG,CAAC,EAAE0D,AO+BF,CP/BG,AO+BF9F,GP/BK,CAAC,EAAE8F,CAAC,EAAE,CO+BD,CP/BG;QAChD,IAAIM,AO+BI4E,CP/BH,GAAGzE,CO+BK,EAAE6D,CP/BH,CAAC5D,KAAK,CAACD,EO+BM,CAACwE,CP/BH,CAACtE,MAAM,EAAE,GO+BO,CP/BHX,AO+BIkF,CP/BH,GAAC,CAAC,AO+BM,CP/BL,CAAC;QAAC,IOgClCP,OP/BiC,CAAC,AO+B1B,EAAE,EP/B4B,CAACjG,SAAS,CAAC4B,CAAC,CAAC,EAAE,IAAI,CAAC5B,SAAS,CAACsB,CAAC,CAAC,CAAC;QAA9E,EOgCG,CAAC,CPhCA,AOgCC,CPhCAtB,SAAS,CAACsB,CAAC,CAAC;QAAE,EOiChBsE,EPjCoB,CAAC5F,OOiCX,CAACkD,CPjCmB,CAACtB,CAAC,CAAC,GOiCf,CAACiE,aAAa,EAAE;MPhC1C,EOiCI;IPhCR,EOiCG,CAAC,EAAE,IAAI,CAAC;EPjCV,IOmCG,IAAI,CAAC3H,KAAK,CAACxD,EAAE,CAAC,WAAW,EAAE,UAAS6F,OAAO,EAAEqF,UAAU,EAAEH,QAAQ,EAAE;IPnCtE,IOoCOA,QAAQ,CAACkB,mBAAmB,EAAE;IPpCrC,EOqCG,CAAC,CAAC,GPnCN,mBAAU3M,KAAK,EAAE;MACbkI,AOoCA,IAAI,CAAChE,EPpCE,CAACiE,EOoCE,CPpCC,AOoCAzH,CPpCC,COoCC,CAAC,EPpCE,CAAC8B,QOoCQ,EAAE,IPpCI,CAACoB,KOoCI2C,CPpCE,CAAC,KOoCI,EAAEqF,UAAU,EAAEH,QAAQ,EAAE;MPnCnE,EOoCIA,EPpCA,IAAI,CAACzF,COoCG,CAACZ,OPpCK,CAACxB,MAAM,IAAI,CAAC,AOoCE,EPpCA,AOoCE;MAClC,CAAC,CPpCG,AOoCF;MAEF,EPrCI,EOqCA,CAACM,EPrCI,GOqCC,CPrCGoD,AOqCF5G,CPrCG,COqCD,CAAC,CPrCC,IAAI,CAAC8B,AOqCA,EAAE,UAAC+D,EPrCW,CAAC3C,IOqCL,EPrCW,AOqCTgI,EPrCWtE,CAAC,GAAG,CAAC,EAAEA,CAAC,AOqCT,EPrCW,AOqCTmE,EPrCW,MOqCH,EAAK;QACrD,EPrCI,EOqCA,EPrCIrD,GOqCA,CPrCI,AOqCH/B,GPrCM,GOqCA,CPrCI,AOqCHyE,CPrCItI,cAAc,AOqCH,CPrCI6F,COqCF,IPrCO,AOqCHuD,EPrCK,QOqCK,CAACgB,OAAO,EAAE,EAAE;UPpCvD,AOqCAhB,IPrCI,CAAC5F,KOqCK,CAAC9B,GPrCG,CAAC0C,COqCC,CAAC6C,EPrCE,CAACrB,IAAI,AOqCA,CPrCC,EOqCE,KAAK;QPpCpC,EOqCIwD,UAAU,CAAC1C,OAAO,CAAC2C,aAAa,EAAE;QPpCtC,IAAI,CAAC5E,OAAO,EAAE;QACd,EOqCI,EPrCA,CAACC,SAAS,CAAClH,KAAK,CAAC;MACzB,IOqCQ4L,UAAU,CAAC3H,aAAa,GAAG7C,mBAAW,CAACI,UAAU;IPpC7D,MOqCYoK,UAAU,CAAC5H,YAAY,GAAG5C,mBAAW,CAACG,SAAS;EPrC1D,QOsCWqK,UAAU,CAAC/L,CAAC,GAAG4L,QAAQ,CAAC5L,CAAC;IPtCpC,MOuCW+L,UAAU,CAAC9L,CAAC,GAAG2L,QAAQ,CAAC3L,CAAC,GAAG2L,QAAQ,CAAC3L,CAAC,GAAG,CAAC;IPvCrD,MOyCW,CPvCZ,IOuCgB,CAACuG,MAAM,CAAC7D,SPvCZ,KOuC0B,CAACoE,IAAI,CAACgF,UAAU,CAAC;MPtCnD,IOuCQA,GPvCD,IAAI,CAAChG,EOuCM,CAACiH,GPvCD,SOuCa,CAAC,KAAI,CAAC;IPtCzC;EAAC,QOwCW;IPxCX,MOyCWC,UAAU,CAAC,YAAW;IPzCjC,OAED,COwCgBlB,UAAU,CAAC5E,OPxCjBpB,EOwC0B,CAAC,GPxCrB,EAAE,AOwCwB,CAAC,CAAC9B,UAAU,CAAC,KAAK,CAAC;MPvCzD,IAAI,AOwCI,CPxCH8B,AOwCI,EAAE,GAAG,CPxCH,AOwCI,IPxCAA,MAAM;UO0Cb,KAAI,CAACS,MAAM,CAACP,YAAY,GAAG,KAAI,CAACO,MAAM,CAACyE,eAAe,EAAE,GAAGc,UAAU,CAACgB,OAAO,EAAE;MPxCvF,IOyCQ,KAAI,CAAC/B,UAAU,CAACzH,IAAI,GAAG,KAAI,CAACiD,MAAM,CAACyE,eAAe,EAAE;MPxC5D,IAAI,AOyCIW,IPzCA,CAAC7F,GOyCO,CAACR,EPzCF,GAAG,IAAI,CAACO,SAAS,AOyCI,CAAC,CPzCH,IOyCO,CAAC;QPxCtC,EO0CI,EP1CA,CAACC,EO0CG,CAACmH,GP1CE,GAAG,CO0CE,CAACC,EP1CC,CAACrH,CO0CE,CAACsH,KAAK,CAAC,CP1CA,EO0CG,EAAE,IAAI,CAAC;MPzC1C,EO0CI,CAAC,MAAM;IPzCf,MO0CY,KAAI,CAACC,OAAO,CAAC3G,OAAO,EAAEqF,UAAU,EAAE,KAAK,CAAC;EP1CnD,MO2CO;IP3CP,EO4CG,CAAC,CAAC;IP5CL,EO8CG,IAAI,CP5CR,AO4CS1H,KAAK,CAACxD,EAAE,CAAC,SAAS,EAAE,IAAI,CAACwM,EP5ChB,KO4CuB,EAAE,IAAI,CAAC;IAChD,EP5CI,OAAO,IAAI,CAACpH,YAAY;EO4C3B,EP3CD;EAAC,EO2CA;IP3CA,AO2CA,OAED,iBAAQS,OAAO,EAAEqF,UAAU,EAAEuB,OAAO,EAAE;IP7CrC,EO+CG,IAAI,CP7CR,AO6CSA,OAAO,EAAE,gBP7CFrH,YAAY,EAAE;MAC1B,EO6CI,EP7CA,CAACA,CO6CG,CAACO,MAAM,CAACN,GP7CC,IAAID,EO6CI,CAACc,IAAI,CAACgF,IP7CE,MO6CQ,CAAC;QACtCA,UAAU,CAAC3H,aAAa,GAAG7C,mBAAW,CAACI,UAAU;MP5CrD,EO6CIoK,UAAU,CAAC5H,YAAY,GAAG5C,mBAAW,CAACG,SAAS;MP5CnD,EO6CI,EP7CA,EO6CI,CAAC4F,CP7CD,CAACrB,YAAY,GAAG,GO6CK,CP7CD,AO6CE,CP7CDD,GO6CK,CAACQ,MAAM,CAACN,IP7CE,EAAE,GO6CK,CAAC;MACpD,EP7CI,IAAI,CAACD,YAAY,GAAG,IAAI,CAACD,eAAe;IO8ChD,EP7CI;EO6CH,EP5CD;EAAC,EO4CA;IP5CA,AO4CA,OAGD,qBAAY;IP/CX,EOgDG,KP9CJ,yBAAgB;MACZ,AO8CA,IAAIuH,GP9CG,GO8CG,CP9CC,CAAClH,CO8CC,IAAI+C,KP9CK,cO8CK,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE;IP7CvD,IO6CwDM,MAAM,EAAE,CAAC;EP7ChE,MO6CkEH,MAAM,EAAE;EP7C1E,IO6C+E,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;AP7CvG,EAxK+BnI,IOsN5B,EPtNkC,CAACC,COsN/BmM,OAAO,GPtNmC,AOsNhC,CPtNiCxI,GOsN7BoE,GPtNmC,gBOsNzB,CAAC,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE;APtNA,QOsNCM,MAAM,EAAE,CAAC;QAAEH,MAAM,EAAE;MAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC;;MAE1G;MACA,IAAIkE,QAAQ,GAAG,IAAI5D,kBAAS,CAAC,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE;QAACN,MAAM,EAAE,QAAQ;QAAE3E,MAAM,EAAE;MAAS,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC;;MAEnH;MACA,IAAI8I,MAAM,GAAG,IAAI5D,mBAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE;QAACI,MAAM,EAAE,CAAC;QAAEH,WAAW,EAAE;MAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;MACxG,IAAI4D,QAAQ,GAAG,IAAI7D,mBAAU,CAAC,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE;QAACI,MAAM,EAAE,CAAC;QAAEH,WAAW,EAAE,CAAC;MAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC;;MAE7G;MACA,IAAI6D,MAAM,GAAG,IAAIzD,oBAAW,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE;QAACZ,MAAM,EAAE,QAAQ;QAAEW,MAAM,EAAE;MAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;MACzG,IAAI2D,MAAM,GAAG,IAAI1D,oBAAW,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE;QAACZ,MAAM,EAAE,QAAQ;QAAEW,MAAM,EAAE;MAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;MAEzG,IAAI,CAAC1D,MAAM,CAACL,SAAS,CAACY,IAAI,CAACwG,MAAM,CAAC;MAClC,IAAI,CAAC/G,MAAM,CAACL,SAAS,CAACY,IAAI,CAACyG,OAAO,CAAC;MACnC,IAAI,CAAChH,MAAM,CAACL,SAAS,CAACY,IAAI,CAAC0G,QAAQ,CAAC;MACpC,IAAI,CAACjH,MAAM,CAACL,SAAS,CAACY,IAAI,CAAC2G,MAAM,CAAC;MAClC,IAAI,CAAClH,MAAM,CAACL,SAAS,CAACY,IAAI,CAAC4G,QAAQ,CAAC;MACpC,IAAI,CAACnH,MAAM,CAACL,SAAS,CAACY,IAAI,CAAC6G,MAAM,CAAC;MAClC,IAAI,CAACpH,MAAM,CAACL,SAAS,CAACY,IAAI,CAAC8G,MAAM,CAAC;IACtC;EAAC;IAAA;IAAA,OAGD,8BAAqB3H,SAAS,EAAE;MAC5B;MACA,IAAI4H,cAAc,GAAG,IAAI,CAAC/K,IAAI,CAACC,MAAM,CAACG,MAAM;MAC5C,IAAI4K,aAAa,GAAG,IAAI,CAAChL,IAAI,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC;MAC9C,IAAI+K,MAAM,GAAGzM,mBAAW,CAACO,WAAW,GAAIoG,IAAI,CAACC,KAAK,CAACjC,SAAS,CAACnC,MAAM,GAAG,CAAC,CAAE;MAEzE,KAAK,IAAI0D,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGvB,SAAS,CAACnC,MAAM,EAAE0D,CAAC,EAAE,EAAE;QACrC,IAAIc,IAAI,GAAGrC,SAAS,CAACuB,CAAC,CAAC;QACvB,IAAIwG,KAAK,GAAGF,aAAa,GAAG,CAACtG,CAAC,GAAG,CAACvB,SAAS,CAACnC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAIxC,mBAAW,CAACK,YAAY;QACvF,IAAIC,SAAS,GAAG,CAAC4F,CAAC,GAAG,CAACvB,SAAS,CAACnC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAIxC,mBAAW,CAACM,SAAS;QAExE0G,IAAI,CAACvI,CAAC,GAAGiO,KAAK;QACd1F,IAAI,CAACtI,CAAC,GAAG6N,cAAc,GAAGE,MAAM;QAChCzF,IAAI,CAAC4D,KAAK,GAAGtK,SAAS;QACtB,IAAI4F,CAAC,GAAGvB,SAAS,CAACnC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE;UAC9BiK,MAAM,IAAIzM,mBAAW,CAACO,WAAW;QACrC,CAAC,MAAM;UACHkM,MAAM,IAAIzM,mBAAW,CAACO,WAAW;QACrC;;QAEA;QACAyG,IAAI,CAACmE,aAAa,GAAG;UACjB1M,CAAC,EAAEuI,IAAI,CAACvI,CAAC;UACTC,CAAC,EAAEsI,IAAI,CAACtI,CAAC;UACTkM,KAAK,EAAE5D,IAAI,CAAC4D,KAAK;UACjBQ,KAAK,EAAEpE,IAAI,CAACoE;QAChB,CAAC;;QAED;QACApE,IAAI,CAACY,QAAQ,CAAC,CAAC,CAAC;MACpB;IACJ;;IAGA;EAAA;IAAA;IAAA,OACA,kBAAS3C,MAAM,EAAE;MACb,IAAI,CAACkF,cAAc,CAAC5G,OAAO,GAAG,KAAK;MACnC,IAAI,CAACyG,aAAa,CAACzG,OAAO,GAAG,IAAI;MACjC,IAAI,CAAC0B,MAAM,CAAC0H,gBAAgB,CAAC1H,MAAM,CAAC;IACxC;;IAGA;EAAA;IAAA;IAAA,OACA,mBAAU;MACN,IAAI,CAACkF,cAAc,CAAC5G,OAAO,GAAG,IAAI;MAClC,IAAI,CAACyG,aAAa,CAACzG,OAAO,GAAG,KAAK;MAClC,IAAI,CAAC0B,MAAM,CAAC2H,mBAAmB,CAAC,IAAI,CAAC;;MAErC;MACA,KAAK,IAAI1G,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGvF,aAAK,CAACK,YAAY,CAACwB,MAAM,EAAE0D,CAAC,EAAE,EAAE;QAC9CvF,aAAK,CAACK,YAAY,CAACkF,CAAC,CAAC,CAAC2G,MAAM,CAAC,IAAI,CAAC;MACtC;MACA,IAAI,CAACpE,QAAQ,CAACzG,IAAI,GAAG,IAAI,CAACiD,MAAM,CAACsC,SAAS,EAAE;;MAE5C;MACA,IAAI,CAACtC,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;MAC7B,IAAI,CAACpB,MAAM,CAAC6H,SAAS,CAAC,IAAI,CAAC;IAC/B;;IAEA;EAAA;IAAA;IAAA,OACA,6BAAoB;MAChB,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAIC,eAAe,GAAGtG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAImG,UAAU,GAAGD,UAAU,GAAG,CAAC,CAAC,CAAC,GAAGA,UAAU;MAE5F,IAAIG,mBAAmB,GAAG,CAAC;MAC3B,IAAIC,mBAAmB,GAAG,CAAC;MAE3B,KAAK,IAAIjH,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAG+G,eAAe,EAAE/G,CAAC,EAAE,EAAE;QACpC,IAAIkH,WAAW,GAAGzM,aAAK,CAACI,SAAS,CAAC4F,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGlG,aAAK,CAACI,SAAS,CAACyB,MAAM,CAAC,CAAC;;QAErF;QACA4K,WAAW,CAAC9F,UAAU,EAAE;QACxB8F,WAAW,CAAC3O,CAAC,IAAIyO,mBAAmB;QACpCE,WAAW,CAAChG,SAAS,CAAC1I,CAAC,IAAIyO,mBAAmB;QAE9CD,mBAAmB,IAAI,GAAG;QAC1BC,mBAAmB,IAAI,GAAG;QAC1BC,WAAW,CAACxF,QAAQ,CAAC,CAAC,CAAC;QAEvBjH,aAAK,CAACK,YAAY,CAACwE,IAAI,CAAC4H,WAAW,CAAC;MACxC;IACJ;EAAC;EAAA;AAAA,EAtT4BvN,MAAM,CAACmD,KAAK;AAAA","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","// import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.setInteractive( { useHandCursor: true});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    setFontColour(fontColour) {\r\n        this.setStyle({color: \"#202529\"});\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 130,\r\n    cardHeight: 205,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemy = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3,\r\n    enemyList: [],\r\n    enemyOnScene: []\r\n}\r\n\r\n","import { CST } from \"../CST\";\r\nimport Button from \"../helpers/classes/button\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        this.graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let bg = this.add.image(-20, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n\r\n        let title = this.add.text(gameWidth/2, 5, \"Discard Pile\", {fontSize: \"45px\"});\r\n        title.setOrigin(0.5, 0);\r\n\r\n        let startX = 10;\r\n        let startY = 50;\r\n        let xOffset = gameOptions.cardWidth + 50;\r\n        let yOffSet = gameOptions.cardHeight + 60;\r\n        let xCounter = 0;\r\n        let yCounter = 0;\r\n\r\n        if (this.graveYardArray.length > 0) {\r\n            for (let cards of this.graveYardArray) {\r\n                cards.setVisible(true);\r\n                let discardCard = this.add.existing(cards);\r\n                discardCard.x = startX + (xCounter * xOffset);\r\n                discardCard.y = startY + (yCounter * yOffSet);\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth * 1.3;\r\n                discardCard.displayHeight = gameOptions.cardHeight * 1.3;\r\n\r\n                xCounter++;\r\n                if (xCounter === 5) {\r\n                    xCounter = 0;\r\n                    yCounter++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.input.on(\"pointerdown\", function() {\r\n            this.scene.stop(CST.SCENES.DISCARD_PILE);\r\n        }, this);\r\n    }\r\n\r\n}","import { gameOptions } from \"../../config\";\r\n\r\n// Cards that appear in the player's hand\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(scene, x, y, sprite);\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.effect = effect;\r\n        this.cardType = cardType;\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth;\r\n        this.displayHeight = gameOptions.cardHeight;\r\n    }\r\n    \r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCost() {\r\n        return this.cost;\r\n    }\r\n\r\n    getEffect() {\r\n        return this.effect;\r\n    }\r\n\r\n    getType() {\r\n        return this.cardType;\r\n    }\r\n\r\n    setCost(cost) {\r\n        this.cost = cost;\r\n    }\r\n}","\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(width, height);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics();;\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nexport default class Player extends Phaser.GameObjects.Sprite {\r\n\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.maxHealth = 50;\r\n        this.health = this.maxHealth;\r\n        this.maxActionPoints = 6;\r\n        this.actionPoints = this.maxActionPoints;\r\n        this.handArray = [];\r\n        this.deckArray = [];\r\n        this.deckTrackerArray = [];\r\n        this.graveYardArray = [];\r\n        this.spriteType = \"player\";\r\n        this.keepCards = [];\r\n        this.keepCardsLimit = 2;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    selectCardInHand(player) {\r\n        // disable drag first on all cards\r\n        this.disableDragOnCards();\r\n        \r\n        for (let cards of this.handArray) {\r\n            cards.on(\"pointerdown\", function(pointer) {\r\n                // this is referring to the clicked object rather than player now\r\n                if (player.keepCards.includes(this)) {\r\n                        // removes the card from list \r\n                    player.keepCards.splice(player.keepCards.indexOf(this), 1);\r\n                    this.clearTint();\r\n                } else {\r\n                    if (player.keepCards.length < player.keepCardsLimit) {\r\n                        player.keepCards.push(this);\r\n                        // add a visual effect when clicked\r\n                        this.setTint(0x999999);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    moveCardsBackInDeck(scene) {\r\n        // get indexes of cards not in this.keepCards List\r\n        let indexList = [];\r\n        for (let cards of this.handArray) {\r\n            if (!this.keepCards.includes(cards)) {\r\n                let index = this.handArray.indexOf(cards);\r\n                indexList.push(index);\r\n            }\r\n        }\r\n\r\n        // remove the indexes in reverse order not to mess up the loop\r\n        for (let index=indexList.length-1; index >= 0; index--) {\r\n            this.deckArray.push(this.handArray[indexList[index]]);\r\n            this.handArray[indexList[index]].setActive(false).setVisible(false);\r\n            this.handArray.splice(indexList[index], 1);\r\n        }\r\n\r\n        // remove tint of cards remaining in hand\r\n        for (let cards of this.handArray) {\r\n            cards.clearTint();\r\n        }\r\n\r\n        // set up the deck sprites and deckArray and organise the cards on screen\r\n        this.shuffle();\r\n        this.deckSetUp(scene);\r\n        scene.arrangeCardsInCenter(this.handArray);\r\n        this.enableDragOnCards();\r\n\r\n    }\r\n    \r\n    // draw an amount of cards\r\n    drawCard(amountOfCards, scene) {\r\n        for (let i=0; i < amountOfCards; i++) {\r\n            let lastCard = this.deckTrackerArray.pop();\r\n            lastCard.setActive(false).setVisible(false);\r\n\r\n            let drawCard = this.deckArray.pop();\r\n            this.handArray.push(drawCard);\r\n            drawCard.cardInHand(scene);\r\n            scene.arrangeCardsInCenter(this.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    disableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = false;\r\n        }\r\n    }\r\n\r\n    enableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = true;\r\n        }\r\n    }\r\n    \r\n    deckSetUp(scene) {\r\n        let x = scene.game.config.width / 25;\r\n        let y = scene.game.config.height / 1.24;\r\n\r\n        // need to remove all sprites currently active\r\n        if (this.deckTrackerArray.length > 0) {\r\n            for (let j=0; j < this.deckTrackerArray.length; j++) {\r\n                this.deckTrackerArray[j].destroy();\r\n            }\r\n        }\r\n\r\n        for (let i=0; i < this.deckArray.length; i++) {\r\n            let cardBack = scene.add.sprite(x, y, 'cardBack');\r\n            cardBack.setOrigin(0.5, 1);\r\n            cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n            cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n            \r\n            this.deckTrackerArray.push(cardBack);\r\n            x += 3;\r\n        }\r\n    }\r\n    \r\n    // implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\n    shuffle() {\r\n        for (let i = this.deckArray.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i+1));\r\n            [this.deckArray[i], this.deckArray[j]] = [this.deckArray[j], this.deckArray[i]]\r\n        }\r\n    }\r\n\r\n    resetDeck(scene) {\r\n        console.log(this.graveYardArray.length);\r\n        if (this.deckArray.length <= 0) {\r\n            // push all the cards in graveYard array back to the deck\r\n            for (let i=this.graveYardArray.length; i > 0; i--) {\r\n                let card = this.graveYardArray.shift();\r\n                this.deckArray.push(card);\r\n            }\r\n            this.shuffle();\r\n            this.deckSetUp(scene);\r\n        }\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health += health;\r\n\r\n        // setting it back to max health if going over\r\n        if (this.health > this.maxHealth) {\r\n            this.health = this.maxHealth;\r\n        }\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints += actionPoints;\r\n\r\n        // setting it back to max AP if going over\r\n        if (this.actionPoints > this.maxActionPoints) {\r\n            this.actionPoints = this.maxActionPoints\r\n        }\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n}","export default class Enemy extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n        this.spriteType = \"enemy\";\r\n        this.setInteractive();\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    action(scene) {\r\n        scene.player.health = scene.player.getHealth() - 5;\r\n    }\r\n\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n}","export class Tooltip extends Phaser.GameObjects.Text {\r\n    constructor(scene, x, y, label) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 20,\r\n            y: 20\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\r\n        scene.add.existing(this);\r\n        this.visible = false;\r\n        this.setDepth(2);\r\n    }\r\n\r\n    showTooltip() {\r\n        this.visible = true;\r\n    }\r\n\r\n    removeTooltip() {\r\n        this.visible = false;\r\n    }\r\n    \r\n    setLabelCoordinates(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class DamageCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (this.effect.target == \"single\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\r\n                    this.setHealth(this.getHealth() - card.effect.damage);\r\n                    this.heartText.setText(this.getHealth());\r\n\r\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\r\n                        enemy.enemyOnScene[j].input.enabled = false;\r\n                    }\r\n                })\r\n            }\r\n        } else if (this.effect.target == \"all\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\r\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\r\n            }\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        return \"Damage: Inflicted damage is on the enemy's health.\";\r\n    }\r\n    \r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ComboCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        console.log(this);   \r\n    }\r\n\r\n    getLabel() {\r\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\r\n    }\r\n    \r\n   \r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ReloadCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // nned to account for next turn side effects\r\n    // such as losing action points next turn\r\n    activateCard(scene) {\r\n        if (this.effect.sideEffects !== null) {\r\n            // removing health if its overloading card\r\n            scene.player.setHealth(this.effect.sideEffects);\r\n            scene.heartext.setText(scene.player.health);\r\n            // add function here to kill the player if health goes to 0\r\n        }\r\n\r\n        scene.player.setActionPoints(this.effect.amount);\r\n    }\r\n\r\n    getLabel() {\r\n        return \"AP: \\nAction Points are used when activating a card.\"\r\n    }\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class HealingCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        if (this.effect.target == \"health\") {\r\n            scene.player.setHealth(this.effect.amount);\r\n            scene.heartext.setText(scene.player.health);\r\n        }\r\n        // include bottom when armour is introduced\r\n        // } else (this.effect.target == \"armour\") {\r\n        //     scene.player.setArmour(this.effect.amount);\r\n        //     scene.armourText.setText(scene.player.armour);\r\n        // }\r\n    }\r\n\r\n    getLabel() {\r\n        if (this.effect.target == \"armour\") {\r\n            return \"Armour: \\nRemoved before health when receiving damage.\";\r\n        } else if (this.effect.target == \"health\") {\r\n            return \"Health: \\nIf this reaches zero, you die.\"\r\n        }\r\n    }    \r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/button.js';\r\nimport { gameOptions, enemy} from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/zone.js\";\r\nimport Player from \"../helpers/classes/player.js\";\r\nimport Enemy from \"../helpers/classes/enemy.js\";\r\nimport DamageCard from \"../helpers/classes/cards/damageCard.js\";\r\nimport ComboCard from \"../helpers/classes/cards/comboCard.js\";\r\nimport ReloadCard from \"../helpers/classes/cards/reloadCard.js\";\r\nimport HealingCard from \"../helpers/classes/cards/healingCard.js\";\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        // data returns a list of preloaded cards\r\n        let cards = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\");\r\n        this.load.image(\"player\", \"./assets/sprites/player.png\")\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemy.spriteWidth,\r\n            frameHeight: enemy.spriteHeight\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        this.player = new Player(this, 0, 0, \"player\");\r\n        this.player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        this.player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        this.heartext = this.add.text(0,0, this.player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        this.heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, this.heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        this.actiontext = this.add.text(0,0, this.player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        this.actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, this.actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        // launch the discard pile scene in parallel\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.launch(CST.SCENES.DISCARD_PILE, this.player.graveYardArray);\r\n        }, this);\r\n        \r\n        // loads all the different types of cards\r\n        this.loadCards();\r\n        \r\n        this.endTurnButton = new Button(gameWidth, gameHeight/2, \"End Turn\", this, this.endTurn.bind(this, this.player, this.endTurnButton), '#202529');\r\n        this.keepCardButton = new Button(gameWidth, gameHeight/2, \"Keep Cards\", this, this.keepCard.bind(this, this.player, this.keepCardButton), '#202529');\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 500, 250, 665, 500);\r\n\r\n        // shuffles the deck and sets up the visual for the deck cards\r\n        this.player.shuffle();\r\n        this.player.deckSetUp(this);\r\n        this.player.drawCard(gameOptions.startCards, this);\r\n\r\n        // spawning enemies according to spritesheet randomly\r\n        for (let i=0; i < enemy.numberOfSprites; i++) {\r\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemy.enemyList.push(enemySprite);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n\r\n        // card event listeners for pointer interactions\r\n        this.input.on('dragstart', function (pointer, gameObject) {\r\n            gameObject.tooltip.removeTooltip();\r\n            this.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            this.tweens.add({\r\n                targets: this.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = this.player.handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                this.player.handArray.splice(index, 1);\r\n            }\r\n\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n\r\n        }, this);\r\n\r\n        this.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        this.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                let yOffSet = 50;\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    y: gameObject.startPosition.y - yOffSet,\r\n                    displayWidth: gameOptions.cardWidth * 2,\r\n                    displayHeight: gameOptions.cardHeight * 2,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.showTooltip();\r\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\r\n\r\n            }\r\n        }, this);\r\n\r\n        // hover out listener\r\n        this.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    y: gameObject.startPosition.y,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.removeTooltip();\r\n            }\r\n       }, this);\r\n\r\n        this.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        this.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        this.input.on('drop', (pointer, gameObject, dropZone) => {\r\n            if (this.player.getActionPoints() >= gameObject.getCost()) {\r\n                gameObject.input.enabled = false;\r\n                gameObject.tooltip.removeTooltip();\r\n        \r\n                // setting card in the middle \r\n                gameObject.displayHeight = gameOptions.cardHeight;\r\n                gameObject.displayWidth = gameOptions.cardWidth;\r\n                gameObject.x = dropZone.x;\r\n                gameObject.y = dropZone.y + dropZone.y / 3;\r\n                \r\n                this.player.graveYardArray.push(gameObject);\r\n                gameObject.activateCard(this);\r\n\r\n                // remove the card from the scene after 500ms\r\n                setTimeout(function() { \r\n                    gameObject.setActive(false).setVisible(false); \r\n                }, 500);\r\n        \r\n                this.player.actionPoints = this.player.getActionPoints() - gameObject.getCost();\r\n                this.actiontext.text = this.player.getActionPoints();\r\n                dropZone.renderNormalOutline(this);\r\n        \r\n                this.cameras.main.shake(100, 0.02);\r\n            } else {\r\n                this.dragend(pointer, gameObject, false);\r\n            }\r\n        });\r\n\r\n        this.input.on(\"dragend\", this.dragend, this);\r\n    }\r\n\r\n    dragend(pointer, gameObject, dropped) {\r\n        \r\n        if (!dropped) {\r\n            this.player.handArray.push(gameObject);\r\n            gameObject.displayHeight = gameOptions.cardHeight;\r\n            gameObject.displayWidth = gameOptions.cardWidth;\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    loadCards() {\r\n        // damage cards\r\n        let cannon = new DamageCard(\"cannon\", 1, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\r\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\r\n\r\n        // combo cards\r\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\r\n        \r\n        // reload cards\r\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\r\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -15}, this, 0, 0, \"overload\");\r\n\r\n        // healing cards\r\n        let medkit = new HealingCard(\"medkit\", 0, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\r\n        let kevlar = new HealingCard(\"kevlar\", 1, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\r\n\r\n        this.player.deckArray.push(cannon);\r\n        this.player.deckArray.push(grenade);\r\n        this.player.deckArray.push(headshot)\r\n        this.player.deckArray.push(reload);\r\n        this.player.deckArray.push(overload);\r\n        this.player.deckArray.push(medkit);\r\n        this.player.deckArray.push(kevlar);\r\n    }\r\n    \r\n   \r\n    arrangeCardsInCenter(handArray) {\r\n        // arranges for the cards to be organised around the bottom middle of the screen\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            // cards remember their original coordinates for events that make the cards leave and renter the hand\r\n            card.startPosition = {\r\n                x: card.x,\r\n                y: card.y,\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(2);\r\n        }\r\n    }\r\n\r\n\r\n    // start keep cards and make keep cards button appear\r\n    keepCard(player) {\r\n        this.keepCardButton.visible = false;\r\n        this.endTurnButton.visible = true;\r\n        this.player.selectCardInHand(player);\r\n    }\r\n    \r\n    \r\n    // ends the player's turn\r\n    endTurn() {\r\n        this.keepCardButton.visible = true;\r\n        this.endTurnButton.visible = false;\r\n        this.player.moveCardsBackInDeck(this);\r\n        \r\n        // simulate enemies attacking\r\n        for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n            enemy.enemyOnScene[i].action(this);\r\n        }\r\n        this.heartext.text = this.player.getHealth();\r\n        \r\n        // automatic drawing goes here and checking if needing to reshuffle the deck\r\n        this.player.drawCard(1, this);\r\n        this.player.resetDeck(this);\r\n    }\r\n    \r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n            randomEnemy.setDepth(1);\r\n\r\n            enemy.enemyOnScene.push(randomEnemy);\r\n        }\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport HandCard from \"../helpers/classes/cards/handCard\";\r\nimport { BattleScene } from \"./battleScene\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/Overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\r\n    }\r\n\r\n    create() {\r\n        this.scene.start(CST.SCENES.BATTLE);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport { LoadScene } from \"./scenes/loadScene\";\r\nimport {BattleScene} from \"/src/scenes/battleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 1000,\r\n    height: 800,\r\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\r\n    scene: [\r\n        LoadScene,\r\n        BattleScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}