{"version":3,"sources":["src/CST.js","src/helpers/font.js","src/helpers/classes/Button.js","src/helpers/config.js","src/helpers/classes/cards/HandCard.js","src/helpers/classes/Deck.js","src/helpers/classes/Zone.js","src/helpers/classes/Characters.js","src/helpers/classes/Player.js","src/helpers/classes/Enemy.js","src/helpers/classes/InteractHandler.js","src/scenes/BattleScene.js","src/index.js"],"names":["CST","SCENES","BATTLE","loadFont","name","url","newFont","FontFace","load","then","loaded","document","fonts","add","catch","error","Button","x","y","label","scene","callback","bgColour","padding","setOrigin","setPadding","setStyle","backgroundColor","on","existing","setInteractive","useHandCursor","newX","newY","Phaser","GameObjects","Text","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemySprite","spriteWidth","spriteHeight","numberOfSprites","HandCard","sprite","frame","cardInHand","visible","input","setDraggable","displayWidth","displayHeight","Sprite","handArray","deckArray","deckTrackerArray","graveYardArray","deckSetUp","array","arrayTracker","game","config","width","height","i","length","cardBack","push","shuffle","j","Math","floor","random","Zone","setRectangleDropZone","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Character","health","Player","actionPoints","Enemy","setScale","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","min","max","InteractHandler","pointer","gameObject","tweens","targets","angle","duration","background","alpha","index","indexOf","splice","arrangeCardsInCenter","dragX","dragY","type","includes","depth","startPosition","dropZone","renderActiveOutline","enabled","setTimeout","destroy","cameras","main","shake","dropped","enemyArray","BattleScene","key","image","spritesheet","frameWidth","frameHeight","gameWidth","gameHeight","interactiveHandler","hud_bg","tileSprite","card_bg","bg","setPosition","player","heart","heartext","getHealth","container","chamber","circle","actiontext","getActionPoints","actions","card","card1","endTurnButton","endTurn","bind","changeCursor","enemy","spawnEnemyOnScene","bottomOfScreen","screenCenterX","yDelta","cardX","setDepth","lastCard","pop","drawCard","minEnemies","maxEnemies","numberOfEnemies","console","log","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","Scene","AUTO","Game"],"mappings":";;;;;;AAAO,AEAP,AOAA,ACAA,AFAA,AFAA,AFAA,ADAO,AFAA,AWCP,ADDA,IXAaA,AGAAqC,GHAG,ECAAlC,CDAG,KGAK,EFAA,CEAG,AFAFC,IAAI,EAAEC,GAAG,EAAE;ACAF,AOAG,ACCrC,AFDqC,AFCrC,AFD2C,AQA3C,ADCA,EXAIJ,AGAAqC,AFAA,IEAI,AFAAhC,EDAE,AGAA,CAAC,CHAC,GCAG,GAAG,IAAIC,QAAQ,CAACH,IAAI,EAAE,aAAa,CAAC;ACDjB,AOAG,ACCG,AFDH,AFCG,AFDG,AOE3C,ERAImC,AFAAjC,EDAIJ,KCAG,CDAG,ACAFM,EDAI,AGAF,EAAE,AFAA,CEAC,CFAC,CAACC,IAAI,CAAC,UAAUC,MAAM,EAAE;ACFR,AGAlC,AIAqC,ACCG,AFDH,AFCG,AFDG,AQG3C,ADAA,EXAI,AGAA8B,EFAI7B,OEAK,CFAG,CEAD,AFAEC,GEAC,EFAI,CAACC,GAAG,CAACH,MAAM,CAAC;ADClC,AEJkC,AGElC,AIFqC,ACCG,AFDH,AFCG,AFDG,AOI3C,CXAC,CGAG+B,AFAA,CAAC,CIFDqB,AJEE,CAAChD,KAAK,CAAC,CEAC,CEFD,CFEG,EEFA,CFEG,CEFD,GJEKC,KAAK,EAAE;ADA7B,AEJiC,AGEf,AIFkB,ACCG,AFDH,AFCG,AFDG,AQKpC,ADAP,ERAI2B,EFAI,AWAG4B,MAAM,CXAFvD,EWAK,CTAJ,EAAE,AFAE,GEAC;ADLa,AGGlC,AIHqC,ACCG,AFDH,AFCG,AFDG,AOM3C,ERAI4B,AFAA,AWAAgF,CXAC,CIHD5D,AJGE,EWAE,EAAE7B,GTAG,EEHA,AFGE,CAAC,ASAA,CAACwJ,CPHD,EAAE,COGG;AVNa,AGGf,AIHkB,ACCG,AFDH,AFCG,AFDG,AHO3C,AUAA,ERAI9I,ASAA2B,KAAK,EAAE,GAAG,CTAC,EAAE;ADPiB,AGIlC,AIJqC,ACCG,AFDH,AFCG,AFDG,ADQ3C,AQAA,CRAC,CSAGC,EPJAR,AKDiB4C,IEKX,EAAE,GAAG,MFLqB,CLChB,GAAG,EAAE,uBKArB,yBAAYxF,KAAK,EAAE;ARJW,AGIR,AIJW,ADAA,AFCG,AFDG,ADQ1C,AQAmE,EDJ7C,AEKnBA,KAAK,EAAE,CACHqH,wBAAW;AVVe,AGKlC,AILqC,ADAA,AFCG,AFDG,ADUpC,ASEP,ADJoE,CCInE,CFNOrH,ELDJ6C,AFKSpB,GOJA,CAACY,KAAK,CAAC7B,EAAE,CAAC,CLDL,GAAG,CFKU,CELR,EFKW,GOJA,EAAE,UAAUiF,OAAO,EAAEC,UAAU,EAAE;ARNjC,AGKV,AILa,ADAA,AFCG,AFDG,AQYzC,ADJkE,ERGhEhE,EOJQ1B,KAAK,CAAC2F,CPIL,EAAE,GOJS,APIN,COJOlG,GAAG,CAAC;ARPK,AGOlC,AIPqC,ADAA,AFCG,AFDG,AQc3C,ADNoE,ERIhEkC,ESEAsB,EFNY2C,EEMR,CPPC9C,EOOE,CTFG,COJS,CPIP,COJS4C,AEMV5E,GPPG,CAACd,EOOE,CAACuK,EPPE,CKCW,CLDTxH,AOOA,CAACG,IPPI,EAAEF,AOOA,CAAC,WPPW,EAAE;AHPb,AOAG,ADAA,AFCG,AFDG,ADa3C,AQLoE,CRKnE,CELG,EERiByB,EFQb5E,AKCQgG,CLDP,GAAG7F,CKCS,EHTS,AGSP,CAAC,CLDP,CAACiD,IAAI,CAACC,MAAM,CAACC,KAAK,GAAG,EAAE;AHPxC,AODqC,ADAA,AFCG,AFDG,ADa1C,AQLmE,EJRtC,AFS1B,EDPiBnB,ECOblC,AKCQD,CLDP,AKCQ,EAAE4F,CLDPzF,EDPiB,GCOZ,CAACiD,AKCQ,CAACpD,CAAC,ELDN,CAACqD,MAAM,CAACE,MAAM,GAAG,IAAI;AHR3C,AODqC,ADAA,AFCG,AHcjC,AQP6D,EJRtC,AFU1B,ADRyB,EFCRxD,AODAiF,ADAAF,AFCAb,AHYRlC,EOJG9B,CLDP,AKCQ,CJRQ,CGDC,ACSP2F,CRRQ,AMDA,CHQdpC,CAAC,GAAC,AFKS,CELR,AKCU,CAACvD,CLDTuD,AKCU,APID,CELR,GAAGN,KAAK,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;AMF2B,ETLzC,AKFvB,AECsB,ADAC,AFCF,AFDI,ADczBxB,EELI,EKCQiE,ELDJvC,KFKG,COJS,CPIP,CELG,AKCM,GLDHvD,AFKF,EIfLA,GFUY,CAACP,CEVR,EAAEI,AFUS,CEVR,AFUSoC,EEVPnC,CAAC,EAAEmC,CFUU,CAACpC,CAAC,EACjCC,CEX2B,AFW1B,EEX4BoC,AFW1B,KEX+B,EAAE,GFWvB,CAAC;AMJ8C,ETLzC,AODD,ADAC,AFCF,AFArB,ADcAJ,EIhBwC,AFYpCyB,AKAI,CAAC,CAAC,MLAE,CAACnD,CFID,EAAE,GAAG,CCdLJ,ECUU,CAAC,EDVN,CCUS,CDVPH,CCUS,ADVR,CCUS,CAAC,ADVRC,CAAC,EAAEmC,MAAM,EAAEC,KAAK,EAAE;AOKwB,ETHhE,AOFA,ADCA,AFAA,AHcAH,EIjBwC,AFapCwB,AKAIvD,ANXgC,KMW3B,CAAC2F,ELAF,CAACpD,GKAO,AJVRvC,CGDAA,ACWSP,APIN,CDbHI,AMDAG,CNCC,ACaI,COJO,CRTTF,AQSU,AJVR,CJCD,AOFC,CDCA,AFAED,CJCDE,AOFCF,AHCC,CDUK,AIXL,ADCDA,CAAC,AFAEC,CGDAA,AHCC,CDUK2B,AIXL,ADCD3B,CNCC,AMDA,AFAEqD,CGDAlB,CPEAjC,AMDAiC,GFAK,EJCA,AOFC,AHCCmB,CEAD,CNCCnD,AOFCiC,CDCAhB,GFAK,CGDA,ADCD,CFAG,CGDA,ADCD,CNCC,EAAEhB,MGSI,CAACwB,CHTG,EAAE,MGSI,GAAG,CAAC;AFKhE,AQXoE,CRWnE,GDduD,AKHhD,AFaA6B,AIZoC,ADCD,AFAC,AFDA,EMY5BqC,MLAA,CAACpD,AKAM,EAAExC,KAAK,CAAC+F,KLAD,GAAGtE,CEbnBzB,CGa2B,IHbtB,EAAEH,CAAC,EAAEC,CAAC,EAAEmC,MAAM,EAAEC,IFagB,CEbX,AFaYP,UAAU,GAAG,CAAC;AFIjE,AQXmE,ITHZ,AKFhD,AFcAqB,AIdoC,ADCD,AFAC,AFApC,EMYQgD,IHbHtB,CGaQ,EAAE,GHbJ,AFcC,AKDM,CLCLlB,EEdC,EAAE,AFcC,CAACD,QAAQ,ADbpBvD,CCaqB,IDbhB,EAAEH,CAAC,EAAEC,CAAC,EAAEmC,MAAM,EAAEC,KAAK;AOI4B,ITF7D,AKHkB,AFejBrC,AIdA,ADCA,AFAA,AFAAG,CCaC,CKDO8F,GLCH,ADbA,CCaC,ADbArG,GAAG,CMYO,ANZNgB,EMYQ,MNZA,QFCbT,AOFCA,ADCAA,CFAAA,IJCI,AOFC,ADCA,CFAA,CJCCH,AOFCA,ADCAA,CNCA,AOFC,ADCA,AFADA,CAAC,CJCCC,AOFCA,ADCAA,CNCA,AOFC,ADCA,AFADA,CAAC,CJCCC,AOFCkC,ADCAA,CFAAkB,IJCI,COFE,ADCA,AFAD,EGDGjB,AHCDkB,EFAF,GKDQ,CHCA,GAAEW,oBAAoB,CAAClE,CAAC,EAAEC,CAAC,CAAC;AKGA,EJJhE,AFeA,EHZI,AOFA,ACaI,AFZJ,AFAA,AFAA,CMYK,CAAC,IRXDK,AOFA2E,ADCAF,AFAAxE,AFAA+B,OFCO,COFC,CAAC,AHCA,CJCC,AOFA,AHCA,AFAA,CKDC,AHCA,AFAAnC,CIAC,CFAC,CAAC,CEAC,AFAA,CEAC,AJAA,CAAC;ACc9B,AMVA,EJNK,EEEG,ACcI,AFbJ,AFAAA,AFDuB,AOI3BoH,ETFQvH,CAAC,CQYGoG,CRZD,AIDF,CJCG,AOFHvB,ADCAxD,AFACzB,GIaO,AJbJ,CEAA,AFACgB,AKGJ,EFJK,ACcKiC,CFbJxB,AGGH,EFJK,AEIH,EHHK,CFAE,GGDC6D,MCcM,CAACmB,OAAO,CDdC,ACcAR,CDdC,EAAE,EAAE,EAAE,CAAC,ECcE,CAAC,EJbrB;ACH3B,AIMe,EJVmB5E,AHOnC,EKCI,ACaI,AFbJd,AFAA,AKIKqH,ETHDvH,CAAC,CKTgC,AGqB7BmG,CRZD,AKT+BlF,ACQjC,CCAAiE,ADACvF,AFADuE,GIaQ,AFbJ,CAACvD,CGIM,GDSE,CDbJ,ACaK,CHrB8B,AGqB7B,AJbL,CCRmCgC,CEQjCzC,ACaK,AFbJ,CFAA,ICRsC,AEQlC,CAACP,GAAG,AHAA,CGACwF,AHAA,CAAC,GGAG,CAACjF,KAAK,CAACiD,IAAI,CAACC,KDAnB,CCAyB,CAACC,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAKuB,MAAM,EAAE;AFRtB,AFsBhE,EDfK,AOKmB,ETFhB,AMFyB,AFCzB,CJCC,COF8EQ,ACcvExC,IJbHuB,CGD+E,EAAE,KAAK,EHC5E,CIaE,CAACkC,CJbA,KIaM,CAACF,EJbC,CAAC,CAAC,CIaE,EAAE,CAAC,CAAC;ALC1C,EGdI,AGGoB,ETDhB,AQYI,ANhBP,EKCgGd,GJe5F1B,CHZIrD,IOHgG,EJe7F,AIf+F,CJe9F2C,EHZK,CAAC,CAAC,CGYF,CHZI,CGYF,EHZK,CAAC;EGa1B,AGfC,AGID,ETDI,AOJ6G,ACiBzG/C,AJdJ,AFJH,CKCiH,CAAC,CJgB9G,EKCQ,CRbJK,AQaK+F,AJdLlC,CDaAb,ADfT,CCeU,GAAGN,KHZM,AGYD,CHZE,AGYDO,ACbC,GAAGtD,CKEV,ETDYG,AGYA,ECbG,CDaA,AKCM,AJdLV,CDaA,AKCMiD,ANhBxB1C,ECeoBqD,ACbC,CJCA,AGYA,ACbCc,CJCAtE,CAAC,AEHlB,CCemB,CHZC,AGYA,ADflB,ECeoBwD,CAAC,CCbE,CDaA,CHZAlD,AIDE,CDaA,CKCC,CAAC,IRbG,CAACL,CAAC,CAAC;EQe/C,CAAC,CRdD,AGYA,AIhBA,ADAH,AFGG,AKCS,CDcNE,CNjBH,ECeI0D,CAAC,CHZApD,AOJA0E,ACkBG,AJfHZ,AFFD,CMiBK,ANjBJhC,CCeGuB,IAAI,CAACC,CHZA,AEHD,CFGE,AOJA,CAACxD,CLCA,CCeG,ADfF,CCeGuD,GDfC,CCeG,ADfFvB,CCeGyB,CIhBA,AHGA,CGHC,AHGA7D,CGHC,EAAE,CJgBE,AIhBD,ALCD,CKDE,AHGA,CDaE,ACbD,IDaKqD,CAAC,GAAC,CAAC,CAAC,CAAC;EKIzCrD,ELJ0C,AId1CA,ADFH,AFGmC,AKCvB,ETAOO,AEFhB,CMkBK,CAAC8B,CDlBD,CAAC5C,ALAF,CIAR,AJASiB,EKAI,ACkBE,CDlBDD,ACkBED,CLHW,CAACuC,AKGV,CAAC,IRhBgB,AGaF,CAACW,AIfZ,CPEexD,AGaF,AKGV,CLHW,CKGT,ANlBJ,CCee6C,CDfb,EOGf,ENYiC,CAACM,AGfhC,CHeiC,CAAC,CAAC,AKGXoC,OAAO,EAAEC,SDlBjB,CCkB2B,EAAEW,KAAK,EAAEC,KAAK,EAAE;EJfvE,EJD6C,AGaxCvD,AIbD,ACiBI2C,CRjBsC,CAAC,AMD3C,AJAA1F,AOGIsH,GNWE,AMXC,CNWAjE,AIbF+B,CJaG,ADdH,AOGIxG,CNWA,ADdHyD,CIAC,CEkBO,CAACxC,CAAC,CFlBL,AJAA,CIAC6E,AJAApC,CMkBO+D,ACfP,CAACxH,IDeW,AFlBN,EGGC,CAACC,EFFI,CAACkB,ALDD,CAAC,IKCK,ALDD,CKCE,ALDD;EEEjC,EJAG,AGYW+C,AIZX,ACiBI2C,AFlBR,AGGI,CAAC,CPHD,GCagB,CHZXlF,AGYYkD,AIZZ2B,ALDD,CCac,ADbbjF,CFCE,AGYY,CHZX,CQiBM,CAACN,CAAC,GAAGwG,CDjBJ,ALDD,CAAC,CKCE,ECiBO,ANlBN,EFCG,AEDD,CAAC,CFCE,AEDD;ECc1B,AKKI,AFnBH,AGID,CDeK,CAAC,AJlBL,EJA0B,OAAMrG,QAAQ,EAAE;AGc/C,EMXK,ETH0C,AOEvC,ADHH,AFCA,EJA2C,AECxC,KECJ,+BAAsB;EIkBlB,ERnBAD,AOCA,ADHH,AGIA,ELAG,AFDA,GFDK,CAACP,AIEF,AFDA,CIDR,AFESyE,AFDA3B,EFDI,CAAC9B,QAAQ,AIEF,CAAC4D,AFDA,GAAGpD,EECE,EEFhByD,AFEkB,MEFZ,EAAE,OJCiB,CAACtD,OFDR,EECiB,GAAG,CAAC;EKCjD,ACkBIpB,ERpByB,ASE5B,EHDG,AFEA,AFDA,CMkBK,CAACqC,EFnBF,AFEA,AFDA,CIDCqC,AFEAR,AFDA1B,AOET,EDgBe,CAAChC,EAAE,CAAC,AFnBJ,GAAGkE,EFEE,CAACJ,CFDC,EIDE,CJCCrD,GOEf,ELDoB,CIiBK,AJjBJ,CAAC,CIiBK,CJjBH,IAAI,CAAC+C,IIiBOyB,CNlBV,CAACpE,IECY,CIiBI,AJjBH,EIiBKqE,GNlBR,GAAG,CAAC,GMkBc,EAAE;ERnBnE,EQoBQ,AFnBR,AJCA,EECI,AKCA,EDgBQA,EJjBJ,AKCA,CLDCxB,AKCA9E,IAAI,CAACmI,EDgBQ,CAAChB,EChBJ,CLDC,AKCA,CDgBO,AJjBNhC,IKCI,CDgBO,CChBL,ILDI,CAAC,EIiBQ,EJjBJ,CAAC1E,CIiBO6C,AJjBN,GAAG,IAAI,CAACL,EKCE,CAAC,ELDE,CAACmC,CIiBC,CAACgC,KJjBK,CAACrD,EIiBE,CAACuC,EJjBE,GAAG,CAAC,EAAE,EIiBE,CAAC,CJjBC,CIiBC,AJjBA5F,CAAC,GAAG,IAAI,CAACuC,KAAK,CAACmC,OAAO,CAACpB,MAAM,GAAG,CAAC,EAAE,IAAI,CAACf,KAAK,CAACmC,OAAO,CAACrB,KAAK,EAAE,IAAI,CAACd,KAAK,CAACmC,OAAO,CAACpB,MAAM,CAAC;EJHlK,AOGD,ADFC,AJCA,EEED,EIiBYpD,AChBR,IAAI,CDgBS,AChBRZ,CDgBSuG,GChBL,CAAC4B,EDgBU,CAAC9H,EChBN,CDgBS,AChBR,CDgBS,WChBG,EAAE,yBAAyB,CAAC;EFD5D,AHAC,AFFA,EFFA,AMCA,EGKG,EDgBYmG,EChBR,CAACxG,IDgBc,AChBV,CAACmI,CDgBW7B,IChBN,CAAC,KDgBe,QChBF,EAAE,0BAA0B,CAAC;APJ7D,EKED,ALlBkC5E,EFcjC,AMCA,AFGA,EKGG,EDgBY+E,ANrCwB,CAAC9E,COqBjC,CTLR,AMCA,AGIS3B,EDgBY,EAAE,AChBV,CDgBW,AChBVmI,IPrBsC,CAAC9E,AOqBlC,CAAC,KPrBuC,AOqBlC,EAAE,MTLZ,GMCG,kCGIoD,CAAC;APrBZ,IKkB3D,AHAC,EJDG,AMCA,AGIA,EDgBYF,ERrBR,ASKA,CTLC7B,AIGT,AKEStB,EHJE,EGIE,CAACmI,CHJC,CAAC3C,EEoBY,CChBT,CDgBW3D,AChBV,GTLG,CAAC,GSKG,CHJC,CGIC,UDgBY,CAACG,AJlBpB,SIkB6B,QChBM,CAAC;IFJ1D,ADCA,EFEI,AKEA,ETNsBT,AQsBV6B,EJlBR,AKEA,CFJR,AHES0B,AKEA9E,IAAI,CAACoI,KTNyB,AQsBV,CJlBT,CJJqB,AQsBVvG,AJlBVoD,IKEI,CLFC,AKEA,ELFE,KKEK,CFJjBiB,CEImB,EFJhB,EAAEC,CCoBqB,CAAClE,CDpBnB,EAAE,OCoB2B,kBChBgB,EAAE;EHJtE,INF6C,AOG1C,AHEA,CJL2C,CAAC,AQuBhCoF,AChBRgB,ELFA,CAACvD,EGFEP,ACoBU,EAAE,EDpBR,CAACC,ACoBU,AChBR,EAAE3C,ELFA,CGFC,AHEAqD,CGFCX,IAAI,CAACE,GHEG,CAAC,CAAC,CGFC,CHEC,CGFC,EEIJ,CLFO,AKENzC,CFJOmE,AHEAtB,GGFG,GAAGqB,EEIJ,CFJO,CHEC,CAAC,CGFC,CAAC,CAAC,CAAC,GAAGA,GAAG;IPF5D,AOGA,ADFC,EFIG,EIkBYQ,AChBR4B,ELFA,CAACxD,KIkBe,EAAE,CChBP,EAAEjD,CLFD,CAACsD,UAAU,CAAC,IAAI,CAAC1E,CAAC,AKEN,CAACwB,ELFQ,IAAI,CAACgB,KAAK,CAACmC,OAAO,CAACrB,KAAK,GAAG,CAAC,EAAE,IAAI,CAACrD,CAAC,GAAG,IAAI,CAACuC,KAAK,CAACmC,OAAO,CAACpB,MAAM,GAAG,CAAC,EAAE,IAAI,CAACf,KAAK,CAACmC,OAAO,CAACrB,KAAK,EAAE,IAAI,CAACd,KAAK,CAACmC,OAAO,CAACpB,MAAM,CAAC;EJLlK,AOGA,EDFA,AFKD,EIkBY,AChBR,CDgBS,AChBR,CDgBS,AChBR,GHLN,yBAAgBwB,YAAY,EAAE;EFG7B,EJNA,AOGA,ACsBO,EFrBJ,AGKA,IHLI,AGKA,CHLCA,AGKAxF,IAAI,CAACmI,KAAK,CAAC,CHLC,GAAG3C,MGKM,EAAE,IHLI,2BGK2B,CAAC;EDiB5D,AJpBH,CIoBI,CR1BJ,AOGA,ADED,CEqBO5E,CChBH,IDgBQ,AChBJ,CTRR,AOGA,ACqBa,AChBJZ,IAAI,CAACmI,KAAK,CAAC,OAAO,EAAE,GTRf3G,IAAI,EAAEC,AOGAb,IPHI,COGC,CPHC,COGC,YEK8B,CAAC;ALJzD,EEDA,AFtB6Bc,IJoB1B,AOGA,AEKA,EL5BgC,CAACC,CJoB7B,AOGA,AEKA,CTRCZ,AOGAL,AEKAV,CFLC,GAAGY,AEKA,CAACwH,ETRE,EOGE,AHvB8B,CJoB7B,AOGAvE,AHvB8Ba,IGuB1B,AHvB8B,CGuB7BZ,CEKC,CAAC,IFLI,CAACE,EEKE,EAAE,EFLE,GAAG,GAAG,+BEK+B,EAAE;AL5BvB,EI6CjD,EFvBH,ECEG,EPHIvD,ASQA4H,CTRC,COGD,CPHG7G,AOGFf,CAAC,GPHK,AOGFG,GEKK,EFLA,AEKE4B,CFLDqB,IAAI,CAACC,MAAM,CAACC,KAAK,CEKL,CAACtB,CFLO,GAAG,OEKC;EDiBvC7B,EDrBJ,ADHC,GEwBQ,CRxBDF,AQwBEuC,AChBFqF,CTRC,EAAE7G,AMEX,EEsBe,CAACL,EAAE,CAAC,EChBA,EAAEoB,SHNX,EEsBwB,EAAE,MChBJ,CAACE,GDgBY2D,OAAO,EAAEC,UAAU,EAAE;EDrBjE,ECsBO,ERxBJ,AMEA,AGMA,CTRC,ASQA,CDgBOA,AChBN,KHNK,IAAI,CEsBO,AFtBNxE,CEsBOqF,GFtBH,CEsBO,KAAK,QAAQ,IAAI7D,eAAS,CAAC8D,QAAQ,CAACd,UAAU,CAAC,EAAE;IDtB3E,ADCD,AGMA,ETRI,AQwBQ1F,IRxBJ,CAACK,AQwBQ,CAACsF,MAAM,CAAClG,ERxBN,CAAC,AQwBQ,CAAC,GRxBL,CAACU,OAAO,CAACN,CAAC,EAAE,IAAI,CAACM,OAAO,CAACL,CAAC,CAAC;EMElD,AGMA,ETPD,AOAC,ICwBe8F,GDtBhB,ICsBuB,EAAEF,UAAU,MDtBtB;EPFZ,AMCA,EGMA,EFJG,ECsBYG,EDtBR,CAACzD,ECsBY,EAAEsD,GDtBP,GAAG,CAAC,GCsBa,CDtBT,ACsBUgB,CDtBTtE,OAAO,KCsBe,CAACyD,KAAK;AFxBpD,EA3B+BpB,EN0B/B,ASOA,EFHG,ECsBYlC,EDtBR,CAACyC,AEKT,SFLkB,ACsBU,CDtBT5C,AD9BsB,CEoDXnB,MDtBJ,CEKjB,EFLoB,CAAC,IAAI,CAAC+D,ICsBM,CAAC5D,IDtBE,CAACgB,ICsBM,GDtBC,ACsBA,CAAC;AFpDZ,IN0BxC,AOKD,EEKI,EDiBYI,ECjBRmF,CTRR,QSQiB,EDiBY,CCjBT,CDiBW1G,GCjBP,CAACgC,IAAI,CAACC,CTRjBtC,IAAI,CSQmB,CTRjBC,ASQkBsC,GDiBK,CRzBnB,AQyBoB9B,CCjBD,CTRjB,QQyB4B,GAAC,CAAC;EDtBtD,IPFG,ASQA,EDiBYoF,ERzBR,ASQAmB,CTRC,EQyBY,ERzBRhH,AQyBU8E,IRzBN,CSQC,GTRG,ASQA,CTRC,CQyBW,CAACgB,CCjBT,CTRC,ASQAzD,CTRC,GSQG,CTRCpC,ASQAqC,ITRI,EQyBY,ACjBV,CDiBWuD,ACjBVrD,CTRC,CAAC,EAAE,CQyBW,CCjBT;EFN3C,IEQG,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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        BATTLE: \"BATTLE\"\r\n    }\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n       super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changeCursor() {\r\n        this.setInteractive({ useHandCursor: true });\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 260,\r\n    cardHeight: 410,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemySprite = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3\r\n}\r\n","import { gameOptions } from \"../../config\";\r\n\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth / 2;\r\n        this.displayHeight = gameOptions.cardHeight / 2 ;\r\n    }\r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nlet handArray = [];\r\nlet deckArray = [];\r\nlet deckTrackerArray = [];\r\nlet graveYardArray = [];\r\n\r\nfunction deckSetUp(scene, array, arrayTracker) {\r\n    let x = scene.game.config.width / 25;\r\n    let y = scene.game.config.height / 1.24;\r\n    for (let i=0; i < array.length; i++) {\r\n        let cardBack = scene.add.sprite(x,\r\n        y, 'cardBack');\r\n        cardBack.setOrigin(0.5, 1);\r\n        cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n        cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n        \r\n        arrayTracker.push(cardBack);\r\n        x += 4;\r\n    }\r\n}\r\n\r\n// implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\nfunction shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i+1));\r\n        [array[i], array[j]] = [array[j], array[i]]\r\n    }\r\n}\r\n\r\nexport {handArray, deckArray, deckTrackerArray, graveYardArray};\r\nexport {deckSetUp, shuffle};\r\n\r\n","import { graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","export default class Character extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.health = 50;\r\n    }\r\n\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Player extends Character {\r\n\r\n    constructor(scene, x, y, sprite, deck) {\r\n        super(scene, x, y, sprite);\r\n        this.actionPoints = 6;\r\n        this.deck = deck;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints = actionPoints;\r\n    }\r\n\r\n    getDeck() {\r\n        return this.deck;\r\n    }\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Enemy extends Character {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n}","import { handArray, graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class InteractHandler {\r\n    constructor(scene) {\r\n\r\n        scene.input.on('dragstart', function (pointer, gameObject) {\r\n            scene.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            scene.tweens.add({\r\n                targets: scene.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                handArray.splice(index, 1);\r\n            }\r\n\r\n            scene.arrangeCardsInCenter(handArray);\r\n\r\n        }, scene);\r\n\r\n        scene.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        scene.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n            }\r\n        }, scene);\r\n\r\n        // hover out listener\r\n        scene.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth/2,\r\n                    displayHeight: gameOptions.cardHeight/2,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10,\r\n                });\r\n            }\r\n       }, scene);\r\n\r\n        scene.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        scene.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        scene.input.on('drop', function(pointer, gameObject, dropZone) {\r\n            gameObject.input.enabled = false;\r\n\r\n            // setting card in the middle \r\n            gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n            gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n            gameObject.x = dropZone.x;\r\n            gameObject.y = dropZone.y + dropZone.y / 3;\r\n            \r\n            graveYardArray.push(gameObject);\r\n\r\n            // remove the card from the scene after 500ms\r\n            setTimeout(function() { gameObject.destroy(); }, 500);\r\n\r\n            dropZone.renderNormalOutline(scene);\r\n\r\n            scene.cameras.main.shake(100, 0.02);\r\n        });\r\n\r\n        scene.input.on(\"dragend\", function(pointer, gameObject, dropped) {\r\n        \r\n            if (!dropped) {\r\n                handArray.push(gameObject);\r\n                gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n                gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n                scene.arrangeCardsInCenter(handArray);\r\n            }\r\n        }, scene);\r\n    }\r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/Button.js';\r\nimport HandCard from \"../helpers/classes/cards/HandCard\";\r\nimport { gameOptions, enemySprite } from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/Zone.js\";\r\nimport Player from \"../helpers/classes/Player.js\";\r\nimport Enemy from \"../helpers/classes/Enemy.js\";\r\nimport {handArray, deckArray, deckTrackerArray, graveYardArray, shuffle, deckSetUp} from \"../helpers/classes/Deck.js\";\r\nimport InteractHandler from \"../helpers/classes/InteractHandler.js\";\r\n\r\nlet enemyArray = [];\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"sword\", \"./assets/sprites/sword.png\");\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemySprite.spriteWidth,\r\n            frameHeight: enemySprite.spriteHeight\r\n        })\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let interactiveHandler = new InteractHandler(this);\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        let player = new Player(this, 0, 0, \"guy\", handArray);\r\n        player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        let heartext = this.add.text(0,0, player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        let actiontext = this.add.text(0,0, player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n         \r\n        for (let i=0; i < gameOptions.startCards; i++) {\r\n            // creates cards from spritesheet and makes them draggable\r\n            let card = new HandCard(this, gameWidth/2, gameHeight/2, 'cards', i);\r\n            deckArray.push(card);\r\n        }\r\n\r\n        let card1 = new HandCard(this, gameWidth/2, gameHeight/2, 'sword', 0);\r\n        deckArray.push(card1);\r\n\r\n        // Button to end turn\r\n        let endTurnButton = new Button(gameWidth, gameHeight/2, 'End Turn', this, this.endTurn.bind(this), '#202529');\r\n        endTurnButton.changeCursor();\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 500, 400, 300, 600);\r\n\r\n        shuffle(deckArray);\r\n        deckSetUp(this, deckArray, deckTrackerArray);\r\n\r\n        for (let i=0; i < enemySprite.numberOfSprites; i++) {\r\n            let enemy = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemyArray.push(enemy);\r\n        }\r\n        \r\n        this.spawnEnemyOnScene();\r\n\r\n    }\r\n\r\n    arrangeCardsInCenter(handArray) {\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            card.startPosition = {\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(50);\r\n        }\r\n\r\n    }\r\n\r\n    // simulate a drawing feature\r\n    endTurn() {\r\n        if (deckArray.length > 0) {\r\n            let lastCard = deckTrackerArray.pop();\r\n            lastCard.destroy();\r\n\r\n            let drawCard = deckArray.pop();\r\n            handArray.push(drawCard);\r\n            drawCard.cardInHand(this);\r\n            this.arrangeCardsInCenter(handArray);\r\n        }\r\n    }\r\n\r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n        console.log(numberOfEnemies);\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemyArray[Math.floor(Math.random() * enemyArray.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n        }\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport {BattleScene} from \"/src/scenes/BattleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 850,\r\n    height: 800,\r\n    scene: [\r\n        BattleScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);\r\n\r\n"]}