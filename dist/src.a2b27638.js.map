{"version":3,"sources":["src/CST.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/handCard.js","src/helpers/font.js","src/helpers/classes/button.js","src/helpers/classes/zone.js","src/helpers/classes/player.js","src/helpers/classes/enemy.js","src/helpers/classes/cards/toolTip.js","src/helpers/classes/cards/damageCard.js","src/helpers/classes/cards/comboCard.js","src/helpers/classes/cards/reloadCard.js","src/helpers/classes/cards/healingCard.js","src/scenes/battleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","graveYardArray","DiscardPileScene","key","data","load","spritesheet","frameWidth","frameHeight","image","console","log","bg","add","sprite","setOrigin","setScale","alpha","startX","startY","length","i","setVisible","discardCard","existing","x","y","displayWidth","displayHeight","input","once","scene","stop","Phaser","Scene","HandCard","name","cost","cardType","effect","visible","setInteractive","setDraggable","GameObjects","Sprite","loadFont","url","newFont","FontFace","then","loaded","document","fonts","catch","error","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","useHandCursor","on","newX","newY","Text","Zone","width","height","setRectangleDropZone","setDepth","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Player","frame","maxHealth","health","maxActionPoints","actionPoints","handArray","deckArray","deckTrackerArray","spriteType","keepCards","keepCardsLimit","player","disableDragOnCards","cards","pointer","includes","splice","indexOf","clearTint","push","setTint","indexList","index","setActive","shuffle","deckSetUp","arrangeCardsInCenter","enableDragOnCards","draggable","game","config","cardBack","j","Math","floor","random","Enemy","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","getHealth","min","max","Tooltip","wordWrap","DamageCard","tooltip","getLabel","cardInHand","card","target","setHealth","damage","setText","enabled","ComboCard","ReloadCard","sideEffects","heartext","setActionPoints","amount","HealingCard","BattleScene","gameWidth","gameHeight","hud_bg","tileSprite","card_bg","setPosition","heart","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","launch","loadCards","endTurnButton","endTurn","bind","keepCardButton","keepCard","dropZone","drawCard","enemySprite","spawnEnemyOnScene","gameObject","removeTooltip","tweens","targets","angle","duration","background","dragX","dragY","type","yOffSet","startPosition","depth","showTooltip","setLabelCoordinates","renderActiveOutline","getCost","activateCard","setTimeout","cameras","main","shake","dragend","dropped","cannon","grenade","headshot","reload","overload","medkit","kevlar","amountOfCards","lastCard","pop","destroy","bottomOfScreen","screenCenterX","yDelta","cardX","selectCardInHand","moveCardsBackInDeck","action","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","LoadScene","start","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AKAP,AMAA,ADAA,APAA,AUAA,ADAA,ALAA,ADAA,ALAO,AGAA,AYCP,AFDA,AZAA,AaAA,IfAaA,ACAAK,GDAG,EIAA6D,CJAG,KCAK,EGAA,CHAG,AGAFT,IAAI,EAAEU,GAAG,EAAE;ACAF,AMClC,ADAA,APD2C,AUC3C,ADAA,ALDgD,ADAR,AUExC,AFDA,AZAA,AaAA,EfAIlE,ACAAK,AGAA,IHAI,AGAA8D,EJAE,ACAA,CAAC,CDAC,GIAG,GAAG,IAAIC,QAAQ,CAACZ,IAAI,EAAE,aAAa,CAAC;ACDjB,AMElC,ADAA,APF2C,AUE3C,ADAA,ALFgD,ADAR,AUGxC,AFDA,AZDgD,AaChD,EdAIlD,AGAA6D,EJAIlE,IAAI,CIAD,CJAG,AIAFwB,EHAE,EAAE,AGAA,CHAC,CDAG,AIAF,CAAC4C,IAAI,CAAC,UAAUC,MAAM,EAAE;ACFR,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AUAxC,AFGA,AZFgD,AaCJ,EdCxC/D,EDAIL,AIAAqE,MJAM,CCAD,CDAG,AIAA,CHAD,AGAEC,GHAC,EGAI,CAACvC,CJAC,EIAE,CAACqC,MAAM,CAAC;ACHA,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQIxC,AZHgD,AaCJ,EdExC9D,AGAA,CAAC,CJAGL,AIAF,CAACsE,KAAK,CAAC,CHAC,EAAE,EDAI,CCAD,CDAG,GIACC,KAAK,EAAE;ACJI,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AUKxC,AFAA,AZJgD,AaCJ,EfGxC,ACAAjE,EGAI,OAAOiE,GHAC,EAAE,AGAE,GHAC;ADCrB,AKNkC,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQMxC,AZLgD,AaCJ,CfI3C,CCAGhE,AGAA,CAAC,CAAC,OHAO,EAAE,CAAC;ADAf,AKNiC,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AFOxC,AYAO,AFAP,AZNgD,AaCJ,EdKxCC,EeAO0H,MAAM,GfAF,AeAK,EfAH;AIPiB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALQxC,AaAA,AZPgD,AaCJ,CdM3C,CeAGwE,IAAI,EAAExJ,MAAM,CAACiM,IAAI;AXRa,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALQvC,AaCD,AZRgD,AaCJ,ECOxC7J,KAAK,EAAE,IAAI;AXTmB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALUjC,AaD2D,AZRlB,AaCJ,ECQxCC,EfAS9E,IeAH,EAAE,GAAG,SfAgB,GAAG;AIVA,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQS0B,AZRlB,AaCJ,EdSxCC,AeAA0O,KAAK,EAAE,EfAE,EAAE,GAAG;AIXgB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQS0B,AZRlB,AaCJ,EdUxCzO,EeDS0O,MAAM,EfCL,AeDO,EfCL,gBeDuB;AXXL,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALaxC,AaJkE,AZRlB,AaCJ,CdW3C,GQbYlG,ADAQX,AQWoB8G,IAAI,CRXnB,CQWoBpM,CPX1B,KOWgC,CAACqM,KAAK,CAACC,GAAG;AXV9D,AMCoC,ADAA,APApC,AUAoC,ADAA,ALFY,ADAR,ALavC,AaJiE,AZRlB,AaCJ,ENFxB,ADAM,EFELnK,AUS2CoK,IVTvC,MUSiD,EAAEvM,MAAM,CAACqM,KAAK,CAACG;AXVzF,AMCoC,ADAA,APApC,AUAoC,ADAA,ALFY,ANezC,AaN2D,AZNlE,AaD4C,ENFxB,ADAM,AFED,AUS4E,CAAC,CXRjFlL,AFAApB,AFYRxC,ACZTM,KDYc,CIZS,EFAE,AFYR,MCZH;ASDkB,ADAA,AGAA,ADAA,ALFY,AOSkB,AZN/C,AaDyB,EVCjB,AFAE,AMFzB,ADAA,AFCqB,ALcrBL,AeJAmC,EdPS7B,GcOJ,EAAE,CACH8N,GfGO,EAAE,EOfDjM,ECAAA,AReK,CCXQ,EMJR,ECAA,ADAEN,CAAC,CCADA,CAAC,ADAEC,CAAC,CCADA,CAAC,ADAEZ,AQYZ,EPZY0C,AOarBtD,IRb2B,CCAD,CDAGiF,CCAD,IDAM,EAAE,qBQapB;ALZY,ADAA,AGAA,ADAA,ALFY,ASgBhD,AFPkE,ACPtB,CCc3C,CXb0B,AFAE,AGAzB,ALcAtF,ACZyB,EOJO,ADAQ,ADCvBqF,AQER8I,MRFc,GQEL,CdaN,EKdAjM,ALcE,GAAG,EKdA,EAAEN,CAAC,EAAEC,CAAC,EAAE2C,KAAK,EAAEC,MAAM,EAAE;AKDR,ADAA,AGAA,ADAA,AIclC,AFPgE,ETJ9D,AFDA,AIFuB,ANgBvBxE,ACbyB,AaDP,ENHc,ADAQ,AFEA,aLezB,CIbH2B,CAAC,AJaI,CEdLW,AFcM,CIbHV,CAAC,EAAE8B,AFDF,EAAEnB,GECK,CFDD,CECGN,CFDDO,IECM,EAAEmB,EFDA,EAAElB,IECM,EAAEmB,AFDF,EAAE3B,KAAK,CECG,CFDDN,CECG,AFDF,EAAEC,CAAC,EAAEZ,MAAM,EAAE;AQF/B,ADAA,AGAA,ADAA,AIgBpC,AFTkE,EPPvC,ANiBvBf,ACbA,AaFkB,EVCkC,AMDnC+I,ADAAV,APA8C,AUA9CgB,ADAAL,AHFb,ADAA,AFCoC,AUexC/B,IAAI,GfCK,AeDF,ELdmB,AVef,CSfgB,AEAA,CCAC,AZef,AeDF/E,MAAM,CAACyM,IAAI,CAACzH,GPhBblF,ADAAA,ANII,GcYe,CAAC,CPhBf,ADAA,ECAEN,ADAAA,CCAC,ADAA,ECAEC,ADAAA,CCAC,ADAA,ECAE8B,ADAA1C,KCAK,CDAC,EAAEqE,KAAK;AMO0B,EHLpC,ADAC,AGAC,ADAD,ALA3B,ANgBAnF,AcfA,EVAoD,AFDW,AMD3D,ADAA,AFCA,AJEU,MOHL2D,ADAA3C,IPiBG,EAAE,CQjBE,CDAC,ADCLe,CCDM,CCAC,ADAA,CAAC,EDCH,AQCH,ERDKN,CAAC,EAAEC,CAAC,EAAEZ,ADAfiB,KAAK,CCAgB,CDAdN,CCAgB0D,ADAf,EAAEzD,CAAC,ECAiB,ADAf2C,ECAiB,GDAZ,EAAEC,MAAM,GAAEC,oBAAoB,CAAC9C,CAAC,EAAEC,CAAC,CAAC;ALiBpE,AaZkE,CbYjE,CUjB6B,ADAC,AGAC,ADAD,EPEvB,AFDA,AKDA,ADAoC,ADCpC,AJCU,AaDA,ENDND,CAAC,EAAE,CDAF4D,AFCAtE,CGDI,KDAE,GAAG,AFCA,CAAC,CAAC,EAAE,CAAC,CEDAyG,AFCC,IJEd,CGDAzF,AFDAA,KECK,AFDA,EECEN,AFDAA,CECC,AFDA,EECEC,AFDAA,AKDkB,CHEjB,AFDA,AKDkB,EHEhB8B,AFDA1C,AKDkB,EAAE,EAAE,CHEjB,AGFkB,CLCjB;AFgBhC,AaZiE,EHJ9D,ADAA,AGAA,ADAA,EPEI,AFDA,AKDA,ADDoC,ADEpC,ASDU,ENANY,APGAvB,COHC,EAAE,APGA,CGDFwD,AFDAvB,AKDAuD,AFCAnB,CJEI7F,GCFA,GECG,AFDAyD,CGAC,CAAC,AJEF,CGDG,AGFA,AFCA,AJEFxD,CSHLwD,ARCQ,AGAA,CIDRA,AEAAA,CCAAA,ALAU,EGAN,CDAA,AEAA,AVGO,CSHLC,AEAF,AXGQtD,CQHNsD,AEAAA,CCAAA,AECR,CPDmB,CGAP,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,MFAQ,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAER,AEAF,CHAEA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CDAEN,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEC,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEZ,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE,AEAF,CHAE,AEAA,CCAA;ACID,IHJC,ADAA,APE3D,AUF2D,ADAA,AHC3D,ADAA,ADDA,ADEAiB,AJEA,COHC,APGA,CGDGN,AUDAtB,CVCC,EAAE,ACDF,ASAE,CVCC,AFDHkC,AKDAI,AFCC5B,CSAGlC,ETAA,CHAA,AGAC6C,GHAEa,EYAA,CAACzD,CZAG,CGAE,EEDC,EAAE,AOCF,CAACC,GRFdkD,KAAK,EAAEN,CAAC,EAAEC,CAAC,EAAEZ,MAAM,EAAEqE,EDEH,GCFQ;AOI0B,EZC9D,ESL+D,ADAA,APG3D,AUH2D,ADAA,AHE3D,ADCA,ADFA,ADEA,AQGKkE,ACHL,CAAC,CVCG3H,CAAC,EAAE,CFDFa,AMDAqB,ADCA6D,ADFArC,ADEAX,KQGW,CXHL,GAAGlC,AKAA,ADFA,CECC,AHCA,CGDC,CDCCR,ADFA,CDEC,CCFC,CJEC,EMDC4B,ADCC,CAAC9C,GAAG,AFAA,CEAC6G,AFAA,CAAC,CGDA,CAACjG,CAAC,ADCC,CAACM,CCDA,IDCK,CAACiF,CCDDrD,GDCK,CAACsD,GCDC,CAACvF,CAAC,CAAC,ADCE,CAAC2C,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAKgB,MAAM,EAAE;EMG9D,AZDnB,AaDD,EVCI,AMJA,ADAA,APGA,AUHA,ADAA,AHEA,AFDA,ADEA,CDCC,CGF8EsC,ILC1ErF,AMDAuB,AFDAwB,ADEAX,CED+E,EAAE,GDD3E,EJEE,AMDA,ADA8E,CCA7E,AFDA,CDEC,CHACpC,EGAE,ECFC8C,IJEK,CQHlBhD,ADAAA,AGAAA,ADAAA,CNGoB,CAAC,CAAC,CKHlB,ADAA,AGAA,ADAA,ALCkB,EIDhBC,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA,EDAER,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEN,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEZ,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA;EEKvC,ACFnB,EVEG,AMJA,ADAA,APEyB,AUFzB,ADAA,ALCA,ALEH,EOFmBgD,ADA6E8D,IHGxF7G,AMJAsH,ADAAA,AGAAA,ADAAA,ALCA/C,ICAgG,EAAE,CGD3F,ADAA,AGAA,ADAA,EPIE,CAAC,AMJA,ADAA,AGAA,ADAA,CPIC,AIHe,EJGb,AIHe,CEDd4C,ADAAA,AGAAA,ADAAA,CLCC,CFGC,CAAC,CEHC,CAAC,GEAkB,QEDhB,ADAA,AGAA,ADAA,CDACnG,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEN,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,GDAC,ADAA,AGAA,ADAA,MDAKE,ADAAA,AGAAA,ADAAA,YDAY,ADAA,AGAA,ADAA,EDAED,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,MDAK4G,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA;ETG9E,AWEA,ETAI,AMJAvG,ADAAA,AGAAA,ADAAA,AJA6G,ADC7G,ADEA,AJDH,AaDA,CPDiH,CCAlE4F,ADAmE,GGA1G,ADAA,AGAA,ADAA,CPIA/D,AMJC/C,ADAAA,AGAAA,ADAAA,ALCD0E,ADEAZ,CGH4C,APIrD,ESJa,ADAA,AGAA,ADAA,AHA0C,CEAzCnD,ADAAA,AGAAA,ADAAA,MPIK,CAAC,ACDA,CKHE,ADAA,AGAA,ADAA,AHA0C,AFC3C,EDEEO,CCFC,AOGV,AZAT3B,EGAoBuD,ECDG,AJCnB,CIDoB9C,CCFAyE,ALGlB,EIDqB,CDCA,ACDCV,CDCAnD,CAAC,EAAE,ICDK,EDCAkC,ACDE,ECFC,KFGI,CAACjC,CAAC,AMJtB,ADAA,AGAA,ADAA,CPIuB;EFFlD,EEGG,AMJA,ADAA,AGAA,ADAA,AJAA,ADCA,ADEA,AQAU,ACHb,ENDiEyG,APK9DlI,IGAK4D,AMJA0E,ADAAA,AGAAA,ADAAA,AJAAd,ADCAjC,ADEAX,CSDT,GNH0E,EAAE,EJK3D,CAAC,AGJA,ADCA,CIDC,ADAA,AGAA,ADAA,AJAA9D,ANID,CSJEgB,ADAAA,AGAAA,ADAAA,CLCC,CLGA3B,CKHE,EIDE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA,AVID,EMJG,AFGA,CEHC,AFGA2B,ASDnB,CPFoB,EAAE,CAAC,CAAC,AFGA,CAAC;IKHR,ADAA,APC1B,AUD0B,ADAA,AJEvBA,ADAA,ADCgC,AQAtB,AZEd,EGDoB+B,AUDhB,ENJyEO,CDGpE,CAACxD,ADAD4E,AQCD,CAACpF,ENJyE,ADGrE,CAACmB,CCHsE,AMIvE,CAACf,GRDI,EFEiB,AUDhB,CPDG,ADAD,AQCD,CVCiBiD,CEFd,KOEb,CCDkB,EAAE,qBPDF,MOC6B,CAAC;EJF1D,ADAA,AGAA,ADAA,ANIA,AJAC,EGD4C,AFH5C,AKGG,ADDA,CFC0C,CAAC,AILwC,AKM/EvD,ACDJ,GDCO,CNDF0H,ADDAnC,AQCD,CZDR,AWEa/G,ACDJ0B,IAAI,CAACI,GDCE,CAAC7B,CCDE,CAAC,IRDK,AOEF,CAACE,ENDI,ADDA,CCCCiD,CLDlBA,AIAmB,AQCD,EAAE,EPAG,CLDlB,AKCmB,ELDjB,uBYCyC,CAAC;EJH3D,ADAA,AGAA,ADAA,ANIA,EDAG,AINoF,ADMpF,ADDA,AOEA,AZDH,CONwF,AKOpF,CXFD,AMLsF,AMMtF,IVAKU,AFDD,AKCCqF,ADDA7H,AQCD,CZDCuC,AYCAnC,IAAI,CAACI,EZDE,EKCG,CLDA,AYCA,CZDC,AKCC,AOAD,EVAG,AEDA,CFCE,CFDD,CAAC+B,AIAC,EAAE,GQCE,EZDE,AYCA,6BAA6B,CAAC;EDE9D,EHNC,ADAA,AGAA,ADAA,AHDGT,AFKA,ADAH,AJAA,EGA0BgC,AFAvB,AYCA,GNNK,CNKD,AMLElD,AFKD8E,AQCD,CZDClD,ADET,AaDSpC,ENNI,CAACmB,CMMD,CAACf,GVD0B,CEArB,CFAuB,AUCvB,CNNG,AMMF,CRDE,EJAC,EAAE,GDEf,AaDkB,CRDE,CQCA,qBNNF,MMM6B,CAAC;EDCzD,ETF6C,AMJ7C,ADAA,AGAA,ADAA,AHAG,ADMA,ADDA,ADDH,CDA8C,CAAC,AFC5CsB,ADEA,AaDA,INNKS,AFKAoD,ALED,AaDA,CJJR,ADAA,APGS,AUHT,ADAA,ANIA,AJCSvF,AaDAA,CZDCwB,GDEG,AaDA,CbCCvB,AaDAG,CZDC,AMLC,CNKAiC,CIAE,CELC,CMMA,CRDE,AQCD,ERDG,CELC,EPOC,CAAC,ECFE,AYCA,CJJjBX,ADAAA,APGkB,AUHlBA,ADAAA,CGImB,GZDG,ADEA,CSLjB,ADAA,APGkB,AUHlB,ADAA,CVKmB,CSLjB,ADAA,AGAA,ADAA,INII,iBSAmC,CAAC,WbCW,EAAE;IGFnE,AIJA,ADKA,ADAA,AOAH,EHHG,ADAA,APGA,AUHA,ADAA,ANIA,ASAA,EbCIxB,EGHCyD,AFCD,AMLCQ,AFKAqB,ADCD,ASAA,CZDC9E,AGCA4D,ASAAtE,CVFE,CAAC,EUEC,CAACI,ENNG,APOC,COPA,CNKA,AMLC,APOCzB,CCFD,AMLC,AMMD,CTAC,ASAA,CTAC8F,CHDC,AIAC,EFDE,AFCD,CAAC,AIAC,CFDC,AFCD,AIAC,ADCD,EAAE,ESAE,EAAE,KbCD,CAAC3F,SAAS,caDoB,CAAC,gBJJzC4C,CDAAA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CCAA;ELI1B,EGHA,ADAA,AGAA,ADAA,AHHqB,AFMjBA,AODH,ETD0B,ACGvB,ASAA,EbCIvB,CKFC,CAACK,ADCF,ASAA,CTAC8D,AQAT,ACAStE,EVHwBoD,AEEpB,CAACjC,CQCD,CAACf,GbCK,EGJsB,AHIpBzB,AaDF,CRDG,ADCF,ASAA,CVHuB,ACGtB+F,EQAhB3E,IAAI,CCAmB,CDAjB,CRAmB,ASAA,CTAC,CAAC,EAAE,IAAI,AJCN,CIDOqE,AJCNrF,UIDgB,CAAC,CCDtB,MQC6B,CAAC;EJJzD,ADAA,AGAA,AJFD,EJG2C,AEEd,AQE7B,EVJ4C,AFGxC,AGCA,AQAA,AZCA,CAAC,CAAC,EIDE,CAACuF,WAAW,CAACK,UAAU,CAAC,IAAI,CAACvD,CAAC,GAAG,IAAI,CAACI,KAAK,CAACoD,OAAO,CAACZ,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC3C,CAAC,GAAG,IAAI,CAACG,KAAK,CAACoD,OAAO,CAACX,MAAM,GAAG,CAAC,EAAE,IAAI,CAACzC,KAAK,CAACoD,OAAO,CAACZ,KAAK,EAAE,IAAI,CAACxC,KAAK,CAACoD,OAAO,CAACX,MAAM,CAAC;EGPlK,ADOD,ADDA,AQCC,EVHGvC,AMFH,ADAA,AGAA,ADED,ANIA,EHDI,AWCA,AZCA,GGLK,CAAClB,AFGF,AWCAmF,AZCA,CCFCrE,ADEAtB,EGLI,CAACmB,CSID,AZCA,CAACf,EYDEL,GZCG,CGLG,ASIF,AZCA,CCFC,GAAGpB,QDEQ,EAAE,SCFC,CAACG,OEHR,EFGiB,MDEc,CAAC;EMD5D,ADFC,ADEA,EDJ4B,AMF5B,ADAA,AGAA,ADGD,AHLC,AKSD,AZCA,AaHC,EZCG,IAAI,CQJR,ADAA,APISyC,AUJT,aVIsB,GAAG5C,MQJZ+C,ADAAA,AGAAA,KFAK,ADAA,AGAA,EFAE,ADAA,AGAA,MVIgB,CAAC3C,UAAU;EEH/C,AOAA,AJGA,AMCC,AZCA,ECDD,AMTC,AFMA,ADEA,ASDA,EJFG,ADAA,AGAA,IFAIoJ,ADAAA,AGAA,CJHR,AMOA,GJJY,ADAA,AGAA,CAACjG,EFAE,ADAA,ICAI,ADAA,AGAA,CAACkG,MAAM,CEIjB,GFJqB,EJHhB,MIGwB,EAAE;ERAvC,AFIA,ESJD,AJGA,ADFC,ADEA,AQCA,AZCA,ESJG/H,ADAA,ADHA,AMOA,EFJIqB,EHAA,ADHA,AMOA,CNPCS,AFKT,ADEA,ASAST,EJJE,AEAE,CFADpB,ADAA,AGAEmF,CHADvD,CKIC,CJJC,AIIA1B,CJJC,AFHA,EIGI,AEIF,CLJC,AGAE6H,AJHF,AMOA/J,CJJC,ADAA8J,CCAC,EFHE,GCGG,CKIJ,CFJQ,AEIP7J,CFJQ,CHAD,GGAK,CAAC2D,AEIP,CRFZuD,AQEahH,GLJQ,EAAE,AGAE,APIpB,COJqBqK,ANEpB,AQEa,ERFX,AQEaE,IFJW,CAAC,mBEID,EAAE,KAAK,CAAC;IVLxD,AMED,AREC,ASJD,AHDA,ADIA,AMCC,AZCA,EKDG,ADEA,ASAA,ELJI,AGAAtH,EPIA,ASAA,CHLR,AJGA,AFES4C,AQAT,AZCA,AaDS5C,ELJI,AGAA,CAACkH,EEIA,CLJG5H,AKIF4M,CLJG,GAAC,CAAC,AGAE,APIF,ASAA,CFJGrF,APIF9D,ASAAnG,CLJC0C,CAAC,EFEhBU,CEFmBpC,AJIA,CJCjB,CWLqB,APIF,AQAlB,CDJqBoC,AEIP,CPFZ,AOEanD,CHLZmD,CJGC,EKFsB,CAAC+D,CDDnB,AGKa,CAAChH,CHLZ,CFCW,CAACkB,CGAW,CAACqF,CEIN,CAAC,IFJW,CAAC,GHAP,CAACjE,MAAM,EAAEC,CAAC,EAAE,EAAE;ECAzD,AFHA,EJCA,AFIA,AYGD,EFJI,ADDA,AJGAU,ADAA,ADEA,AQAA,AZCArB,IQLQf,AEDJ,ALGA,ADEA,AQAA,CTLR,AFIA,AKDS,ADAAoG,ADEApB,AQAAtE,CNFCyF,CNGC,CUNC,AVMAnF,CUNC4B,AEKA,CAAC9B,CZCC,CMHC,ANGA,CMHC4E,EIHE,AEKA,CFLC2D,ANKA,AQAA,CJJH,AJIIjE,CIJH/E,ARKI,CMHC,ANGA,EYDE,CNFC+B,CDAC,AOEA,CXDjB,CIDmB,CDEC,CMLC,AJGA,AFEA,CDLjBkC,AGGkB6B,AFEA,EIJF,AJII,CIJHzE,CLDb,AKCc,AEDI,CFCH,CLDb6C,AKCcpC,AFEI,AFEA,CEFCiG,AFEArD,CMLC,EPAhB,AKCc,AEDI,CFCH,CLDb,IGGsB,AMEA,CRAC,AQAA,CNFC,AFEA,GEFG,CAAC,EEFF,EAAE,UAASuB,OAAO,EAAE;EKIvE,EJLA,AFHA,ADOD,EHHI,AFIA,AUHA,ANC0B,ADG1B,AQAA,AZCA,EUNI,EPAA,ACKA,AQAA,AZCArF,CGNC+C,ACKAgB,AQAAtE,CJJO,ARKN,CCFC,EWCE,AZCA,CQLO,AIINI,CJJOgC,APGN,CEJC,AFIAL,CDEC,CAACvB,CGNC,ASKA,CXDC,AGCA,AQAA,CRACmE,AJCA,CAAClE,MAAM,CQLO,ARKN,CQLO,ARKN,CIDC,CAAC,AQAA,CZCC,CYDC,CZCC,CIDC,AJCA,CIDCW,CAAC,AJCA,GIDG,IAAI,CAACI,CCDxB,GLE4B,CKFxB,ADCyB,AJCA,CKFxB2D,ADCyBP,AJCAlE,OIDO,AQAA,CRACsD,AQAA,CPDxB,ALEyB,CAAC,CAAC,EIDE,AJCD,CAAC,CAAC,CIDE,CAAC,EAAE,IAAI,CAAC3C,CAAC,GAAG,IAAI,CAACG,KAAK,CAACoD,OAAO,CAACX,MAAM,GAAG,CAAC,EAAE,IAAI,CAACzC,KAAK,CAACoD,OAAO,CAACZ,KAAK,EAAE,IAAI,CAACxC,KAAK,CAACoD,OAAO,CAACX,MAAM,CAAC;EEFlK,AOCA,EJLA,ARMD,AMTC,AHUD,EOJI,ACIA,AZCA1D,EGNIa,AOAAM,ALG4B,ALG9B,CGNG,AHMFf,CYDC,CTLGiD,AMAX,AFHA,AKQS5D,EFLI,CFAwB0D,AEAvB+B,CPAC,ASKF,CAACrF,CZCC,CAAC,CAAC,CUNG,AVMF,CUNGiI,AEKF,CAAC,KJL8B,EAAE,CEAtB,CDAnB,ACAoB,IAAI,AEKF,CFLGnG,AHHpB,CKQmB,KFLO,CAACyG,WAAW,CAAC,QEKM,CAAC;ACF7D,EZCA,AGCA,AStB0B/G,EPmB1B,EGDG,AECA,AJJA,AFKgC,AOGhC,AZCArB,EGNIc,AOAAK,AVMF,AaxB2B,CVkBxB,AHMFd,AaxB2BiB,CNe1B,AKQA,CTLGgC,AIHF1B,AKQAnC,CJN+C,CCC7C,ADD8C,AEC5C,CFD6C,AEC5C4I,AVMF,AaxB2B,CDuB1B,CAACxI,CZCC,COTC,EPSE,COTC,AKQA,CFLG,AEKF,CFLGmI,GHHC,CKQC,EAAE,CFLG,CAAC7G,KAAK,CAAC+D,MAAM,CAACT,MAAM,CAAC,qBEKmB,CAAC,UHLU;AIlB1C,ETsBtC,EKHD,AREC,AMLD,ADGC,EHAG,AQCA,ACIA,AZEA,CGPC,COAG,ALCJ,EOII,AZEAnE,CMLR,AMGSb,CJNO,GIMH,CJNO,AIMNI,AZEA,CQROiI,ERQJ,CAAC,CYFC,CAAC,IJNU,CAAC,EIMJ,EJNQ,AIMN,CJNOX,IFGpBC,GAAG,EEH0B,AFGxBC,EEH0B,CFGvB,EEH0BO,AFGxB,IEH4B,CAACjG,MAAM,CAACoG,CIML,CPJnB,AOIoB,IJNU,CAAC;AJIpE,EKHA,AFHA,AHlB6B1G,EHuB7B,EEDG,AQCA,ADDA,AJEA,AMGA,AZEA,EI7BgC,CAACU,CDsB7B,AEA8B,AOK9B,AZEAxB,CGPCyC,AFGT,AWESvD,CJNO,CFGL+G,CDFEpB,COKA,CJNO,AIMNvF,AZEA,CQROgH,AFGN,CAACJ,CDFE,ALOD,CI7B+B,AJ6B9B,CGPC,ACtB8BjD,AQ2B9B,CTLC,ASKA,CNHC,CAACgD,CFxB+B,CDsB7B,AKDM,CLCLzD,AKDMiF,CFGL,CAACtB,CLCjB,EWEoB,ETLE,AKDM,AIMN,CTLC7F,AKDM,AFGN,CHFC,CGEC,CHFC,CKDO,CAACsG,CFGLE,CHFC,CAACtE,CGEC,GAAGqE,EEHQ,CLCL,AGEA,CHFCtG,AKDM,CLCL,AKDM,CLCL,AGEA,CAAC,CAAC,CAAC,GAAGsG,GAAG,GMGG,CAAC;AR3BX,EKqBpD,ENED,AQCA,AJNC,ADOD,ELCI,AWEA,AZIA,IKTIhC,AOKA,AZIA/F,CYJCI,CJLO,CPGL,EIHE,AOKA,CPLC2D,AOKAvD,CJLO,APGN,CAAC4B,AIHA,CAAC,EGAQ8E,AIKN,CJLO,APGN,AWEA,EZIE,CQTK,ARSJ/F,CQTK,EAAE+F,CAAC,ERSF,CQTKxH,AHAJ,EAAE,COKC,AZIA,CAAC,CYJC,CZIE,MKTIsG,CGAF,CAACjG,KHAQ,EAAE,KGAE,CAACoB,MAAM,EAAE+F,CAAC,EAAE,CIKK,CJLH,AIKI;AHPrE,ENEA,AMrBkChF,AEsBlC,ALCA,ELED,AMTC,EGMGJ,AEKA,EZIIrB,EYJA,CFLC,AHJT,AKSSL,CFLCyF,ALAE,EGAQnG,CIKP,AZIE,CYJDW,AZIEK,EUTA,CDtB2B,ACsB1BuI,AVSE,CAAC,OQTK,AIKA,CJLClJ,AIKA,MFLM,CAAC,AEKA,EAAE,EFLE,CFAC,AEAAuC,AHJlBd,CCImB0F,ADJlB,CCImB,CAAC,ADJlBzF,CCImBG,ADJlB,EGIoB,AHJlB,CGImBsH,EFAE,CAACN,GEAG,CAAC,GFAG,CRSG,CAAC,CQTD,KAAK,WIKW,EAAE;AH3BjC,ERyB1C,EEJA,AQCA,ADCD,AJAC,ECJG,APaA,CAAC,CYJGtI,ELTA,CAACkB,CCIO,ADJN,AFIE,CLSD,EObEA,CAAC,AFIEqE,EOKE,EAAEnG,EPLE,CAACiG,SAAS,CAACM,AOKR,CAACtG,OPLe,CAAC,GOKL,CPLS,CAAC,EAAE;EKAhD,EPFA,AFIA,AUHA,ALCA,ECHG,EKSIY,AZIA,EQTI,ADJJ,CJGR,AKCa,AGAb,AJJSkB,ADKT,CEDc,ADJJ,CPaG,CKTO,CEJPA,CAAC,CPaGL,CAAC,CYJC,EAAE1B,AZIF,CAAC,EAAE0B,CAAC,GAAGpB,GWTf,ERDEgE,CSMa,CAACpE,ETNV,EAAEqE,CGECnC,ENQoB,CGVjB,AHUkBX,EGVhB,AGEA,EAAE,ENQoB,EAAEC,CAAC,EAAE,EAAE;ICRrD,ASFA,AHFD,EJGI,AQCA,ALCA,AMIA,CAAC,CJLG,AIKF,ETNE,AQCA,ALCA,ANQIpB,CGVH,AFGT,AKDSyB,CAAC,EKDE,ANAIoE,CFDH7B,AQCA1B,ALCAR,IHFI,CGEC,ADDI,CMAH,ALCAiF,ADDIpB,CMAH6C,CRDC,CAAC,AHUI,CMRH,ANQIpH,CMRH4F,ANQI,CAAC,CGVH,AQCA,AXSI3F,CGVH,CECK,CAAC6E,CJErB,AUFkB,ALCA,CHFCjC,AGEAI,IHFI,AECI,CAACwB,ALSA,CMRH,ANQI,CWTH,CRDC,CAAC,AQCA,ALCA,CNQK,CGVH,AECI,ALSA,CMRH,ADDIF,SAAS,CAACQ,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EEJzE,EGEA,AEQD,EJLI,APEA,AKDA,CEDC,CLDG,AQCA,ELCA,ANQI,CUVZ,AJES3E,CHFG,AGEF,CHFGV,AKCF,APEA,CIFK,ALSAQ,CWTD,ALCFQ,EEDE,APEA,CAACQ,AIFI,CAAC8D,CCCH,CEDC,AFCAW,CHFG,AKCFzE,CLDG0B,CFGD,CKDC,ANQI,CMRHgD,CHFG,CKCD,AHAI,ALSA,CGVD/C,AKCFuE,CHAK,CKDrB,CJEmB,ANQI,CGVD,AGEFpE,ANQIxD,CGVD,CKCD,CRSK,CAACW,CMRH,CEDC,EFCE,GEDG,AFCA,CNQK,CQTH,ARSIvB,cAAc,CAACoB,CAAC,CAAC,CAAC,OWTK;EJLtE,AKUA,EXFD,AKDA,EHFI,AQCA,ADDA,CCCC,CHAG,ERSIE,EKTA,CGAC,AGAF,ADDA,ALCE,IGAIF,AGAF,EHAG,AHAC,EMAA,AXSI,CQTJ,AGACkB,AXSId,CQTJ,ARSK,EQTHJ,CRSMH,CQTL,CGAG,CAACuH,CHAD9I,ERSQ,GWTD,AXSK0B,CAAC,GWTF,AXSK,GAAI,CQTf,CAACrB,GGAa,EAAE,OHAH,CAACoB,MAAM,EAAEC,EAAC,AEDW,EFCT,EAAE;ADNzD,ENQA,AMjCwBY,ADgCxB,EHDD,AOAA,AEIC,IDHO,AJhCuB,CAACU,CCgCpBhD,ARSA4B,IKTI,CMAD,GNAKuE,EEhCuB,CAAC3B,APyCrB,CAACzC,CQTP,ARSQ,CQTP1B,AHAQ,CEhCsB,AFgCrB4F,CLSCzE,MAAM,EKTE,CAACC,CGAP,CAACC,EAAC,CAAC,CAACqH,AHAS,GAAG5C,MGAH,AHAS,CGARnG,AHASkG,MMAI,OHAR,CAAC7F,AHAiB,EAAE,UGAP,CAACqB,EAAC,CAAC,CAAC0G,SAAS,EAAE,GAAGS,IAAI,CAACjG,MAAM,CAACoG,MAAM,CAAC;ADhCnD,EJ+B/C,AOAA,ETEA,AKDA,AMGA,EDFG,IHAQhJ,ARSA4B,CYLZ,KPJoBuE,KLSG,CKTG,ALSF/E,CQTP,AHAU6E,CGAT5F,KIIT,EZKwB,CKTG,ALSF,CKTGsG,ALSF,EAAE,CQTP,ARSQ,CQTPjF,AHAU,ALSF,CKTG,CGAV,CAAC,CAACoG,CHAY,CAAC,OGAJ,CAACmB,OAAO,CAACjJ,aAAK,CAACK,YAAY,CAACqB,EAAC,CAAC,CAAC0G,SAAS,EAAE,CAAC;ELFrF,AOAA,ETEA,AUCD,ALFC,EMKQ,EJHD,ERSIxG,CCRZ,AKDA,KDAoB,KLSG,CAACI,QCRd,GKDG,CNSuB,GAAG3C,mBAAW,CAACG,SAAS;AGZ3D,AOAA,EP5B+B8C,AQ+B/B,AD9BmCE,IF+BhC,APCA,AKDA,AMGA,ETnCkC,CAACQ,CGgC/B,AMGA2G,AZMI/H,CMTHiB,ELCE,GIDS,CJCL,CAACF,AKDA,CI/B4B,AEkC3B,CTnCiC,AEgC1B,CFhC2B6B,AGgChC,ADAMoC,ALSF,CMTH,AMGA,AZMI3E,GGzC+B,CFiC/B,AKDA,AMGA,CNHCY,AMGAwE,CPHO,CAAC,EOGJ,CAACC,ENHE,CNSK,EKTI,CAAC,AOGN,AZMIjI,CYNHqF,KAAK,aZMS,CAACjF,UAAU;AGzCP,AOCX,EC8B3C,EHED,APCA,EKDI,AMGA,EZMI,EMTA,AMGAmK,CNHC9B,GDAO,MCAE,AMGA,CNHCjF,EMGE,IAAI,CNHC,AMGAwE,GNHG,CAAC,AMGA,CAACC,GNHG,CAACQ,EMGE,CAACnD,MNHM,AMGA,CNHC9B,OAAO;AKFnD,EHEA,APCA,AUjCoCL,ELiCrC,EMII,AZKA,IYLIqH,EPJI,IOIE,GDrC+B,ACqC5B,IAAI,CAAC3I,GAAG,CAAC4I,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEH,SAAS,EAAEC,UAAU,EAAE,KAAK,CAAC;ADrC3B,ELiC5C,EEDA,APCA,EWKG,AZMA,IKVI,AOIAG,AZMA,CKVC,ALUA7H,CKVC,ILUI,CYNC,AZMAC,GYNG,CZMC,CAAC,EYNE,CAACjB,GAAG,CAACJ,KAAK,CAAC,AZMA,CYNC,CZMC,CYNC,CAAC,EAAE,QZMO,KYNM,CAAC;IJNpD,APCA,AKAA,EMMG,EPJA,ALUI,EYNAG,CJLR,APCA,CWIU,AZME,CAACmB,EYNA,GZMK,CYND,AZMEC,CYNDnB,GAAG,AZME,CYNDC,AZMEnC,ICVhB0D,EWIoB,CJLjB,AIKkB,CXJjB,AWIkB,AZMH,CAACzD,CCVd,AWIkB,CAAC,EAAE,EZMD,CAACG,SYNY,CAAC,EZMD,CAAC;IMZ/C,EEEG,APCA,AIDC,AOKDyK,AZMA,CAAC,EAAE,CCVC,CAACnH,AKDT,CMKU,CJLC,AIKArB,AZMA,CAAC,CCVC,GAAGqB,GWIG,CXJC,AWIA,CAAC,CAAC,YNLN,6BEA+C;IAC/D,APCA,ADUA,EMXI,AMMAqH,EPPC,KCCM,AMMA,CAACC,GNNG,CAAChE,OMMO,CAAC2D,ENNE,OMMO,GAAC,CAAC,EAAEC,UAAU,CAAC;EJN/C,APCA,ADUA,EMVD,EDFK,AOQDG,OAAO,CAAC1I,QAAQ,CAAC,KAAK,CAAC;EJP1B,APCA,AKAA,ANUA,IYHGJ,EPTC,AOSC,CAAC+I,WAAW,CAACL,SAAS,GAAC,CAAC,EAAEC,UAAU,GAAC,GAAG,CAAC;AJR9C,APCA,ADUA,EQ/CmCpH,APDFF,ADEAA,EMoCjC,EDFI,AOUDrB,EX9CoC,AW8ClC,AZ5CkC,CCFC+B,AW8ClC3B,AZ5CkCkB,KAAK,GY4C/B,CAAC,CJ7C4B,CPDQ,CAACU,CW8CjC,CAAC,IX9CsC;AOCf,APDe,ADEb,IMoC7C,ADAD,EOUI,IAAI,CNRR,AMQSkD,MAAM,GAAG,IAAIZ,QNRV,OMQgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EPV9C,ICGG,AMQA,IAAI,CAACY,ENRE,IAAI,AMQA,CNRCT,AMQAsE,MNRM,KMQK,CAACL,SAAS,GAAC,CAAC,EAAEC,UAAU,GAAC,IAAI,CAAC;INPzD,ADJC,EOYG,IAAI,CAACzD,MAAM,CAAC9E,QAAQ,CAAC,CAAC,CAAC;ENR1B,EDJA,EOcG,IAAI4I,CPZR,IOYa,GAAG,IAAI,CAAC/I,GAAG,CAACJ,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CPZjBsB,KAAK,COYmB,CPZjB,AOYkB;INV5C,EDDG,AOYA,IAAI,CAACkH,QAAQ,GAAG,IAAI,CAACpI,GAAG,CAAC6G,IAAI,CAAC,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC5B,MAAM,CAACiC,SAAS,EAAE,E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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 130,\r\n    cardHeight: 205,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemy = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3,\r\n    enemyList: [],\r\n    enemyOnScene: []\r\n}\r\n\r\n","import { CST } from \"../CST\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\nlet graveYardArray;\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"background\", \"./assets/background.png\")\r\n    }\r\n\r\n    create() {\r\n        console.log(\"HERE\");\r\n        let bg = this.add.sprite(-110, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n        bg.alpha = 0.3;\r\n\r\n        let startX = 0;\r\n        let startY = 0;\r\n\r\n        \r\n        if (graveYardArray.length == 0 ) {\r\n            console.log(\"You have no discarded or used cards.\")\r\n        } else {\r\n            for (let i=0; i < graveYardArray.length; i++) {\r\n                graveYardArray[i].setVisible(true);\r\n                let discardCard = this.add.existing(graveYardArray[i]);\r\n                discardCard.x = startX + (i * 150);\r\n                discardCard.y = startY;\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth;\r\n                discardCard.displayHeight = gameOptions.cardHeight;\r\n            }\r\n        }\r\n\r\n        this.input.once(\"pointerdown\", function() {\r\n            this.scene.stop(CST.SCENES.DISCARD_PILE);\r\n        }, this);\r\n    }\r\n}","import { gameOptions } from \"../../config\";\r\n\r\n// Cards that appear in the player's hand\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(scene, x, y, sprite);\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.effect = effect;\r\n        this.cardType = cardType;\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth;\r\n        this.displayHeight = gameOptions.cardHeight;\r\n    }\r\n    \r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCost() {\r\n        return this.cost;\r\n    }\r\n\r\n    getEffect() {\r\n        return this.effect;\r\n    }\r\n\r\n    getType() {\r\n        return this.cardType;\r\n    }\r\n\r\n    setCost(cost) {\r\n        this.cost = cost;\r\n    }\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.setInteractive( { useHandCursor: true});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","import { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.setDepth(0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nexport default class Player extends Phaser.GameObjects.Sprite {\r\n\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.maxHealth = 50;\r\n        this.health = this.maxHealth;\r\n        this.maxActionPoints = 6;\r\n        this.actionPoints = this.maxActionPoints;\r\n        this.handArray = [];\r\n        this.deckArray = [];\r\n        this.deckTrackerArray = [];\r\n        this.graveYardArray = [];\r\n        this.spriteType = \"player\";\r\n        this.keepCards = [];\r\n        this.keepCardsLimit = 2;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    selectCardInHand(player) {\r\n        // disable drag first on all cards\r\n        this.disableDragOnCards();\r\n        \r\n        for (let cards of this.handArray) {\r\n            cards.on(\"pointerdown\", function(pointer) {\r\n                // this is referring to the clicked object rather than player now\r\n                if (player.keepCards.includes(this)) {\r\n                        // removes the card from list \r\n                    player.keepCards.splice(player.keepCards.indexOf(this), 1);\r\n                    this.clearTint();\r\n                } else {\r\n                    if (player.keepCards.length < player.keepCardsLimit) {\r\n                        player.keepCards.push(this);\r\n                        // add a visual effect when clicked\r\n                        this.setTint(0x999999);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    moveCardsBackInDeck(scene) {\r\n        // get indexes of cards not in this.keepCards List\r\n        let indexList = [];\r\n        for (let cards of this.handArray) {\r\n            if (!this.keepCards.includes(cards)) {\r\n                let index = this.handArray.indexOf(cards);\r\n                indexList.push(index);\r\n            }\r\n        }\r\n\r\n        // remove the indexes in reverse order not to mess up the loop\r\n        for (let index=indexList.length-1; index >= 0; index--) {\r\n            this.deckArray.push(this.handArray[indexList[index]]);\r\n            this.handArray[indexList[index]].setActive(false).setVisible(false);\r\n            this.handArray.splice(indexList[index], 1);\r\n        }\r\n\r\n        // remove tint of cards remaining in hand\r\n        for (let cards of this.handArray) {\r\n            cards.clearTint();\r\n        }\r\n\r\n        // set up the deck sprites and deckArray and organise the cards on screen\r\n        this.shuffle();\r\n        this.deckSetUp(scene);\r\n        scene.arrangeCardsInCenter(this.handArray);\r\n        this.enableDragOnCards();\r\n\r\n    }\r\n\r\n    disableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = false;\r\n        }\r\n    }\r\n\r\n    enableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = true;\r\n        }\r\n    }\r\n    \r\n    deckSetUp(scene) {\r\n        let x = scene.game.config.width / 25;\r\n        let y = scene.game.config.height / 1.24;\r\n        for (let i=0; i < this.deckArray.length; i++) {\r\n            let cardBack = scene.add.sprite(x,\r\n            y, 'cardBack');\r\n            cardBack.setOrigin(0.5, 1);\r\n            cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n            cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n            \r\n            this.deckTrackerArray.push(cardBack);\r\n            x += 4;\r\n        }\r\n    }\r\n    \r\n    // implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\n    shuffle() {\r\n        for (let i = this.deckArray.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i+1));\r\n            [this.deckArray[i], this.deckArray[j]] = [this.deckArray[j], this.deckArray[i]]\r\n        }\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health += health;\r\n\r\n        // setting it back to max health if going over\r\n        if (this.health > this.maxHealth) {\r\n            this.health = this.maxHealth;\r\n        }\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints += actionPoints;\r\n\r\n        // setting it back to max AP if going over\r\n        if (this.actionPoints > this.maxActionPoints) {\r\n            this.actionPoints = this.maxActionPoints\r\n        }\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n}","export default class Enemy extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n        this.spriteType = \"enemy\";\r\n        this.setInteractive();\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    action(scene) {\r\n        scene.player.health = scene.player.getHealth() - 5;\r\n    }\r\n\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n}","export class Tooltip extends Phaser.GameObjects.Text {\r\n    constructor(scene, x, y, label) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 20,\r\n            y: 20\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\r\n        scene.add.existing(this);\r\n        this.visible = false;\r\n        this.setDepth(2);\r\n    }\r\n\r\n    showTooltip() {\r\n        this.visible = true;\r\n    }\r\n\r\n    removeTooltip() {\r\n        this.visible = false;\r\n    }\r\n    \r\n    setLabelCoordinates(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class DamageCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (this.effect.target == \"single\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\r\n                    this.setInteractive({useHandCursor: true});\r\n                    this.setHealth(this.getHealth() - card.effect.damage);\r\n                    this.heartText.setText(this.getHealth());\r\n\r\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\r\n                        enemy.enemyOnScene[j].input.enabled = false;\r\n                    }\r\n                })\r\n            }\r\n        } else if (this.effect.target == \"all\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\r\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\r\n            }\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        return \"Damage: Inflicted damage is on the enemy's health.\";\r\n    }\r\n    \r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ComboCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        console.log(this);   \r\n    }\r\n\r\n    getLabel() {\r\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\r\n    }\r\n    \r\n   \r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ReloadCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // nned to account for next turn side effects\r\n    // such as losing action points next turn\r\n    activateCard(scene) {\r\n        if (this.effect.sideEffects !== null) {\r\n            // removing health if its overloading card\r\n            scene.player.setHealth(this.effect.sideEffects);\r\n            scene.heartext.setText(scene.player.health);\r\n            // add function here to kill the player if health goes to 0\r\n        }\r\n\r\n        scene.player.setActionPoints(this.effect.amount);\r\n    }\r\n\r\n    getLabel() {\r\n        return \"AP: \\nAction Points are used when activating a card.\"\r\n    }\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class HealingCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        if (this.effect.target == \"health\") {\r\n            scene.player.setHealth(this.effect.amount);\r\n            scene.heartext.setText(scene.player.health);\r\n        }\r\n        // include bottom when armour is introduced\r\n        // } else (this.effect.target == \"armour\") {\r\n        //     scene.player.setArmour(this.effect.amount);\r\n        //     scene.armourText.setText(scene.player.armour);\r\n        // }\r\n    }\r\n\r\n    getLabel() {\r\n        if (this.effect.target == \"armour\") {\r\n            return \"Armour: \\nRemoved before health when receiving damage.\";\r\n        } else if (this.effect.target == \"health\") {\r\n            return \"Health: \\nIf this reaches zero, you die.\"\r\n        }\r\n    }    \r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/button.js';\r\nimport { gameOptions, enemy} from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/zone.js\";\r\nimport Player from \"../helpers/classes/player.js\";\r\nimport Enemy from \"../helpers/classes/enemy.js\";\r\nimport DamageCard from \"../helpers/classes/cards/damageCard.js\";\r\nimport ComboCard from \"../helpers/classes/cards/comboCard.js\";\r\nimport ReloadCard from \"../helpers/classes/cards/reloadCard.js\";\r\nimport HealingCard from \"../helpers/classes/cards/healingCard.js\";\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        // data returns a list of preloaded cards\r\n        let cards = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemy.spriteWidth,\r\n            frameHeight: enemy.spriteHeight\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        this.player = new Player(this, 0, 0, \"guy\");\r\n        this.player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        this.player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        this.heartext = this.add.text(0,0, this.player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        this.heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, this.heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        this.actiontext = this.add.text(0,0, this.player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        this.actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, this.actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        // set it so a rectangular zone appear with overflow\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.launch(CST.SCENES.DISCARD_PILE, this.player.graveYardArray);\r\n        }, this);\r\n        \r\n        // loads all the different types of cards\r\n        this.loadCards();\r\n        \r\n        this.endTurnButton = new Button(gameWidth, gameHeight/2, \"End Turn\", this, this.endTurn.bind(this, this.player, this.endTurnButton), '#202529');\r\n        this.keepCardButton = new Button(gameWidth, gameHeight/2, \"Keep Cards\", this, this.keepCard.bind(this, this.player, this.keepCardButton), '#202529');\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 200, 200, 500, 500);\r\n\r\n        // shuffles the deck and sets up the visual for the deck cards\r\n        this.player.shuffle();\r\n        this.player.deckSetUp(this);\r\n        this.drawCard(gameOptions.startCards);\r\n\r\n        // spawning enemies according to spritesheet randomly\r\n        for (let i=0; i < enemy.numberOfSprites; i++) {\r\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemy.enemyList.push(enemySprite);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n\r\n        // card event listeners for pointer interactions\r\n        this.input.on('dragstart', function (pointer, gameObject) {\r\n            gameObject.tooltip.removeTooltip();\r\n            this.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            this.tweens.add({\r\n                targets: this.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = this.player.handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                this.player.handArray.splice(index, 1);\r\n            }\r\n\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n\r\n        }, this);\r\n\r\n        this.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        this.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                let yOffSet = 50;\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    y: gameObject.startPosition.y - yOffSet,\r\n                    displayWidth: gameOptions.cardWidth * 2,\r\n                    displayHeight: gameOptions.cardHeight * 2,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.showTooltip();\r\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\r\n\r\n            }\r\n        }, this);\r\n\r\n        // hover out listener\r\n        this.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    y: gameObject.startPosition.y,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.removeTooltip();\r\n            }\r\n       }, this);\r\n\r\n        this.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        this.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        this.input.on('drop', (pointer, gameObject, dropZone) => {\r\n            if (this.player.getActionPoints() >= gameObject.getCost()) {\r\n                gameObject.input.enabled = false;\r\n                gameObject.tooltip.removeTooltip();\r\n        \r\n                // setting card in the middle \r\n                gameObject.displayHeight = gameOptions.cardHeight;\r\n                gameObject.displayWidth = gameOptions.cardWidth;\r\n                gameObject.x = dropZone.x;\r\n                gameObject.y = dropZone.y + dropZone.y / 3;\r\n                \r\n                this.player.graveYardArray.push(gameObject);\r\n                gameObject.activateCard(this);\r\n\r\n                // remove the card from the scene after 500ms\r\n                setTimeout(function() { \r\n                    gameObject.setActive(false).setVisible(false); \r\n                }, 500);\r\n        \r\n                this.player.actionPoints = this.player.getActionPoints() - gameObject.getCost();\r\n                this.actiontext.text = this.player.getActionPoints();\r\n                dropZone.renderNormalOutline(this);\r\n        \r\n                this.cameras.main.shake(100, 0.02);\r\n            } else {\r\n                this.dragend(pointer, gameObject, false);\r\n            }\r\n        });\r\n\r\n        this.input.on(\"dragend\", this.dragend, this);\r\n    }\r\n\r\n    dragend(pointer, gameObject, dropped) {\r\n        \r\n        if (!dropped) {\r\n            this.player.handArray.push(gameObject);\r\n            gameObject.displayHeight = gameOptions.cardHeight;\r\n            gameObject.displayWidth = gameOptions.cardWidth;\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    loadCards() {\r\n        // damage cards\r\n        let cannon = new DamageCard(\"cannon\", 1, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\r\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\r\n\r\n        // combo cards\r\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\r\n        \r\n        // reload cards\r\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\r\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -15}, this, 0, 0, \"overload\");\r\n\r\n        // healing cards\r\n        let medkit = new HealingCard(\"medkit\", 0, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\r\n        let kevlar = new HealingCard(\"kevlar\", 1, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\r\n\r\n        this.player.deckArray.push(cannon);\r\n        this.player.deckArray.push(grenade);\r\n        this.player.deckArray.push(headshot)\r\n        this.player.deckArray.push(reload);\r\n        this.player.deckArray.push(overload);\r\n        this.player.deckArray.push(medkit);\r\n        this.player.deckArray.push(kevlar);\r\n    }\r\n    \r\n\r\n    // draw an amount of cards\r\n    drawCard(amountOfCards) {\r\n        for (let i=0; i < amountOfCards; i++) {\r\n            let lastCard = this.player.deckTrackerArray.pop();\r\n            lastCard.destroy();\r\n\r\n            let drawCard = this.player.deckArray.pop();\r\n            this.player.handArray.push(drawCard);\r\n            drawCard.cardInHand(this);\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    arrangeCardsInCenter(handArray) {\r\n        // arranges for the cards to be organised around the bottom middle of the screen\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            // cards remember their original coordinates for events that make the cards leave and renter the hand\r\n            card.startPosition = {\r\n                x: card.x,\r\n                y: card.y,\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(2);\r\n        }\r\n    }\r\n\r\n\r\n    // start keep cards and make keep cards button appear\r\n    keepCard(player) {\r\n        this.keepCardButton.visible = false;\r\n        this.endTurnButton.visible = true;\r\n        this.player.selectCardInHand(player);\r\n    }\r\n    \r\n    \r\n    // ends the player's turn\r\n    endTurn() {\r\n        this.keepCardButton.visible = true;\r\n        this.endTurnButton.visible = false;\r\n        this.player.moveCardsBackInDeck(this);\r\n        \r\n        // simulate enemies attacking\r\n        for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n            enemy.enemyOnScene[i].action(this);\r\n        }\r\n        this.heartext.text = this.player.getHealth();\r\n\r\n        // automatic drawing goes here\r\n    }\r\n    \r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n            randomEnemy.setDepth(1);\r\n\r\n            enemy.enemyOnScene.push(randomEnemy);\r\n        }\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport HandCard from \"../helpers/classes/cards/handCard\";\r\nimport { BattleScene } from \"./battleScene\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/Overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\r\n    }\r\n\r\n    create() {\r\n        this.scene.add(CST.SCENES.BATTLE, BattleScene, false);\r\n        this.scene.start(CST.SCENES.BATTLE);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport { LoadScene } from \"./scenes/loadScene\";\r\nimport {BattleScene} from \"/src/scenes/battleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 1000,\r\n    height: 800,\r\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\r\n    scene: [\r\n        LoadScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}