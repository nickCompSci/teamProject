{"version":3,"sources":["src/CST.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/font.js","src/helpers/classes/Button.js","src/helpers/classes/cards/HandCard.js","src/helpers/classes/Deck.js","src/helpers/classes/Zone.js","src/helpers/classes/Characters.js","src/helpers/classes/Player.js","src/helpers/classes/Enemy.js","src/helpers/classes/InteractHandler.js","src/scenes/BattleScene.js","src/index.js"],"names":["CST","SCENES","BATTLE","DISCARD_PILE","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemySprite","spriteWidth","spriteHeight","numberOfSprites","graveYardArray","DiscardPileScene","key","data","load","spritesheet","frameWidth","frameHeight","image","bg","add","sprite","setOrigin","setScale","alpha","startX","startY","length","console","log","i","setVisible","discardCard","existing","x","y","displayWidth","displayHeight","input","once","scene","start","Phaser","Scene","loadFont","name","url","newFont","FontFace","then","loaded","document","fonts","catch","error","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","on","setInteractive","useHandCursor","newX","newY","GameObjects","Text","HandCard","frame","cardInHand","visible","setDraggable","Sprite","handArray","deckArray","deckTrackerArray","deckSetUp","array","arrayTracker","game","config","width","height","cardBack","push","shuffle","j","Math","floor","random","Zone","setRectangleDropZone","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Character","health","Player","actionPoints","Enemy","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","min","max","InteractHandler","pointer","gameObject","tweens","targets","angle","duration","background","index","indexOf","splice","arrangeCardsInCenter","dragX","dragY","type","includes","depth","startPosition","dropZone","renderActiveOutline","enabled","setTimeout","setActive","cameras","main","shake","dropped","enemyArray","BattleScene","gameWidth","gameHeight","interactiveHandler","hud_bg","tileSprite","card_bg","setPosition","player","heart","heartext","getHealth","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","card","card1","endTurnButton","endTurn","bind","changeCursor","enemy","spawnEnemyOnScene","bottomOfScreen","screenCenterX","yDelta","cardX","setDepth","lastCard","pop","destroy","drawCard","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","AUTO","Game"],"mappings":";;;;;;AAAO,AIAP,AMAA,ACAA,AFAA,AFAA,AFAA,AJAO,AEAA,AUCP,ADDA,AVAA,IFAaA,ACAAI,GDAG,EGAAiD,CHAG,KCAK,EEAA,CFAG,AEAFC,IAAI,EAAEC,GAAG,EAAE;ACAF,AMAG,ACCrC,AFDqC,AFCrC,AFD2C,AQE3C,ADDA,AVAA,EFAItD,ACAAI,AEAA,IFAI,AEAAmD,EHAE,ACAA,CAAC,CDAC,GGAG,GAAG,IAAIC,QAAQ,CAACH,IAAI,EAAE,aAAa,CAAC;ACDjB,AMAG,ACCG,AFDH,AFCG,AFDG,AQA3C,ADEA,AVDgD,EDC5ChD,AEAAkD,EHAItD,KGAG,CHAG,AGAFqB,EHAI,ACAF,EAAE,AEAA,CFAC,CEAC,CAACmC,GHAK,CGAD,CAAC,UAAUC,MAAM,EAAE;ACFR,AEAlC,AIAqC,ACCG,AFDH,AFCG,AFDG,AOG3C,AVFgD,EDE5CpD,EDAIJ,AGAAyD,OFAK,CEAG,CFAD,AEAEC,GHAG,ACAF,EDAI,AGAA,CAAChC,GAAG,CAAC8B,MAAM,CAAC;ACHA,AEElC,AIFqC,ACCG,AFDH,AFCG,AFDG,AQI3C,ADAA,AVHgD,EFG5C,ACAAnD,AEAA,CAAC,CGFD6E,AHEE,CAACvB,KAAK,CAAC,CFAC,CKFD,CLEG,EKFA,CLEG,CKFD,GHEKC,KAAK,EAAE;AHC9B,AILkC,AEEf,AIFkB,ACCG,AFDH,AFCG,AFDG,AOK3C,AVJgD,CFI/C,CCAGtD,EEAI,OAAOsD,GFAC,EAAE,AEAE,GFAC;ADApB,AILiC,AEGlC,AIHqC,ACCG,AFDH,AFCG,AFDG,AQMpC,ADAP,AVLgD,EDK5CrD,AEAA,CAAC,CGHD4E,AHGE,AUAKM,MAAM,CZAJ,EKHA,ALGE,AYAK,CZAJ,EKHA,EAAE;AFHgB,AEGf,AIHkB,ACCG,AFDH,AFCG,AFDG,AFO3C,ASAA,AVNgD,EDM5CjF,AYAAkI,IAAI,EAAE1F,KZAK,CYAC,CZAC,AYAAmJ,IAAI;ATPa,AEIlC,AIJqC,ACCG,AFDH,AFCG,AFDG,AJQ3C,AWAA,AVPgD,CDO/C,CYAGzG,EPJAN,AKDiBwC,GEKZ,EAAE,GAAG,OFLsB,CLChB,GAAG,EAAE,uBKArB,yBAAY9E,KAAK,EAAE;APJW,AEIR,AIJW,ADAA,AFCG,AFDG,AJQ1C,AWAmE,AVPpB,ESGzB,AEKnB6C,MAAM,EAAE,GAAG;ATTmB,AEKlC,AILqC,ADAA,AFCG,AFDG,AJUpC,AWF6D,AVPpB,ESKxC7C,AEIJA,EPLA9B,ALKSP,GUJA,AEIJ,CFJKmC,CEIH,CACH4G,GFLW,CAACnF,EAAE,CAAC,CLDL,GAAG,CLKU,CKLR,ELKW,GUJA,EAAE,IEKjB,EACXpD,IFNsC4G,OAAO,EAAEC,UAAU,EAAE,SEM3C;ATZU,AEKV,AILa,ADAA,AFCG,AFDG,AQc3C,ADNoE,AVPpB,CWa/C,CZHGpH,EUJQoC,KAAK,CAACiF,CVIL,EAAE,GUJS,AVIN,CUJOrG,GAAG,CAAC;APPK,AEOlC,AIPqC,ADAA,AFCG,AFDG,AQczC,ADNkE,AVPpB,EDW5Cf,IUJYqH,GLDP3C,GLKK,CUJS,CVIP,CUJSyC,GLDP,CAAChF,KAAK,CKCW,CLDTwC,KAAK,EAAEC,YAAY,EAAE;AFPb,AMAG,ADAA,AFCG,AFDG,AJa3C,AYGA,ADRoE,AVPpB,CDY/C,CKLG,EERiBuB,AKgBjBtB,EPRIhD,AKCQyF,CLDP,COQD,EPRInF,CKCS,AEOV,ELhBmB,AGSP,CAAC,CLDP,AOQFE,CPRGwC,IAAI,CAACC,AOQF,CAAC2G,IAAI,CPRG,AOQF3G,CPRGC,KAAK,AOQF,CAAC,EPRI,EAAE;AFPxC,AMDqC,ADAA,AFCG,AFDG,AJa1C,AWLmE,AVPpB,EMDlB,AFS1B,EDPiBd,ECObnC,AKCQD,CLDP,AKCQ,EAAEqF,CLDP/E,EDPiB,GCOZ,CAAC0C,AKCQ,CAAChD,CAAC,ELDN,CAACiD,MAAM,CAACE,MAAM,GAAG,IAAI;AFR3C,AMDqC,ADAA,AFCG,ANcjC,AWP6D,AVLpE,EMH8B,AFU1B,ADRyB,EDCR9B,AMDAqD,ADAAF,AFCAb,ANYRvF,ACZTI,ESQYyB,CLDP,AKCQ,CJRQ,CGDC,ACSPoF,CPRQ,AKDA,CHQdzF,CAAC,GAAC,ALKS,CKLR,AKCU,CAACK,CLDTL,AKCU,AVID,ACZT,CIOC,GAAGkD,KAAK,CAACrD,MAAM,EAAEG,CAAC,EAAE,EAAE;AMF2B,AVLjD,EEAQ,AIFvB,AECsB,ADAC,AFCF,AFDI,AJczBvB,EKLI,AJNKI,ESOGiH,ELDJtC,KLKG,CUJS,CVIP,CKLG,AKCM,GLDH9C,ALKF,CCXQ,CMJbA,GFUY,CAACpB,CEVR,EAAEc,AFUS,CEVR,AFUSb,EEVPc,CAAC,EAAEd,CFUU,CAACa,CAAC,EACjCC,CEX2B,AFW1B,EEX4BoC,AFW1B,KEX+B,EAAE,GFWvB,CAAC;AMJ8C,ERLzC,AMDD,ADAC,AFCF,AFArB,AJcA/D,ACZyB,EMJe,AFYpC8E,AKAI,CAAC,CAAC,MLAE,CAAChE,CLID,EAAE,GAAG,CIdLkB,ECUU,CAAC,EDVN,CCUS,CDVPN,CCUS,ADVR,CCUS,CAAC,ADVRC,CAAC,EAAEd,MAAM,EAAEkD,KAAK,EAAE;AOKwB,ERHhE,AMFA,ADCA,AFAA,ANcA9D,ACbyB,EMJe,AFapC6E,AKAI9C,ANXgC,KMW3B,CAACiF,ELAF,CAACrF,GKAO,AJVRI,CGDAA,ACWSpB,AVIN,CGbHc,AKDAM,CLCC,AHaI,CUJO,CPTTL,AOSU,AJVR,CHCD,AMFC,CDCA,AFAED,CHCDsB,AMFCtB,AHCC,CDUK,AIXL,ADCDA,CAAC,AFAEC,CGDAA,AHCC,CDUKhC,AIXL,ADCDgC,CLCC,AKDA,AFAEiD,CGDA/D,CNEAmB,AKDAnB,GFAK,EHCA,AMFC,AHCCgE,CEAD,CLCC5B,AMFCc,CDCA3E,GFAK,CGDA,ADCD,CFAG,CGDA,ADCD,CLCC,EAAE8D,MESI,CAACtD,CFTG,EAAE,MESI,GAAG,CAAC;ALKhE,AWXoE,CXWnE,CCbG,EEDoD,AIHhD,AFaAkF,AIZoC,ADCD,AFAC,AFDA,EMY5BoC,MLAA,CAACrF,AKAM,EAAEG,KAAK,CAACqF,KLAD,GAAG1H,CEbnBqC,ANII,CSSuB,IHbtB,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM,EAAEkD,IFagB,CEbX,AFaYlE,UAAU,GAAG,CAAC;ALIjE,AWXmE,IRHZ,AIFhD,AFcA4E,AIdoC,ADCD,AFAC,AFApC,AHEU,ESUFzD,IHbHiF,CGaQ,EAAE,GHbJ,AFcC,AKDM,CLCLlB,EEdC,EAAE,AFcC,CAACD,QAAQ,ADbpB9C,CCaqB,IDbhB,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM,EAAEkD,KAAK;AOI4B,IRF7D,AIHkB,AFejBrC,AIdA,ADCA,AFAA,AFAAM,AHCU,CIYT,CKDOoF,GLCH,ADbA,CCaC,ADbAxG,GAAG,CMYO,ANZNa,EMYQ,MNZA,OHEZ,CEDDO,AMFCA,ADCAA,CFAAA,IHCI,AMFC,ADCA,CFAA,CHCCN,AMFCA,ADCAA,CLCA,AMFC,ADCA,AFADA,CAAC,CHCCC,AMFCA,ADCAA,CLCA,AMFC,ADCA,AFADA,CAAC,CHCCqB,AMFCnC,ADCAA,CFAA+D,IHCI,CMFE,ADCA,AFAD,EGDGb,AHCDc,EFAF,GKDQ,CHCA,GAAES,oBAAoB,CAAC5D,CAAC,EAAEC,CAAC,CAAC;AKGA,EJJhE,AFeA,EFZI,AMFA,ACaI,AFZJ,AFAA,AFAA,CMYK,CAAC,ATVFvB,GAAG,CEDF+C,AMFApC,ADCAoF,AFAArF,AFAAkD,CHEIjF,MEDG,CMFC,CAAC,AHCA,ALEF,CEDG,AMFA,AHCA,AFAA,AHEFC,CQHG,AHCA,AFAAgD,CIAC,CFAC,CAAC,CEAC,AFAA,CEAC,AJAA,AHEF,CGFG,AHEF9C;AIY5B,AMVA,EJNK,EEEG,ACcI,AFbJ,AFAA8C,AFDuB,AOI3ByG,AVDI,CAAC,CEDG/G,CAAC,COYG4F,CPZD,AGDF,CHCG,AMFHrB,ADCA7G,AFACwB,GIaO,AJbJ,CEAA,AFACa,AKGJ,EFJK,ACcK2C,CFbJhF,AGGH,EFJK,AEIH,EHHK,CFAE,GGDCiH,MCcM,CAACkB,OAAO,CDdC,ACcAP,CDdC,EAAE,EAAE,EAAE,CAAC,ECcE,CAAC,EJbrB;ACH3B,AIMe,EJVmB9E,AHOnC,AHGA,EQFI,ACaI,AFbJF,AFAA,AKIK0G,ERHD/G,CAAC,CITgC,AGqB7B2F,CPZD,AIT+B1D,ACQjC,CCAA0C,ADAC1F,AFAD2E,GIaQ,AFbJ,CAAC9D,CGIM,GDSE,CDbJ,ACaK,CHrB8B,AGqB7B,AJbL,CCRmC0C,CEQjCnC,ACaK,AFbJ,CFAA,ICRsC,AEQlC,CAACpB,GAAG,AHAA,CGAC2F,AHAA,CAAC,GGAG,CAACvE,KAAK,CAAC0C,IAAI,CAACC,KDAnB,CCAyB,CAACC,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAKqB,MAAM,EAAE;AFRtB,AFsBhE,EDfK,AOKmB,AVFnB,EEAG,AKFyB,AFCzB,CHCC,CMF8EO,ACcvEpC,IJbHoB,CGD+E,EAAE,KAAK,EHC5E,CIaE,CAACgC,CJbA,KIaM,CAACF,EJbC,CAAC,CAAC,CIaE,EAAE,CAAC,CAAC;ALC1C,EGdI,AGGoB,ERDhB,AOYI,ANhBP,AHGA,EQFgGb,GJe5FzB,CFZIlE,IMHgG,EJe7F,AIf+F,CJe9F0D,EFZK,CAAC,CAAC,CEYF,CFZI,CEYF,EFZK,CAAC;EEa1B,AGfC,AGID,ERDI,AMJ6G,ACiBzGxC,AJdJ,AFJH,AHGA,CQFiH,CAAC,CJgB9G,EKCQ,CPbJoB,AOaKqE,AJdLhC,CDaAnE,ADfT,AHGA,CIYU,GAAGkD,KFZM,AEYD,CFZE,AEYDrD,ACbC,GAAGa,CKET,AVDT3B,EEAoB8C,AEYA,ECbG,ALCnB,CIYmB,AKCM,AJdLvC,CDaA,AKCMwD,ANhBxBpC,AHGA,EIYoBV,ACbC,CHCA,AEYA,ACbCoE,CHCAhE,CAAC,ACHlB,CCemB,CFZC,AEYA,ADflB,ECeoBJ,CAAC,CCbE,CDaA,CFZA6B,AGDE,CDaA,CKCC,CAAC,IPbG,CAACxB,CAAC,CAAC;EOe/C,CAAC,CPdD,AEYA,AIhBA,ADAH,AFGG,AKCU,CDcPK,CNjBH,AHGA9B,EIYI+E,CAAC,CFZA5B,AMJAiD,ACkBG,AJfHX,AFFD,CMiBK,ANjBJ1B,CCeGiB,IAAI,CAACC,CFZA,ACHD,CDGE,AMJA,CAACrE,ARID,CGHC,CCeG,ADfF,CCeGoE,AJZF7E,GGHG,CCeG,ADfF4D,AHGA,CIYGmB,CIhBA,AHGA,CGHC,AHGApD,CGHC,EAAE,CJgBE,AIhBD,ALCD,CKDE,AHGA,CDaE,ACbD,IDaKV,CAAC,GAAC,CAAC,CAAC,CAAC;EKIzCU,ELJ0C,AId1CA,ADFH,AFGmC,AKCtB,AVCd,EEDoBsB,ACFhB,CMkBK,CAACxB,CDlBD,CAAClB,ALAF,CIAR,AJAS4C,EKAI,ACkBE,CDlBD/B,ACkBE8B,CLHW,CAACiB,AKGV,CAAC,IPhBgB,AEaF,CAACS,AIfZ,CNEe/B,AEaF,AKGV,CLHW,CKGT,ANlBJ,CCeesB,CDfb,EOGf,ENYiC,CAAClD,AGfhC,CHeiC,CAAC,CAAC,AKGXyF,OAAO,EAAEC,SDlBjB,CCkB2B,EAAEU,KAAK,EAAEC,KAAK,EAAE;EJfvE,ALAC,EED4C,AEaxCnD,AIbD,ACiBIwC,CPjBsC,CAAC,AKD3C,AJAAhF,AOGI5B,GNWE,AMXC,CNWAkB,AIbFoF,CJaG,ADdH,AOGI3H,CNWA,ADdH+C,CIAC,CEkBO,CAACJ,CAAC,CFlBL,AJAA,CIACuE,AJAA/B,CMkBOwD,ACfP,CAAC1I,IDeW,AFlBN,EGGC,CAACC,EFFI,CAAC+C,ALDD,CAAC,IKCK,ALDD,CKCE,ALDD;EEEjC,EHAG,AEYWwC,AIZX,ACiBIwC,AFlBR,AGGI,AVFH,CUEI,CPHD,GCagB,CFZXzD,AEYY0B,AIZZ0B,ALDD,CCac,ADbb7F,CDCE,AEYY,CFZX,COiBM,CAACa,CAAC,GAAGgG,CDjBJ,ALDD,CAAC,CKCE,ECiBO,ANlBN,EDCG,ACDD,CAAC,CDCE,ACDD;ECc1B,AKKI,AFnBH,AGID,CDeK,CAAC,AJlBL,ALAA,EEA0B,KFE3B,EEFiC1E,QAAQ,EAAE,OFEjC;AIYd,EMXK,ERH0C,AMEvC,ADHH,AFCA,EHA2C,ACCxC,AHEA,IAAI,CKDR,ALCS3C,IAAI,CAACC,WAAW,CAAC,OAAO,EAAE,KKDb,6BLC+C,EAAE;ESiBnE,EPnBAyB,AMCA,ADHH,AGIA,ELAG,AFDA,EHEIxB,CEHC,CAACI,AGEF,AFDA,CIDR,AFES6E,AFDA7D,EDDI,CAACH,IFGI,EAAEtC,EEHE,AGEF,CAACyG,AFDA,GAAGzG,EECE,EEFhB8G,AFEkB,MEFZ,EAAE,CPGa,CAAC3G,KGFG,CAACA,GHEK,IEHb,ECCiB,GAAG,CAAC;EKCjD,ACkBI0C,EPpByB,AQE5B,EHDG,AFEA,AFDA,CMkBK,CAACF,AThBFrB,EOHA,AFEA,AFDA,CIDCwF,AFEAR,AFDA5D,AOET,EDgBe,CAAC0B,EAAE,CAAC,AFnBJ,EPGI,COHD0C,CPGG9G,CKDD,CAAC0G,CFDC,EIDE,CJCC1G,GOEf,ELDoB,CIiBK,AJjBJ,CAAC,CIiBK,CJjBH,IAAI,ALCN,CKDOoG,ALCNhG,ISgBawH,CNlBV,CAACxH,IECY,CIiBI,AJjBH,EIiBKyH,GNlBR,GAAG,CAAC,GMkBc,EAAE;EPnBnE,EOoBQ,AFnBR,AJCA,EECI,AKCA,AVAA,CAAC,CSgBOA,AThBN,EKDE,AKCA,CLDCvB,AKCAnF,IAAI,CAACI,EDgBQ,CAACkH,EChBJ,CLDC,AKCA,CDgBO,AJjBN9B,IKCI,CDgBO,CChBL,ILDI,CAAC,EIiBQ,EJjBJ,CAACpE,CIiBO0C,AJjBN,GAAG,IAAI,CAACtC,EKCE,CAAC,ELDE,CAACiE,CIiBC,CAAC8B,KJjBK,CAACjD,EIiBE,CAACoC,EJjBE,GAAG,CAAC,EAAE,EIiBE,CAAC,CJjBC,CIiBC,AJjBArF,CAAC,GAAG,IAAI,CAACG,KAAK,CAACiE,OAAO,CAAClB,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC/C,KAAK,CAACiE,OAAO,CAACnB,KAAK,EAAE,IAAI,CAAC9C,KAAK,CAACiE,OAAO,CAAClB,MAAM,CAAC;EHHlK,AMGD,ADFC,AJCA,EEED,EIiBY7C,AChBR,AVAA,IUAI,AVAA,CSgBS,AChBR1B,AVAAA,CSgBS2G,GChBL,AVAA,CUACvG,AVAAA,ESgBU,CAACE,EChBN,AVAA,CSgBS,AChBR,AVAA,CSgBS,WChBG,AVAA,EUAE,AVAA,yBUAyB,AVAA,CUAC,AVAA;EQD5D,AHAC,AFFA,EDFA,AKCA,APKD,EUAI,EDgBYsG,EChBR,CAAC5G,IDgBc,AChBV,CAACI,CDgBWsG,IChBN,CAAC,KDgBe,QChBF,EAAE,0BAA0B,CAAC;APJ7D,EKED,ALlBkC9E,AHoBjC,EENA,AKCA,AFGA,EKGG,EDgBYiF,ANrCwB,CAACvD,COqBjC,CRLR,AKCA,AGIStD,EDgBY,EAAE,AChBV,CDgBW,AChBVI,IPrBsC,CAACyD,AOqBlC,CAAC,KPrBuC,AOqBlC,EAAE,MRLZ,GKCG,kCGIoD,CAAC;APrBZ,IKkB3D,AHAC,ALEA,EEHG,AKCA,AGIA,EDgBYvC,EPrBR,AQKA,CRLC4B,AGGT,AKESlD,EHJE,EGIE,CAACI,CHJC,CAACyF,EEoBY,CChBT,CDgBWhH,AChBV,GRLG,CAAC,GQKG,CHJC,CGIC,UDgBY,CAACG,AJlBpB,SIkB6B,QChBM,CAAC;IFJ1D,ADCA,APCC,EKCG,AKEA,ERNsBmE,AOsBV5B,EJlBR,AKEA,CFJR,AHES4D,AKEAnF,AVDT,IUCa,CAACC,KRNyB,AOsBV,CJlBT,CHJqB,AOsBVpB,AJlBVyG,IKEI,CLFC,AKEA,CVDjB,CKDmB,KKEK,CFJjBgB,CEImB,EFJhB,EAAEC,CCoBqB,CAACtH,CDpBnB,EAAE,OCoB2B,kBChBgB,EAAE;EHJtE,ILF6C,AMG1C,AHEA,ALCA,CEN2C,CAAC,AOuBhCuI,AChBRtH,ELFA,ALCAG,CKDC8E,CLCC,CQHCP,ACoBU,EAAE,ATjBV,EQHE,CAACC,ACoBU,AChBR,CVDD,CUCGhG,AVDFyB,EKDE,CGFC,AHEAiF,ALCA,CQHCX,ARGArE,IQHI,CAACuE,CRGC,CAAC,CKDC,ALCA,CKDC,CAAC,CGFC,ARGA,CKDC,CGFC,ARGA,CAAC,CUCL,CLFO,AKEN9F,AVDM,CQHCuH,AHEArB,GGFG,GAAGoB,EEIJ,CFJO,CHEC,CAAC,ALCA,CQHC,ARGA,CQHC,ARGA9F,CQHC,CAAC,GAAG8F,GAAG,CRGC,CAAC,CAAC,EAAC,CAAC,CAAC;IELlE,AMGA,ADFC,EFIG,ALCAjG,ESiBYyG,AChBR3G,AVDF,CAACM,CKDC,CAAC0E,KIkBe,CTjBT,CSiBW,ATjBV,CUCG,AVDF,CAAC,CUCGtG,CLFD,CAAC2G,UAAU,CAAC,IAAI,CAACpE,CAAC,AKEN,CAACnC,ELFQ,IAAI,CAACuC,KAAK,CAACiE,OAAO,CAACnB,KAAK,GAAG,CAAC,EAAE,IAAI,CAACjD,CAAC,GAAG,IAAI,CAACG,KAAK,CAACiE,OAAO,CAAClB,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC/C,KAAK,CAACiE,OAAO,CAACnB,KAAK,EAAE,IAAI,CAAC9C,KAAK,CAACiE,OAAO,CAAClB,MAAM,CAAC;EHLlK,AMGA,EDFA,AFKD,EIkBY,AChBR,AVDAlE,CSiBS,AChBR,CDgBS,AChBR,AVDA,CAACK,EOJP,GPIY,GAAG,GAAG,gBOJFmF,YAAY,EAAE;EFG7B,EHNA,AMGA,ACsBO,EFrBJ,AGKA,AVAA,IOLI,AGKA,AVAAlF,COLCkF,AGKA7F,IAAI,CAACI,AVAA,GAAG,CAAC,CUAC,CAAC,CHLC,GAAGyF,MGKM,EAAE,IHLI,2BGK2B,CAAC;EDiB5D,AJpBH,CIoBI,CP1BJ,AMGA,ADED,CEqBOnE,CChBH,AVAA,ISgBQ,AChBJ,AVAAd,CERR,AMGA,ACqBa,AChBJZ,IAAI,CAACI,AVAA,GAAG,CAAC,CUAC,CAAC,YRRNgD,CQQmB,EAAE,CRRjB,EAAEC,AMGA3B,INHI,CMGC,CNHC,CMGC,wBEK0C,CAAC;ALJrE,EEDA,AFtB6BE,IHoB1B,AMGA,AEKA,AVEA,EK9BgC,CAAC0B,CHoB7B,AMGA,AEKA,AVEA1D,CEVCiD,AMGAxB,AEKArB,CFLC,GAAG0B,AEKA,CAACtB,ERRE,EMGE,AHvB8B,CHoB7B,AMGAgE,AHvB8BW,AK4B9B,CAAC,EVEE,CQPC,AHvB8B,AL8B9BlE,CQPCwD,GEKG,EAAE,AVEA,CQPC,CAACE,EROE,CAAC,EAAG,CQPA,GAAG,GAAG,cEKc,CAAC;AL5BL,EI6CjD,EFvBH,ECEG,AEKA,ERRInD,AFUAN,CEVC,CMGD,AEKA,CRRGsC,AMGFhC,AEKApB,CFLC,GNHK,AMGF0B,AEKA,AVEE,CUFDzB,AVEEc,GAAG,CQPD,AROE,CQPDqD,IAAI,CAACC,CEKC,CAAC,IFLI,CAACC,EEKE,EAAE,CFLC,GAAG,GAAG,cROgB,CAAC,iBUFe,EAAE;EDiBxE5C,EDrBJ,ADHC,EPUG,CScK,ATdJ,CEVGL,AOwBEG,AChBFtB,CRRC,EAAEmD,AKEX,EEsBe,ATdJ,CScKJ,EAAE,CAAC,CChBD,EAAEzD,UHNV,EEsBwB,EAAE,KChBL,CAACC,IDgBagH,OAAO,AChBT,EDgBWC,UAAU,EAAE;EDrBjE,ECsBO,EPxBJ,AKEA,CLFC,COwBOA,AChBJvG,AVEA,KORG,APQE,IORE,APQEa,CScK,AFtBNlC,APQE,CScKwI,AChBJ,EAAE9H,AVEF,CORC,APQA,CScO,CTdLwB,CAAC,GScS,ATdNpB,QScc,IAAIkE,AChBZ,CAACpE,CVEO,CAACmB,MAAM,EAAEG,CAAC,EAAE,CScC,CAACuG,ATdA,QScQ,CAACb,UAAU,CAAC,EAAE;IDtB3E,ADCD,ELFI,AOwBQhF,AChBR,CAAC,CAAC,ERRE,AFUI9B,CEVHkD,AOwBQ,CAAC6D,MAAM,CAACrG,EPxBN,CAAC,AOwBQ,CAAC,CTdH,CAACU,CEVH,AFUI,CEVH6B,AFUI,CAAC5B,MEVE,CAACG,CAAC,EAAE,AFUI,CAAC,GEVD,CAACyB,AFUI,CAAC,MEVE,CAACxB,CAAC,CAAC;EKElD,ELDD,AMAC,AEQD,IDgBgBuF,ETdJ,CQRZ,GRQgB1F,CScO,EAAEwF,QTdE,EScQ,CTdL,IAAI,CQRrB,ARQsBpG,GAAG,CAACa,QAAQ,CAACvB,cAAc,CAACoB,CAAC,CAAC,CAAC;EEVjE,AKCA,AGOA,IFLG,ECsBY6F,EDtBR,ARQI3F,CQRHyC,ECsBY,EAAE+C,GDtBP,GAAG,ARQI,CQRH,ARQItF,CAAC,EScQ,CDtBT,ACsBUqG,ATdN9G,CQRHgD,KRQS,EQRF,CRQM3C,CAAC,GScQ,ATdL,CScM6F,ETdF,GScO;AFxBpD,EA3B+BnB,EL0B/B,AQQA,EFJG,ECsBYpE,EDtBR,ARQIJ,CQRH8E,SAAS,ACsBU,CDtBTrC,AD9BsB,APsClB,CScO9E,ATdNwC,CAAC,GAAGT,EQRF,GAAG,CAAC,ARQI,IQRA,CAACoF,ICsBM,CAAChH,IDtBE,CAAC2E,ICsBM,GDtBC,ACsBA,CAAC;AFpDZ,IL0BxC,AMKD,AEGC,IDmBepC,ETdJL,CEXZ,AQQA,UDiB6B,ATdN,CAACV,CScO3B,MCjBtB,EVGwB,CAAC,CEXrBuE,AFWsB,EAAE,CAAC,CEXrB,AFWsB,EEXpBC,GOyBuB,CPzBnB,AOyBoBpE,EPzBlB,QOyB4B,GAAC,CAAC;EDtBtD,INFG,AQQA,EDiBYuI,EPzBR,AQQAa,AVGInH,CEXH,EOyBY,EPzBRkC,AOyBUsD,IPzBN,AQQA,EVGM,CUHH,AVGIpF,CEXH,CAAC,COyBW,CAACmG,ACjBV,CAACrD,CRRC,CAAC,EQQE,CAACC,CRRChB,CFWK,GEXD,AFWIxE,CUHH,CDiBW,ACjBVyF,CDiBWkD,CPzBT,CAAC,EAAE,AQQA,CDiBW,WTdH,CAACxI,SAAS;EQT3D,IEOG,ERRI,AOyBQ8H,ECjBRwB,AVGIpH,EEXA,CAACV,GOyBW,EAAE,ECjBR,CVGK,CEXD,AFWEe,CEXD6B,AQQF,IRRM,AQQF,CAACgB,CRRGf,GQQC,CRRG,AQQFgB,CRRG,CFWG,GAAGxF,CUHH,CAAC0F,MAAM,WVGO,CAACtF,UAAU;AQV7D,EA/B8ByG,IN+B3B,AOyBQ,AChBR,CDgBS,CAAC,ATdN,EUFA6C,WFxCgC,OEwCd,GAAG,IAAI/B,wBAAe,CAAC,IAAI,CAAC;AFxCd,INgCxC,AOyBQ,ECfJ,AVCA,IUDIgC,MAAM,GAAG,IAAI,CAAClI,GAAG,CAACmI,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEJ,SAAS,EAAEC,UAAU,EAAE,KAAK,CAAC;ERVvE,AO0BE,CAAC,EAAE5G,CCfF,AVEA,ISaO,ACfHgH,AVEA,CSaI,ATbHlH,KAAK,CUFC,AVEAC,GUFG,CVEC,CAAC,EUFE,CAACnB,GAAG,CAACF,KAAK,CAAC,AVEA,CUFC,CVEC,CUFC,CAAC,EAAE,QVEO,KUFM,CAAC;ERXpD,AO4BGsB,IChBA,CDgBK,CAACF,ATdF,EUFAnB,EAAE,AVEE,CScG,ATdFqB,CScGuB,CChBH,CDgBK,CAAC,CTdD,CUFD,AVEEtB,CUFDrB,GAAG,CAACC,AVEE,CAAC9B,GScK,EAAE,AChBJ,CAAC,CAAC,CVEF,CUFI,AVEHC,CUFI,EAAE,GDgBM+H,ATdN,CAAC9H,MScY,ATdN,CAAC,CScO+H,AChBH,CAAC,SDgBY,EAAEgB,QAAQ,EAAE;AP5BvE,EA/B+B9F,EO4DxB8F,EChBJc,AVEA,CAAC,CE9CiC,CAAClF,AF8ChC,GScS,AChBN,CDgBOqE,AChBNlH,AVEA,CAAC,ME9CsC,CAAC8C,AQ4ChC,CAAC,CAAC,CAAC,CR5CiC,OO4DnB,EAAE;AP5DiB,EO6DnD,CAAC,CAAC,ATdN,EUDIm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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 260,\r\n    cardHeight: 410,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemySprite = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3\r\n}\r\n","import { CST } from \"../CST\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\nlet graveYardArray;\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"background\", \"./assets/background.png\")\r\n    }\r\n\r\n    create() {\r\n        let bg = this.add.sprite(-110, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n        bg.alpha = 0.3;\r\n\r\n        let startX = 0;\r\n        let startY = 0;\r\n\r\n        \r\n        if (graveYardArray.length == 0 ) {\r\n            console.log(\"You have no discarded or used cards.\")\r\n        } else {\r\n            for (let i=0; i < graveYardArray.length; i++) {\r\n                graveYardArray[i].setVisible(true);\r\n                let discardCard = this.add.existing(graveYardArray[i]);\r\n                discardCard.x = startX + (i * 150);\r\n                discardCard.y = startY;\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth;\r\n                discardCard.displayHeight = gameOptions.cardHeight;\r\n            }\r\n        }\r\n\r\n        this.input.once(\"pointerdown\", function() {\r\n            this.scene.start(CST.SCENES.BATTLE);\r\n        }, this);\r\n    }\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n       super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changeCursor() {\r\n        this.setInteractive({ useHandCursor: true });\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","import { gameOptions } from \"../../config\";\r\n\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth / 2;\r\n        this.displayHeight = gameOptions.cardHeight / 2 ;\r\n    }\r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nlet handArray = [];\r\nlet deckArray = [];\r\nlet deckTrackerArray = [];\r\nlet graveYardArray = [];\r\n\r\nfunction deckSetUp(scene, array, arrayTracker) {\r\n    let x = scene.game.config.width / 25;\r\n    let y = scene.game.config.height / 1.24;\r\n    for (let i=0; i < array.length; i++) {\r\n        let cardBack = scene.add.sprite(x,\r\n        y, 'cardBack');\r\n        cardBack.setOrigin(0.5, 1);\r\n        cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n        cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n        \r\n        arrayTracker.push(cardBack);\r\n        x += 4;\r\n    }\r\n}\r\n\r\n// implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\nfunction shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i+1));\r\n        [array[i], array[j]] = [array[j], array[i]]\r\n    }\r\n}\r\n\r\nexport {handArray, deckArray, deckTrackerArray, graveYardArray};\r\nexport {deckSetUp, shuffle};\r\n\r\n","import { graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","export default class Character extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.health = 50;\r\n    }\r\n\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Player extends Character {\r\n\r\n    constructor(scene, x, y, sprite, deck) {\r\n        super(scene, x, y, sprite);\r\n        this.actionPoints = 6;\r\n        this.deck = deck;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints = actionPoints;\r\n    }\r\n\r\n    getDeck() {\r\n        return this.deck;\r\n    }\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Enemy extends Character {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n}","import { handArray, graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class InteractHandler {\r\n    constructor(scene) {\r\n\r\n        scene.input.on('dragstart', function (pointer, gameObject) {\r\n            scene.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            scene.tweens.add({\r\n                targets: scene.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                handArray.splice(index, 1);\r\n            }\r\n\r\n            scene.arrangeCardsInCenter(handArray);\r\n\r\n        }, scene);\r\n\r\n        scene.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        scene.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n            }\r\n        }, scene);\r\n\r\n        // hover out listener\r\n        scene.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth/2,\r\n                    displayHeight: gameOptions.cardHeight/2,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10,\r\n                });\r\n            }\r\n       }, scene);\r\n\r\n        scene.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        scene.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        scene.input.on('drop', function(pointer, gameObject, dropZone) {\r\n            gameObject.input.enabled = false;\r\n\r\n            // setting card in the middle \r\n            gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n            gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n            gameObject.x = dropZone.x;\r\n            gameObject.y = dropZone.y + dropZone.y / 3;\r\n            \r\n            graveYardArray.push(gameObject);\r\n\r\n            // remove the card from the scene after 500ms\r\n            setTimeout(function() { gameObject.setActive(false).setVisible(false); }, 500);\r\n\r\n            dropZone.renderNormalOutline(scene);\r\n\r\n            scene.cameras.main.shake(100, 0.02);\r\n        });\r\n\r\n        scene.input.on(\"dragend\", function(pointer, gameObject, dropped) {\r\n        \r\n            if (!dropped) {\r\n                handArray.push(gameObject);\r\n                gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n                gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n                scene.arrangeCardsInCenter(handArray);\r\n            }\r\n        }, scene);\r\n    }\r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/Button.js';\r\nimport HandCard from \"../helpers/classes/cards/HandCard\";\r\nimport { gameOptions, enemySprite } from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/Zone.js\";\r\nimport Player from \"../helpers/classes/Player.js\";\r\nimport Enemy from \"../helpers/classes/Enemy.js\";\r\nimport {handArray, deckArray, deckTrackerArray, graveYardArray, shuffle, deckSetUp} from \"../helpers/classes/Deck.js\";\r\nimport InteractHandler from \"../helpers/classes/InteractHandler.js\";\r\n\r\nlet enemyArray = [];\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\r\n        this.load.image(\"sword\", \"./assets/sprites/sword.png\");\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemySprite.spriteWidth,\r\n            frameHeight: enemySprite.spriteHeight\r\n        })\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let interactiveHandler = new InteractHandler(this);\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        let player = new Player(this, 0, 0, \"guy\", handArray);\r\n        player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        let heartext = this.add.text(0,0, player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        let actiontext = this.add.text(0,0, player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.start(CST.SCENES.DISCARD_PILE, graveYardArray);\r\n        }, this);\r\n         \r\n        for (let i=0; i < gameOptions.startCards; i++) {\r\n            // creates cards from spritesheet and makes them draggable\r\n            let card = new HandCard(this, gameWidth/2, gameHeight/2, 'cards', i);\r\n            deckArray.push(card);\r\n        }\r\n\r\n        let card1 = new HandCard(this, gameWidth/2, gameHeight/2, 'sword', 0);\r\n        deckArray.push(card1);\r\n\r\n        // Button to end turn\r\n        let endTurnButton = new Button(gameWidth, gameHeight/2, 'End Turn', this, this.endTurn.bind(this), '#202529');\r\n        endTurnButton.changeCursor();\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 500, 400, 300, 600);\r\n\r\n        shuffle(deckArray);\r\n        deckSetUp(this, deckArray, deckTrackerArray);\r\n\r\n        for (let i=0; i < enemySprite.numberOfSprites; i++) {\r\n            let enemy = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemyArray.push(enemy);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n    }\r\n\r\n    arrangeCardsInCenter(handArray) {\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            card.startPosition = {\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(50);\r\n        }\r\n\r\n    }\r\n\r\n    // simulate a drawing feature\r\n    endTurn() {\r\n        if (deckArray.length > 0) {\r\n            let lastCard = deckTrackerArray.pop();\r\n            lastCard.destroy();\r\n\r\n            let drawCard = deckArray.pop();\r\n            handArray.push(drawCard);\r\n            drawCard.cardInHand(this);\r\n            this.arrangeCardsInCenter(handArray);\r\n        }\r\n    }\r\n\r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n        console.log(numberOfEnemies);\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemyArray[Math.floor(Math.random() * enemyArray.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n        }\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport {BattleScene} from \"/src/scenes/BattleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 850,\r\n    height: 800,\r\n    scene: [\r\n        BattleScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);\r\n\r\n"]}