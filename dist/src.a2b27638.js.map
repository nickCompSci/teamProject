{"version":3,"sources":["src/CST.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/font.js","src/helpers/classes/Button.js","src/helpers/classes/cards/HandCard.js","src/helpers/classes/Deck.js","src/helpers/classes/Zone.js","src/helpers/classes/Characters.js","src/helpers/classes/Player.js","src/helpers/classes/Enemy.js","src/helpers/classes/InteractHandler.js","src/scenes/BattleScene.js","src/index.js"],"names":["CST","SCENES","BATTLE","DISCARD_PILE","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemySprite","spriteWidth","spriteHeight","numberOfSprites","graveYardArray","DiscardPileScene","key","data","load","spritesheet","frameWidth","frameHeight","image","bg","add","sprite","setOrigin","setScale","alpha","length","console","log","i","setDepth","existing","x","y","input","once","scene","start","Phaser","Scene","loadFont","name","url","newFont","FontFace","then","loaded","document","fonts","catch","error","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","on","setInteractive","useHandCursor","newX","newY","GameObjects","Text","HandCard","frame","cardInHand","visible","setDraggable","displayWidth","displayHeight","Sprite","handArray","deckArray","deckTrackerArray","deckSetUp","array","arrayTracker","game","config","width","height","cardBack","push","shuffle","j","Math","floor","random","Zone","setRectangleDropZone","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Character","health","Player","actionPoints","Enemy","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","min","max","InteractHandler","pointer","gameObject","tweens","targets","angle","duration","background","index","indexOf","splice","arrangeCardsInCenter","dragX","dragY","type","includes","depth","startPosition","dropZone","renderActiveOutline","enabled","setTimeout","destroy","cameras","main","shake","dropped","enemyArray","BattleScene","gameWidth","gameHeight","interactiveHandler","hud_bg","tileSprite","card_bg","setPosition","player","heart","heartext","getHealth","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","card","card1","endTurnButton","endTurn","bind","changeCursor","enemy","spawnEnemyOnScene","bottomOfScreen","screenCenterX","yDelta","cardX","lastCard","pop","drawCard","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","AUTO","Game"],"mappings":";;;;;;AAAO,AIAP,AMAA,ACAA,AFAA,AFAA,AFAA,AJAO,AEAA,AUCP,ADDA,AVAA,IFAaA,ACAAI,GDAG,EGAA4C,CHAG,KCAK,EEAA,CFAG,AEAFC,IAAI,EAAEC,GAAG,EAAE;ACAF,AMAG,ACCrC,AFDqC,AFCrC,AFD2C,AQE3C,ADDA,AVAA,EFAIjD,ACAAI,AEAA,IFAI,AEAA8C,EHAE,ACAA,CAAC,CDAC,GGAG,GAAG,IAAIC,QAAQ,CAACH,IAAI,EAAE,aAAa,CAAC;ACDjB,AMAG,ACCG,AFDH,AFCG,AFDG,AQA3C,ADEA,AVDgD,EDC5C3C,AEAA6C,EHAIjD,KGAG,CHAG,AGAFqB,EHAI,ACAF,EAAE,AEAA,CFAC,CEAC,CAAC8B,GHAK,CGAD,CAAC,UAAUC,MAAM,EAAE;ACFR,AEAlC,AIAqC,ACCG,AFDH,AFCG,AFDG,AOG3C,AVFgD,EDE5C/C,EDAIJ,AGAAoD,OFAK,CEAG,CFAD,AEAEC,GHAG,ACAF,EDAI,AGAA,CAAC3B,GAAG,CAACyB,MAAM,CAAC;ACHA,AEElC,AIFqC,ACCG,AFDH,AFCG,AFDG,AQI3C,ADAA,AVHgD,EFG5C,ACAA9C,AEAA,CAAC,CGFD0E,AHEE,CAACzB,KAAK,CAAC,CFAC,CKFD,CLEG,EKFA,CLEG,CKFD,GHEKC,KAAK,EAAE;AHC9B,AILkC,AEEf,AIFkB,ACCG,AFDH,AFCG,AFDG,AOK3C,AVJgD,CFI/C,CCAGjD,EEAI,OAAOiD,GFAC,EAAE,AEAE,GFAC;ADApB,AILiC,AEGlC,AIHqC,ACCG,AFDH,AFCG,AFDG,AQMpC,ADAP,AVLgD,EDK5ChD,AEAA,CAAC,CGHDyE,AHGE,AUAKM,MAAM,CZAJ,EKHA,ALGE,AYAK,CZAJ,EKHA,EAAE;AFHgB,AEGf,AIHkB,ACCG,AFDH,AFCG,AFDG,AFO3C,ASAA,AVNgD,EDM5C9E,AYAA+H,IAAI,EAAE5F,KZAK,CYAC,CZAC,AYAAmJ,IAAI;ATPa,AEIlC,AIJqC,ACCG,AFDH,AFCG,AFDG,AJQ3C,AWAA,AVPgD,CDO/C,CYAGvG,EPJAN,AKDiBwC,GEKZ,EAAE,GAAG,OFLsB,CLChB,GAAG,EAAE,uBKArB,yBAAYhF,KAAK,EAAE;APJW,AEIR,AIJW,ADAA,AFCG,AFDG,AJQ1C,AWAmE,AVPpB,ESGzB,AEKnB+C,MAAM,EAAE,GAAG;ATTmB,AEKlC,AILqC,ADAA,AFCG,AFDG,AJUpC,AWF6D,AVPpB,ESKxC/C,AEIJA,EPLAzB,ALKSP,GUJA,AEIJ,CFJK8B,CEIH,CACH8G,GFLW,CAACrF,EAAE,CAAC,CLDL,GAAG,CLKU,CKLR,ELKW,GUJA,EAAE,IEKjB,EACX/C,IFNsCyG,OAAO,EAAEC,UAAU,EAAE,SEM3C;ATZU,AEKV,AILa,ADAA,AFCG,AFDG,AQc3C,ADNoE,AVPpB,CWa/C,CZHGjH,EUJQ+B,KAAK,CAACmF,CVIL,EAAE,GUJS,AVIN,CUJOlG,GAAG,CAAC;APPK,AEOlC,AIPqC,ADAA,AFCG,AFDG,AQczC,ADNkE,AVPpB,EDW5Cf,IUJYkH,GLDP3C,GLKK,CUJS,CVIP,CUJSyC,GLDP,CAAClF,KAAK,CKCW,CLDT0C,KAAK,EAAEC,YAAY,EAAE;AFPb,AMAG,ADAA,AFCG,AFDG,AJa3C,AYGA,ADRoE,AVPpB,CDY/C,CKLG,EERiBuB,AKgBjBtB,EPRIhD,AKCQyF,CLDP,COQD,EPRIrF,CKCS,AEOV,ELhBmB,AGSP,CAAC,CLDP,AOQFE,CPRG0C,IAAI,CAACC,AOQF,CAACyG,IAAI,CPRG,AOQFzG,CPRGC,KAAK,AOQF,CAAC,EPRI,EAAE;AFPxC,AMDqC,ADAA,AFCG,AFDG,AJa1C,AWLmE,AVPpB,EMDlB,AFS1B,EDPiBhB,ECObjC,AKCQD,CLDP,AKCQ,EAAEqF,CLDPjF,EDPiB,GCOZ,CAAC4C,AKCQ,CAAChD,CAAC,ELDN,CAACiD,MAAM,CAACE,MAAM,GAAG,IAAI;AFR3C,AMDqC,ADAA,AFCG,ANcjC,AWP6D,AVLpE,EMH8B,AFU1B,ADRyB,EDCRhC,AMDAuD,ADAAF,AFCAb,ANYRpF,ACZTI,ESQYsB,CLDP,AKCQ,CJRQ,CGDC,ACSPoF,CPRQ,AKDA,CHQdxF,CAAC,GAAC,ALKS,CKLR,AKCU,CAACI,CLDTJ,AKCU,AVID,ACZT,CIOC,GAAGiD,KAAK,CAACpD,MAAM,EAAEG,CAAC,EAAE,EAAE;AMF2B,AVLjD,EEAQ,AIFvB,AECsB,ADAC,AFCF,AFDI,AJczBrB,EKLI,AJNKI,ESOG8G,ELDJtC,KLKG,CUJS,CVIP,CKLG,AKCM,GLDHhD,ALKF,CCXQ,CMJbA,GFUY,CAACf,CEVR,EAAEW,AFUS,CEVR,AFUSV,EEVPW,CAAC,EAAEX,CFUU,CAACU,CAAC,EACjCC,CEX2B,AFW1B,EEX4BkC,AFW1B,KEX+B,EAAE,GFWvB,CAAC;AMJ8C,ERLzC,AMDD,ADAC,AFCF,AFArB,AJcA1D,ACZyB,EMJe,AFYpC2E,AKAI,CAAC,CAAC,MLAE,CAAC7D,CLID,EAAE,GAAG,CIdLa,ECUU,CAAC,EDVN,CCUS,CDVPJ,CCUS,ADVR,CCUS,CAAC,ADVRC,CAAC,EAAEX,MAAM,EAAE6C,KAAK,EAAE;AOKwB,ERHhE,AMFA,ADCA,AFAA,ANcAzD,ACbyB,EMJe,AFapC0E,AKAIhD,ANXgC,KMW3B,CAACmF,ELAF,CAAChD,GKAO,AJVRnC,CGDAA,ACWSf,AVIN,CGbHW,AKDAI,CLCC,AHaI,CUJO,CPTTH,AOSU,AJVR,CHCD,AMFC,CDCA,AFAED,CHCDoB,AMFCpB,AHCC,CDUK,AIXL,ADCDA,CAAC,AFAEC,CGDAA,AHCC,CDUK7B,AIXL,ADCD6B,CLCC,AKDA,AFAEiD,CGDA5D,CNEAc,AKDAd,GFAK,EHCA,AMFC,AHCC6D,CEAD,CLCC9B,AMFCc,CDCAtE,GFAK,CGDA,ADCD,CFAG,CGDA,ADCD,CLCC,EAAEyD,MESI,CAACjD,CFTG,EAAE,MESI,GAAG,CAAC;ALKhE,AWXoE,CXWnE,CCbG,EEDoD,AIHhD,AFaA+E,AIZoC,ADCD,AFAC,AFDA,EMY5BoC,MLAA,CAAChD,AKAM,EAAEpC,KAAK,CAACuF,KLAD,GAAGvH,CEbnBgC,ANII,CSSuB,IHbtB,EAAEJ,CAAC,EAAEC,CAAC,EAAEX,MAAM,EAAE6C,IFagB,CEbX,AFaY7D,UAAU,GAAG,CAAC;ALIjE,AWXmE,IRHZ,AIFhD,AFcAyE,AIdoC,ADCD,AFAC,AFApC,AHEU,ESUFtD,IHbH8E,CGaQ,EAAE,GHbJ,AFcC,AKDM,CLCLlB,EEdC,EAAE,AFcC,CAACD,QAAQ,ADbpBhD,CCaqB,IDbhB,EAAEJ,CAAC,EAAEC,CAAC,EAAEX,MAAM,EAAE6C,KAAK;AOI4B,IRF7D,AIHkB,AFejBnC,AIdA,ADCA,AFAA,AFAAI,AHCU,CIYT,CKDOsF,GLCH,ADbA,CCaC,ADbArG,GAAG,CMYO,ANZNU,EMYQ,MNZA,OHEZ,CEDDK,AMFCA,ADCAA,CFAAA,IHCI,AMFC,ADCA,CFAA,CHCCJ,AMFCA,ADCAA,CLCA,AMFC,ADCA,AFADA,CAAC,CHCCC,AMFCA,ADCAA,CLCA,AMFC,ADCA,AFADA,CAAC,CHCCmB,AMFC9B,ADCAA,CFAA4D,IHCI,CMFE,ADCA,AFAD,EGDGf,AHCDgB,EFAF,GKDQ,CHCA,GAAES,oBAAoB,CAAC5D,CAAC,EAAEC,CAAC,CAAC;AKGA,EJJhE,AFeA,EFZI,AMFA,ACaI,AFZJ,AFAA,AFAA,CMYK,CAAC,ATVFpB,GAAG,CEDF0C,AMFA/B,ADCAiF,AFAAlF,AFAA6C,CHEI5E,MEDG,CMFC,CAAC,AHCA,ALEF,CEDG,AMFA,AHCA,AFAA,AHEFC,CQHG,AHCA,AFAA2C,CIAC,CFAC,CAAC,CEAC,AFAA,CEAC,AJAA,AHEF,CGFG,AHEFzC;AIY5B,AMVA,EJNK,EEEG,ACcI,AFbJ,AFAAyC,AFDuB,AOI3B2G,AVDI,CAAC,CEDG/G,CAAC,COYG4F,CPZD,AGDF,CHCG,AMFHrB,ADCA1G,AFACwB,GIaO,AJbJ,CEAA,AFACU,AKGJ,EFJK,ACcK2C,CFbJ7E,AGGH,EFJK,AEIH,EHHK,CFAE,GGDC8G,MCcM,CAACkB,OAAO,CDdC,ACcAP,CDdC,EAAE,EAAE,EAAE,CAAC,ECcE,CAAC,EJbrB;ACH3B,AIMe,EJVmBhF,AHOnC,AHGA,EQFI,ACaI,AFbJF,AFAA,AKIK4G,ERHD/G,CAAC,CITgC,AGqB7B2F,CPZD,AIT+B5D,ACQjC,CCAA4C,ADACvF,AFADwE,GIaQ,AFbJ,CAAC9D,CGIM,GDSE,CDbJ,ACaK,CHrB8B,AGqB7B,AJbL,CCRmC0C,CEQjCrC,ACaK,AFbJ,CFAA,ICRsC,AEQlC,CAACf,GAAG,AHAA,CGACwF,AHAA,CAAC,GGAG,CAACzE,KAAK,CAAC4C,IAAI,CAACC,KDAnB,CCAyB,CAACC,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAKqB,MAAM,EAAE;AFRtB,AFsBhE,EDfK,AOKmB,AVFnB,EEAG,AKFyB,AFCzB,CHCC,CMF8EO,ACcvEpC,IJbHoB,CGD+E,EAAE,KAAK,EHC5E,CIaE,CAACgC,CJbA,KIaM,CAACF,EJbC,CAAC,CAAC,CIaE,EAAE,CAAC,CAAC;ALC1C,EGdI,AGGoB,ERDhB,AOYI,ANhBP,AHGA,EQFgGb,GJe5FzB,CFZI/D,IMHgG,EJe7F,AIf+F,CJe9FuD,EFZK,CAAC,CAAC,CEYF,CFZI,CEYF,EFZK,CAAC;EEa1B,AGfC,AGID,ERDI,AMJ6G,ACiBzG1C,AJdJ,AFJH,AHGA,CQFiH,CAAC,CJgB9G,EKCQ,CPbJoB,AOaKuE,AJdLhC,CDaAlE,ADfT,AHGA,CIYU,GAAGiD,KFZM,AEYD,CFZE,AEYDpD,ACbC,GAAGU,CKET,AVDTtB,EEAoByC,AEYA,ECbG,ALCnB,CIYmB,AKCM,AJdLlC,CDaA,AKCMqD,ANhBxBtC,AHGA,EIYoBP,ACbC,CHCA,AEYA,ACbCmE,CHCAhE,CAAC,ACHlB,CCemB,CFZC,AEYA,ADflB,ECeoBH,CAAC,CCbE,CDaA,CFZA0B,AGDE,CDaA,CKCC,CAAC,IPbG,CAACtB,CAAC,CAAC;EOe/C,CAAC,CPdD,AEYA,AIhBA,ADAH,AFGG,AKCU,CDcPG,CNjBH,AHGAzB,EIYI4E,CAAC,CFZA9B,AMJAmD,ACkBG,AJfHX,AFFD,CMiBK,ANjBJ5B,CCeGmB,IAAI,CAACC,CFZA,ACHD,CDGE,AMJA,CAAClE,ARID,CGHC,CCeG,ADfF,CCeGiE,AJZF1E,GGHG,CCeG,ADfFuD,AHGA,CIYGqB,CIhBA,AHGA,CGHC,AHGAtD,CGHC,EAAE,CJgBE,AIhBD,ALCD,CKDE,AHGA,CDaE,ACbD,IDaKP,CAAC,GAAC,CAAC,CAAC,CAAC;EKIzCO,ELJ0C,AId1CA,ADFH,AFGmC,AKCtB,AVCd,EEDoBsB,ACFhB,CMkBK,CAACxB,CDlBD,CAACb,ALAF,CIAR,AJASuC,EKAI,ACkBE,CDlBD7B,ACkBE4B,CLHW,CAACmB,AKGV,CAAC,IPhBgB,AEaF,CAACS,AIfZ,CNEejC,AEaF,AKGV,CLHW,CKGT,ANlBJ,CCeewB,CDfb,EOGf,ENYiC,CAACjD,AGfhC,CHeiC,CAAC,CAAC,AKGXwF,OAAO,EAAEC,SDlBjB,CCkB2B,EAAEU,KAAK,EAAEC,KAAK,EAAE;EJfvE,ALAC,EED4C,AEaxCnD,AIbD,ACiBIwC,CPjBsC,CAAC,AKD3C,AJAAlF,AOGIvB,GNWE,AMXC,CNWAgB,AIbFmF,CJaG,ADdH,AOGIxH,CNWA,ADdH0C,CIAC,CEkBO,CAACF,CAAC,CFlBL,AJAA,CIACuE,AJAAjC,CMkBO0D,ACfP,CAACvI,IDeW,AFlBN,EGGC,CAACC,EFFI,CAAC0C,ALDD,CAAC,IKCK,ALDD,CKCE,ALDD;EEEjC,EHAG,AEYW0C,AIZX,ACiBIwC,AFlBR,AGGI,AVFH,CUEI,CPHD,GCagB,CFZX3D,AEYY4B,AIZZ0B,ALDD,CCac,ADbb1F,CDCE,AEYY,CFZX,COiBM,CAACU,CAAC,GAAGgG,CDjBJ,ALDD,CAAC,CKCE,ECiBO,ANlBN,EDCG,ACDD,CAAC,CDCE,ACDD;ECc1B,AKKI,AFnBH,AGID,CDeK,CAAC,AJlBL,ALAA,EEA0B,KFE3B,EEFiC5E,QAAQ,EAAE,OFEjC;AIYd,EMXK,ERH0C,AMEvC,ADHH,AFCA,EHA2C,ACCxC,AHEA,IAAI,CKDR,ALCStC,IAAI,CAACC,WAAW,CAAC,OAAO,EAAE,KKDb,6BLC+C,EAAE;ESiBnE,EPnBAoB,AMCA,ADHH,AGIA,ELAG,AFDA,EHEInB,CEHC,CAACI,AGEF,AFDA,CIDR,AFES0E,AFDAxB,EDDI,CAACxC,IFGI,EAAEnC,EEHE,AGEF,CAACsG,AFDA,GAAGtG,EECE,EEFhB2G,AFEkB,MEFZ,EAAE,CPGa,CAACxG,KGFG,CAACA,GHEK,IEHb,ECCiB,GAAG,CAAC;EKCjD,ACkBIqC,EPpByB,AQE5B,EHDG,AFEA,AFDA,CMkBK,CAACF,AThBFhB,EOHA,AFEA,AFDA,CIDCqF,AFEAR,AFDAvB,AOET,EDgBe,CAACb,EAAE,CAAC,AFnBJ,EPGI,COHD4C,CPGG3G,CKDD,CAACuG,CFDC,EIDE,CJCCvG,GOEf,ELDoB,CIiBK,AJjBJ,CAAC,CIiBK,CJjBH,IAAI,ALCN,CKDOiG,ALCN7F,ISgBaqH,CNlBV,CAACrH,IECY,CIiBI,AJjBH,EIiBKsH,GNlBR,GAAG,CAAC,GMkBc,EAAE;EPnBnE,EOoBQ,AFnBR,AJCA,EECI,AKCA,AVAA,CAAC,CSgBOA,AThBN,EKDE,AKCA,CLDCvB,AKCAhF,IAAI,CAACI,EDgBQ,CAAC+G,EChBJ,CLDC,AKCA,CDgBO,AJjBN9B,IKCI,CDgBO,CChBL,ILDI,CAAC,EIiBQ,EJjBJ,CAACpE,CIiBO0C,AJjBN,GAAG,IAAI,CAACxC,EKCE,CAAC,ELDE,CAACmE,CIiBC,CAAC8B,KJjBK,CAACjD,EIiBE,CAACoC,EJjBE,GAAG,CAAC,EAAE,EIiBE,CAAC,CJjBC,CIiBC,AJjBArF,CAAC,GAAG,IAAI,CAACC,KAAK,CAACmE,OAAO,CAAClB,MAAM,GAAG,CAAC,EAAE,IAAI,CAACjD,KAAK,CAACmE,OAAO,CAACnB,KAAK,EAAE,IAAI,CAAChD,KAAK,CAACmE,OAAO,CAAClB,MAAM,CAAC;EHHlK,AMGD,ADFC,AJCA,EEED,EIiBY/C,AChBR,AVAA,IUAI,AVAA,CSgBS,AChBRrB,AVAAA,CSgBSwG,GChBL,AVAA,CUACpG,AVAAA,ESgBU,CAACE,EChBN,AVAA,CSgBS,AChBR,AVAA,CSgBS,WChBG,AVAA,EUAE,AVAA,yBUAyB,AVAA,CUAC,AVAA;EQD5D,AHAC,AFFA,EDFA,AKCA,APKD,EUAI,EDgBYmG,EChBR,CAACzG,IDgBc,AChBV,CAACI,CDgBWmG,IChBN,CAAC,KDgBe,QChBF,EAAE,0BAA0B,CAAC;APJ7D,EKED,ALlBkChF,AHoBjC,EENA,AKCA,AFGA,EKGG,EDgBYmF,ANrCwB,CAACzD,COqBjC,CRLR,AKCA,AGISjD,EDgBY,EAAE,AChBV,CDgBW,AChBVI,IPrBsC,CAACsD,AOqBlC,CAAC,KPrBuC,AOqBlC,EAAE,MRLZ,GKCG,kCGIoD,CAAC;APrBZ,IKkB3D,AHAC,ALEA,EEHG,AKCA,AGIA,EDgBYF,EPrBR,AQKA,CRLCX,AGGT,AKES7C,EHJE,EGIE,CAACI,CHJC,CAACsF,EEoBY,CChBT,CDgBW7G,AChBV,GRLG,CAAC,GQKG,CHJC,CGIC,UDgBY,CAACG,AJlBpB,SIkB6B,QChBM,CAAC;IFJ1D,ADCA,APCC,EKCG,AKEA,ERNsB8D,AOsBVW,EJlBR,AKEA,CFJR,AHESuB,AKEAhF,AVDT,IUCa,CAACC,KRNyB,AOsBV,CJlBT,CHJqB,AOsBVpB,AJlBVsG,IKEI,CLFC,AKEA,CVDjB,CKDmB,KKEK,CFJjBgB,CEImB,EFJhB,EAAEC,CCoBqB,CAACnH,CDpBnB,EAAE,OCoB2B,kBChBgB,EAAE;EHJtE,ILF6C,AMG1C,AHEA,ALCA,CEN2C,CAAC,AOuBhCoI,AChBRnH,ELFA,ALCAG,CKDC2E,CLCC,CQHCP,ACoBU,EAAE,ATjBV,EQHE,CAACC,ACoBU,AChBR,CVDD,CUCG7F,AVDFyB,EKDE,CGFC,AHEA8E,ALCA,CQHCX,ARGAlE,IQHI,CAACoE,CRGC,CAAC,CKDC,ALCA,CKDC,CAAC,CGFC,ARGA,CKDC,CGFC,ARGA,CAAC,CUCL,CLFO,AKEN3F,AVDM,CQHCoH,AHEArB,GGFG,GAAGoB,EEIJ,CFJO,CHEC,CAAC,ALCA,CQHC,ARGA,CQHC,ARGA3F,CQHC,CAAC,GAAG2F,GAAG,CRGC,CAAC,CAAC,EAAC,CAAC,CAAC;IELlE,AMGA,ADFC,EFIG,ALCA9F,ESiBYsG,AChBRxG,AVDF,CAACM,CKDC,CAACuE,KIkBe,CTjBT,CSiBW,ATjBV,CUCG,AVDF,CAAC,CUCGnG,CLFD,CAACwG,UAAU,CAAC,IAAI,CAACpE,CAAC,AKEN,CAAChC,ELFQ,IAAI,CAACkC,KAAK,CAACmE,OAAO,CAACnB,KAAK,GAAG,CAAC,EAAE,IAAI,CAACjD,CAAC,GAAG,IAAI,CAACC,KAAK,CAACmE,OAAO,CAAClB,MAAM,GAAG,CAAC,EAAE,IAAI,CAACjD,KAAK,CAACmE,OAAO,CAACnB,KAAK,EAAE,IAAI,CAAChD,KAAK,CAACmE,OAAO,CAAClB,MAAM,CAAC;EHLlK,AMGA,EDFA,AFKD,EIkBY,AChBR,AVDA/D,CSiBS,AChBR,CDgBS,AChBR,AVDA,CAACK,EOJP,GPIY,GAAG,GAAG,gBOJFgF,YAAY,EAAE;EFG7B,EHNA,AMGA,ACsBO,EFrBJ,AGKA,AVAA,IOLI,AGKA,AVAA9F,COLC8F,AGKA1F,IAAI,CAACI,KAAK,CAAC,CHLC,CPKC,CAACO,COLC+E,KPKK,CUAC,EAAE,CVAC,CAAC,EOLE,APKC,2BUA0B,CAAC;EDiB5D,AJpBH,CIoBI,CP1BJ,AMGA,ADED,CEqBOrE,CChBH,EVAIT,ESgBI,AChBJ,CRRR,AMGA,ACqBa,AChBJZ,IAAI,AVAE,CUADI,AVAES,GAAG,CAAC,CUAD,CAAC,YRRNkC,CQQmB,EAAE,CRRjB,EAAEC,AMGA3B,INHI,CMGC,CNHC,CMGC,WRK+B,CAAC,YUAU,CAAC;ALJrE,EEDA,AFtB6BE,IHoB1B,AMGA,AEKA,AVAA,CAAC,CK5B+B,CAAC0B,CHoB7B,AMGA,AEKA,CRRCT,AMGAtB,AEKAlB,CFLC,CRKC,EQLEqB,AEKA,CAACjB,ERRE,EMGE,AHvB8B,CHoB7B,AMGA6D,AHvB8BW,AK4B9B,CAAC,GFLG,AHvB8B,CGuB7BV,GEKG,EAAE,CFLC,CAACE,MAAM,GAAG,GAAG,cEKc,CAAC;AL5BL,EI6CjD,EFvBH,ECEG,AEKA,ERRInD,AFQA,CERC,CMGD,AEKA,CRRG8B,AMGF9B,AEKAjB,CFLC,CRKG,EERE,AMGFqB,AEKA,CAACpB,CVAGa,CAAC,EQLA,CAACmD,ARKA,CAAC,EAAEnD,CQLC,ARKA,CQLCoD,CEKC,CAAC,AVAAtE,IQLI,CAACuE,EEKE,EAAE,CFLC,GAAG,CRKC,CAACxD,CQLC,KRKK,EAAEG,CAAC,EAAE,EAAE,oBUAoB,EAAE;EDiBxEO,EDrBJ,ADHC,GEwBQ,CPxBDH,AOwBEC,AChBFjB,CRRC,CFQGN,CERDoD,AKEX,EEsBe,CAACJ,EAAE,CAAC,CChBD,EAAEpD,IVAM,CAACsB,CAAC,CAAC,CAACC,EONpB,EEsBwB,EAAE,EThBE,CAAC,EUAR,AVAU,CUATtB,AVAU,ISgBG6G,OAAO,AChBT,EDgBWC,UAAU,EAAE;EDrBjE,ECsBO,EPxBJ,AKEA,CLFC,COwBOA,AChBJpG,EVAI,GOND,CPMK,CAACG,EONF,CEsBO,AFtBNxB,APMI,CSgBGqI,AChBJ,AVAEnG,EUAAxB,CHND,CEsBO,IThBE,CSgBG,AThBFI,QSgBU,IAAI+D,AChBZ,CAACjE,CVAW,CAACoB,CAAC,CAAC,CAAC,SSgBK,CAACsG,QAAQ,CAACb,UAAU,CAAC,EAAE;IDtB3E,ADCD,ELFI,AOwBQlF,AChBR,CAAC,CAAC,ERRE,AFQIT,CERH6B,AOwBQ,CAAC+D,KThBC,CSgBK,AThBJ3F,CSgBKP,EPxBN,AFQI,CERH,AOwBQ,AThBJV,CSgBK,GPxBL,CAAC4C,OAAO,CAACvB,CAAC,AFQI,CAACH,CERH,AFQI,CAAC,CAACG,CAAC,CERH,AFQI,CERHuB,OAAO,CAACtB,CAAC,CAAC;EKElD,ELDD,AMAC,AEQD,IDgBgBuF,EThBJ7F,CQNZ,ICsBuB,EAAE2F,AThBN,CAAC1F,GAAG,CAACjB,KSgBW,MDtBtB,GRMyB,CAACkB,CAAC,CAAC,CAACI,CAAC,CAAC;EER3C,AKCA,AGOA,IFLG,ECsBYwF,AThBR,EQNA,CAACpD,ECsBY,EAAEiD,GDtBP,GAAG,CAAC,GCsBa,CDtBT,ACsBUe,CDtBThE,OAAO,KCsBe,CAACoD,KAAK;AFxBpD,EA3B+BnB,EL0B/B,AQQA,EFJG,ARMA,ESgBY/B,EDtBR,CAACqC,SAAS,ACsBU,CDtBTvC,AD9BsB,CEoDXzE,MDtBJ,GAAG,CAAC,IAAI,CAACgH,ICsBM,CAAC7G,IDtBE,CAACsE,ICsBM,GDtBC,ACsBA,CAAC;AFpDZ,IL0BxC,AMKD,AEGC,EVIG,ESeYG,ETfR,CEVR,AQQA,AVEStC,KAAK,CAACC,ISec,ATfV,CAAC,CSeWvC,MCjBtB,IRRIkE,EFUoB,EEVhB,AFUkB,EEVhBC,GOyBuB,CPzBnB,AOyBoB/D,EPzBlB,IFUqB,ISeO,GAAC,CAAC;EDtBtD,INFG,AQQA,EDiBYoI,ATfR,EEVA,AQQAa,CRRC,CFUG,CSeS,ATfR7G,EEVA0B,AOyBUwD,GTfL,CEVD,AQQA,AVEEjF,GUFC,CRRC,CAAC,AFUE,CSeS,ATfR7C,CSeS6I,ACjBV,CAACrD,CRRC,CAAC,EQQE,CAACC,CRRClB,AFUH,CAACtE,GEVM,CQQC,CDiBW,ACjBVyF,CDiBWkD,ATfb,CEVI,AFUH1I,CEVI,EAAE,AQQA,CDiBW,ETfX,CAAC;EQR1C,IEOG,AVEA,CAAC,CEVG,AOyBQgI,CTfT,CUFCwB,ERRI,CAAC3H,AFUF,CAAC,ESeY,EAAE,ECjBR,ERRI,CAACuC,AQQF,IRRM,AQQF,CAACkB,CRRGjB,GQQC,CRRG,AQQFkB,CRRG,KQQG,CAACE,MAAM;AFP3C,EA/B8BmB,ERyC/B,EEVI,AOyBQ,AChBR,CDgBS,CAAC,EChBN6C,WFxCgC,OEwCd,GAAG,IAAI/B,wBAAe,CAAC,IAAI,CAAC;AFxCd,ERyCvC,EETD,AOyBQ,ECfJ,IAAIgC,MAAM,GAAG,IAAI,CAAC/H,GAAG,CAACgI,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEJ,SAAS,EAAEC,UAAU,EAAE,KAAK,CAAC;ERVvE,AO0BE,ATjBF,CSiBG,EAAE9G,CCfF,IDeO,ACfHkH,CDeI,MCfG,GAAG,IAAI,CAACjI,GAAG,CAACF,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC;AVFpD,EETA,AO4BGiB,ATzD8BE,IUyC9B,CDgBK,CAACJ,ATzD8B,CAACK,CUyCjCnB,EAAE,CDgBK,CAACuC,ATzD8B,CUyCjC,CDgBK,CAAC,EChBF,CAACtC,GAAG,CAACC,IDgBQ,EAAE,AChBJ,CAAC,CAAC,EAAE,CAAC,EAAE,GDgBM+F,OAAO,EAAEC,AChBH,CAAC,SDgBY,EAAEgB,QAAQ,EAAE;AP5BvE,AF7B6C,EEFdhG,EO4DxBgG,EChBJc,ER5CkC,CAACpF,GO4DvB,AChBN,CDgBOuE,AChBN/G,OR5CuC,CAACyC,AQ4ChC,CAAC,CAAC,CAAC,CR5CiC,OO4DnB,EAAE;AP5DiB,EO6DnD,CAAC,CAAC,ECfFqF,OAAO,CAACC,WAAW,CAACN,SAAS,GAAC,CAAC,EAAEC,UAAU,CAAC;EDiB5C9G,IChBAkH,CDgBK,CAACpH,KAAK,AChBJ,CDgBKyB,AChBJn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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 260,\r\n    cardHeight: 410,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemySprite = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3\r\n}\r\n","import { CST } from \"../CST\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\nlet graveYardArray;\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"background\", \"./assets/background.png\")\r\n    }\r\n\r\n    create() {\r\n        let bg = this.add.sprite(-110, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n        bg.alpha = 0.3;\r\n\r\n        if (graveYardArray.length == 0 ) {\r\n            console.log(\"You have no discarded or used cards.\")\r\n        } else {\r\n            for (let i=0; i < graveYardArray.length; i++) {\r\n                graveYardArray[i].setDepth(10);\r\n                this.add.existing(graveYardArray[i]);\r\n                console.log(graveYardArray[i].x);\r\n                console.log(graveYardArray[i].y);\r\n            }\r\n        }\r\n\r\n        this.input.once(\"pointerdown\", function() {\r\n            this.scene.start(CST.SCENES.BATTLE);\r\n        }, this);\r\n    }\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n       super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changeCursor() {\r\n        this.setInteractive({ useHandCursor: true });\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","import { gameOptions } from \"../../config\";\r\n\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth / 2;\r\n        this.displayHeight = gameOptions.cardHeight / 2 ;\r\n    }\r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nlet handArray = [];\r\nlet deckArray = [];\r\nlet deckTrackerArray = [];\r\nlet graveYardArray = [];\r\n\r\nfunction deckSetUp(scene, array, arrayTracker) {\r\n    let x = scene.game.config.width / 25;\r\n    let y = scene.game.config.height / 1.24;\r\n    for (let i=0; i < array.length; i++) {\r\n        let cardBack = scene.add.sprite(x,\r\n        y, 'cardBack');\r\n        cardBack.setOrigin(0.5, 1);\r\n        cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n        cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n        \r\n        arrayTracker.push(cardBack);\r\n        x += 4;\r\n    }\r\n}\r\n\r\n// implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\nfunction shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i+1));\r\n        [array[i], array[j]] = [array[j], array[i]]\r\n    }\r\n}\r\n\r\nexport {handArray, deckArray, deckTrackerArray, graveYardArray};\r\nexport {deckSetUp, shuffle};\r\n\r\n","import { graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","export default class Character extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.health = 50;\r\n    }\r\n\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Player extends Character {\r\n\r\n    constructor(scene, x, y, sprite, deck) {\r\n        super(scene, x, y, sprite);\r\n        this.actionPoints = 6;\r\n        this.deck = deck;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints = actionPoints;\r\n    }\r\n\r\n    getDeck() {\r\n        return this.deck;\r\n    }\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Enemy extends Character {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n}","import { handArray, graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class InteractHandler {\r\n    constructor(scene) {\r\n\r\n        scene.input.on('dragstart', function (pointer, gameObject) {\r\n            scene.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            scene.tweens.add({\r\n                targets: scene.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                handArray.splice(index, 1);\r\n            }\r\n\r\n            scene.arrangeCardsInCenter(handArray);\r\n\r\n        }, scene);\r\n\r\n        scene.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        scene.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n            }\r\n        }, scene);\r\n\r\n        // hover out listener\r\n        scene.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth/2,\r\n                    displayHeight: gameOptions.cardHeight/2,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10,\r\n                });\r\n            }\r\n       }, scene);\r\n\r\n        scene.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        scene.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        scene.input.on('drop', function(pointer, gameObject, dropZone) {\r\n            gameObject.input.enabled = false;\r\n\r\n            // setting card in the middle \r\n            gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n            gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n            gameObject.x = dropZone.x;\r\n            gameObject.y = dropZone.y + dropZone.y / 3;\r\n            \r\n            graveYardArray.push(gameObject);\r\n\r\n            // remove the card from the scene after 500ms\r\n            setTimeout(function() { gameObject.destroy(); }, 500);\r\n\r\n            dropZone.renderNormalOutline(scene);\r\n\r\n            scene.cameras.main.shake(100, 0.02);\r\n        });\r\n\r\n        scene.input.on(\"dragend\", function(pointer, gameObject, dropped) {\r\n        \r\n            if (!dropped) {\r\n                handArray.push(gameObject);\r\n                gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n                gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n                scene.arrangeCardsInCenter(handArray);\r\n            }\r\n        }, scene);\r\n    }\r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/Button.js';\r\nimport HandCard from \"../helpers/classes/cards/HandCard\";\r\nimport { gameOptions, enemySprite } from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/Zone.js\";\r\nimport Player from \"../helpers/classes/Player.js\";\r\nimport Enemy from \"../helpers/classes/Enemy.js\";\r\nimport {handArray, deckArray, deckTrackerArray, graveYardArray, shuffle, deckSetUp} from \"../helpers/classes/Deck.js\";\r\nimport InteractHandler from \"../helpers/classes/InteractHandler.js\";\r\n\r\nlet enemyArray = [];\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\r\n        this.load.image(\"sword\", \"./assets/sprites/sword.png\");\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemySprite.spriteWidth,\r\n            frameHeight: enemySprite.spriteHeight\r\n        })\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let interactiveHandler = new InteractHandler(this);\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        let player = new Player(this, 0, 0, \"guy\", handArray);\r\n        player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        let heartext = this.add.text(0,0, player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        let actiontext = this.add.text(0,0, player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.start(CST.SCENES.DISCARD_PILE, graveYardArray);\r\n        }, this);\r\n         \r\n        for (let i=0; i < gameOptions.startCards; i++) {\r\n            // creates cards from spritesheet and makes them draggable\r\n            let card = new HandCard(this, gameWidth/2, gameHeight/2, 'cards', i);\r\n            deckArray.push(card);\r\n        }\r\n\r\n        let card1 = new HandCard(this, gameWidth/2, gameHeight/2, 'sword', 0);\r\n        deckArray.push(card1);\r\n\r\n        // Button to end turn\r\n        let endTurnButton = new Button(gameWidth, gameHeight/2, 'End Turn', this, this.endTurn.bind(this), '#202529');\r\n        endTurnButton.changeCursor();\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 500, 400, 300, 600);\r\n\r\n        shuffle(deckArray);\r\n        deckSetUp(this, deckArray, deckTrackerArray);\r\n\r\n        for (let i=0; i < enemySprite.numberOfSprites; i++) {\r\n            let enemy = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemyArray.push(enemy);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n    }\r\n\r\n    arrangeCardsInCenter(handArray) {\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            card.startPosition = {\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(50);\r\n        }\r\n\r\n    }\r\n\r\n    // simulate a drawing feature\r\n    endTurn() {\r\n        if (deckArray.length > 0) {\r\n            let lastCard = deckTrackerArray.pop();\r\n            lastCard.destroy();\r\n\r\n            let drawCard = deckArray.pop();\r\n            handArray.push(drawCard);\r\n            drawCard.cardInHand(this);\r\n            this.arrangeCardsInCenter(handArray);\r\n        }\r\n    }\r\n\r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n        console.log(numberOfEnemies);\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemyArray[Math.floor(Math.random() * enemyArray.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n        }\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport {BattleScene} from \"/src/scenes/BattleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 850,\r\n    height: 800,\r\n    scene: [\r\n        BattleScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);\r\n\r\n"]}