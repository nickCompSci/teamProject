{"version":3,"sources":["src/CST.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/handCard.js","src/helpers/font.js","src/helpers/classes/button.js","src/helpers/classes/deck.js","src/helpers/classes/zone.js","src/helpers/classes/characters.js","src/helpers/classes/player.js","src/helpers/classes/enemy.js","src/helpers/classes/interactHandler.js","src/helpers/classes/cards/toolTip.js","src/helpers/classes/cards/damageCard.js","src/helpers/classes/cards/comboCard.js","src/helpers/classes/cards/reloadCard.js","src/helpers/classes/cards/healingCard.js","src/scenes/battleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","graveYardArray","DiscardPileScene","key","data","load","spritesheet","frameWidth","frameHeight","image","bg","add","sprite","setOrigin","setScale","alpha","startX","startY","length","console","log","i","setVisible","discardCard","existing","x","y","displayWidth","displayHeight","input","once","scene","start","Phaser","Scene","HandCard","name","cost","cardType","effect","visible","setInteractive","setDraggable","GameObjects","Sprite","loadFont","url","newFont","FontFace","then","loaded","document","fonts","catch","error","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","on","changeCursor","useHandCursor","newX","newY","Text","handArray","deckArray","deckTrackerArray","deckSetUp","array","arrayTracker","game","config","width","height","cardBack","push","shuffle","j","Math","floor","random","Zone","setRectangleDropZone","setDepth","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Character","frame","health","Player","actionPoints","spriteType","keepCards","keepCardsLimit","player","disableDragOnCards","cards","pointer","includes","splice","indexOf","clearTint","setTint","indexList","index","setActive","arrangeCardsInCenter","enableDragOnCards","draggable","Enemy","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","min","max","InteractHandler","gameObject","tooltip","removeTooltip","tweens","targets","angle","duration","background","dragX","dragY","type","yOffSet","startPosition","depth","showTooltip","setLabelCoordinates","dropZone","renderActiveOutline","enabled","setTimeout","activateCard","cameras","main","shake","dropped","Tooltip","wordWrap","DamageCard","getLabel","cardInHand","card","target","setHealth","getHealth","damage","setText","ComboCard","ReloadCard","HealingCard","BattleScene","endTurnButton","keepCardButton","gameWidth","gameHeight","interactiveHandler","hud_bg","tileSprite","card_bg","setPosition","heart","heartext","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","loadCards","endTurn","bind","keepCard","drawCard","enemySprite","spawnEnemyOnScene","cannon","grenade","headshot","reload","amount","sideEffects","overload","medkit","kevlar","amountOfCards","lastCard","pop","destroy","bottomOfScreen","screenCenterX","yDelta","cardX","selectCardInHand","moveCardsBackInDeck","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","LoadScene","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AKAP,ASAA,ADAA,AVAA,AaAA,ADAA,ALAA,ACAA,AFAA,AFAA,ANAO,AGAA,AeCP,AFDA,AfAA,AgBAA,IlBAaA,ACAAK,GDAG,EIAA6D,CJAG,KCAK,EGAA,CHAG,AGAFT,IAAI,EAAEU,GAAG,EAAE;ACAF,ASClC,ADAA,AVD2C,AaC3C,ADAA,ALDqC,ACCrC,AFAA,AFAA,AYCA,AFDA,AfAA,AgBAA,ElBAIlE,ACAAK,AGAA,IHAI,AGAA8D,EJAE,ACAA,CAAC,CDAC,GIAG,GAAG,IAAIC,QAAQ,CAACZ,IAAI,EAAE,aAAa,CAAC;ACDjB,ASElC,ADAA,AVF2C,AaE3C,ADAA,ALFqC,ACCU,AFAqC,AFA5C,AYExC,AFDA,AfDgD,AgBChD,EjBAIlD,AGAA6D,EJAIlE,IAAI,CIAD,CJAG,AIAFwB,EHAE,EAAE,AGAA,CHAC,CDAG,AIAF,CAAC4C,IAAI,CAAC,UAAUC,MAAM,EAAE;ACFR,ASEE,ADAA,AVFO,AaEP,ADAA,ATFpC,AIAqC,ACCU,AFAqC,AFA5C,AYDxC,AFGA,AfFgD,AgBCJ,EjBCxC/D,EDAIL,AIAAqE,MJAM,CCAD,CDAG,AIAA,CHAD,AGAEC,GHAC,EGAI,CAACzC,CJAC,EIAE,CAACuC,MAAM,CAAC;ACHA,ASEE,ADAA,AVFO,AaEP,ADAA,ATApC,AIFqC,ACCU,AFAqC,AFA5C,AUGxC,AfHgD,AgBCJ,EjBExC9D,AGAA,CAAC,CJAGL,AMFJsF,AFEE,CAAChB,KAAK,CAAC,CHAC,CKFD,CLEG,EDAI,AMFJ,CLEG,CDAG,AMFJ,GFEKC,KAAK,EAAE;ACJI,ASEE,ADAA,AVFO,AaEP,ADAA,ATAjB,AIFkB,ACCU,AFAqC,AFA5C,AYIxC,AFAA,AfJgD,AgBCJ,ElBGxC,ACAAjE,EGAI,OAAOiE,GHAC,EAAE,AGAE,GHAC;ADCrB,AKNkC,ASEE,ADAA,AVFO,AaEP,ADAA,ATCpC,AIHqC,ACCU,AFAqC,AFA5C,AUKxC,AfLgD,AgBCJ,ClBI3C,CCAGhE,AGAA,CAAC,CEHDgF,AFGE,OHAO,EKHA,ALGE,CAAC,EKHA,EAAE;ANGjB,AKNiC,ASEE,ADAA,AVFO,AaEP,ADAA,ATCjB,AIHkB,ACCU,AFAqC,AFA5C,AHMxC,AeAO,AFAP,AfNgD,AgBCJ,EjBKxC/E,EkBAOqF,MAAM,GlBAF,AkBAK,ElBAH;AIPiB,ASEE,ADAA,AVFO,AaEP,ADAA,ATEpC,AIJqC,ACCU,AFAqC,AFA5C,ANOxC,AgBAA,AfPgD,AgBCJ,CjBM3C,CkBAGkE,EbJAvE,AKDiB4D,EQKb,EAAElG,MAAM,CAAC+L,IRLmB,AQKf,CbJD,GAAG,EAAE,uBKArB,yBAAYjM,KAAK,EAAE;ANJW,ASEE,ADAA,AVFO,AaEP,ADAA,ATEV,AIJW,ADC+C,AFA5C,ANOvC,AgBCD,AfRgD,AgBCJ,EPErB,AQKnB8C,KAAK,EAAE,IAAI;AdTmB,ASEE,ADAA,AVFO,AaEP,ADAA,ATGpC,AILqC,ADC+C,AFA5C,ANSjC,AgBAP,AfTgD,AgBCJ,EPIpC9C,AQIJ+C,EbLA7E,ALKST,GUJA,CAACqC,AQIJ,EAAE,GRJO,AQIJ,CRJKkC,EAAE,CAAC,CLDL,GAAG,CLKU,CKLR,ELKW,GUJA,EAAE,UAAU8C,OAAO,EAAEuB,UAAU,EAAE;ANNjC,ASEE,ADAA,AVFO,AaEP,ADAA,ATGZ,AILa,ADC+C,AFA5C,AUUxC,AfVgD,AgBCJ,EjBSxC3I,AkBAAwO,ERJQ7F,GQIH,EAAE,ElBAE,EAAE,CUJO,CAACC,CVIL,MUJY,CAACC,aAAa,EAAE;ANPZ,ASEE,ADAA,AVFO,AaEP,ADAA,ATKpC,AIPqC,ADC+C,AFA5C,AUU0B,AfVlB,AgBCJ,EjBUxC5I,EUJQqC,AQGCmM,KbJJ1J,AKCQ,CAAC+D,AQGC,ElBCL,AkBDO,ElBCL,EUJQ,CAAC5H,CLDP,CAACoB,CKCS,CAAC,GLDL,EAAE0C,IaIa,CbJR,EAAEC,YAAY,EAAE;ADPb,ASEE,ADAA,AVFO,AaEP,ADAA,ALFC,ADC+C,AFA5C,ANYxC,AgBFkE,AfVlB,AgBCJ,CjBW3C,CKLG,EMRSmF,AJAQ3D,AWWoBiI,EbHjC1M,AKCQ+G,CLDP,CaGoC,EbHjCzG,AaGkCE,CPX1B,EJAU,AGSP,ELDN,AKCQmG,CLDPzD,AaGkC,CAACyJ,GbH/B,CAACxJ,CaGmC,CAACyJ,ERFxB,CQE2B,CbHjC,CAACxJ,KAAK,GAAG,EAAE;ADPxC,ASCoC,ADAA,AVFO,AaEP,ADAA,ALFC,ADC+C,AFA5C,ANYvC,AgBFiE,AfVlB,AgBCJ,ENFxB,AJAU,AFS1B,EHPiB1C,AgBS2CmM,EbFxD5M,AKCQ+G,CLDP,GAAG1G,CKCS,CRRQ,CQQN,CAAC,AQCkD,CbFzD,CAAC4C,AaE0D1C,IbFtD,CAAC2C,CaE2D,CAACwJ,IbFtD,CAACtJ,AaE0D,CAACyJ,KbFrD,GAAG,IAAI;ADR3C,ASCoC,ADAA,AGAA,ADAA,ALFC,ADC+C,AFA5C,ANcjC,AgBJ2D,AfRlE,AgBD4C,EfAf,ASFT,AJAU,AFU1B,AaCiG,CAAC,CdRjFhL,AKDAkE,AHCAnC,ANYR3F,ACZTM,ESQYwB,CLDP,AKCQ,CJRQ,CGDC,ACSPoF,AVID,CIZS,CCOdxF,CAAC,ALKO,GKLN,CAAC,AKCU,CAACI,CLDTJ,AKCU,ATRV,CIOC,GAAGoD,KAAK,CAACvD,MAAM,EAAEG,CAAC,EAAE,EAAE;AQRL,ADAA,AGAA,ADAA,ANDgD,AQUlB,AfR/C,AgBDyB,EbCjB,AFDE,ASDzB,AJAA,AECsB,AHCD,ANarBzB,AkBJAmC,EbDI,AJNK7B,ESOGwB,CAAC,AQAR,CbDGqD,CKCO8B,AQAR,CACHkH,GlBGO,EAAE,CKLG,AKCM,CAACrM,CAAC,CCXZK,ANUOA,ALKF,CCXQ,CMJbA,GIAK,ANUO,CAACpB,CMVNc,AJAF,CIAG,CJADA,AFUS,CMVNC,AJAF,AFUSd,CMVN,AOYV,CXZSc,CIAG8B,AJAF,AWanBtD,EXbqBU,CFUU,CAACa,CMVN,ANUO,EMVL,ANW5BC,CEX2B,AFW1B,EEX4ByE,AFW1B,KEX+B,EAAE,GFWvB,CAAC,aaEE;ALZY,ADAA,AGAA,ADAA,ANDgD,AUepF,AFLkE,ACTtB,CCc3C,Cdb0B,AFAvB,AODsB,AHCD,ANcrBtG,ACZyB,EUJO,AJAQ,AFYpCkF,AYTKgJ,EPSGrF,MLAA,CAAC7H,AYTK,CPSE,AVIR,EUJU,AVIR,GAAG,CEdLuB,EGUU,CAAC,CHVP,EAAEC,AGUQ,EAAE,CAAC,CHVP,AGUQ,EHVNC,QAAQ,EAAEC,MAAM,EAAER,KAAK,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM,EAAE;AWD/B,ADAA,AGAA,ADAA,ANDgD,AUelF,AFLgE,EZN9D,AKFA,AHCA,ANcAd,ACbyB,AgBDP,EfD6C,ASF/B,AJAQ,AFapCiF,AKAI,CAAC,CAAC,MLAE,CAACpD,GCVDI,CGDAA,ATeG,CIbHN,CAAC,AJaI,CAAC,CIbHC,AEDE,CFCD,AKFC,CHCED,CFCD+B,AKFC/B,AHCC,CDUK,AIXL,CHCEC,CGDAA,AHCC,CDUKlC,AIXL,CLEA,AEDEqF,CGDAjE,CLEAmB,GEDK,EFCA,AKFC,AHCC+C,EFCArB,AKFC0C,IHCK,CGDA,CHCE,CGDA,CLEA,EAAEzC,MCSI,CAACjE,CDTG,EAAE,MCSI,GAAG,CAAC;AQZ5B,ADAA,AGAA,ADAA,ANDgD,AUiBpF,AFPkE,EhBQ9DM,ACbA,AgBFkB,EbCkC,ASDnCyK,ADAAT,AVD8C,AaC9CW,ADAAD,AHFb,AJAA,AFaA1F,AIZoC,ACYhChD,AFZSsE,AFCuB,AYcxC1B,IAAI,CRHS,CAAC4D,AFZS,CRgBd,AkBDF,CbHK,CQXc,ARWb3G,ALIF,CYfgB,AEAA,CCAC,Afef,AkBDFK,CRHS,CAACtB,GAAG,CAAC,AQGR,CAAC6N,IbHQ,AaGJ,CAAC5J,EbHMpF,CMbnBuC,AJAAA,ANII,GiBYe,CAAC,CPhBf,AJAA,EIAEN,AJAAA,CIAC,AJAA,EIAEC,AJAAA,CIAC,AJAA,EIAE8B,AJAA5C,KIAK,CJAC,EAAEuF,IFagB,CEbX,AFaYzG,UAAU,GAAG,CAAC;AWJA,EHPpC,ADAC,AGAC,ADAD,ANDJ,ARiBvBM,AiBfA,EbAoD,AFDhD,ASDA,AJAA,AFcA0E,AIdoC,AHCA,ALE1B,ESUF8D,ICbH7E,AJAAyC,GGaU,CVIP,CUJSrE,CHbN,AFcC,ALGF,CWjBE,ANcCiD,EEdC,CIAC,ADaO,CHbN,AFcC,AKDM2D,CLCL5D,CYZR,OfDJhD,AGaoB,CAAC,AKDM,IRZtB,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM;AFiBjC,AgBVkE,ChBUjE,CajB6B,ADAC,AGAC,ADAD,ANDJ,EJGnB,AFDA,AKFiB,AFejBa,AIdA,AHCA,ALCU,AgBDA,CZaT,CMdGA,ADaIV,CCbH,EAAE,ANcF,CHbAqB,AGaC,CMdG,ADaI,EAAE,CRZN,EQYS,CRZNA,IAAI,QDEV,CGDAL,AKFAA,CHCAA,IFCK,AKFA,CHCA,CFCEN,AKFAA,CLEC,AKFA,AHCDA,CAAC,CFCEC,AKFAA,CLEC,AKFA,AHCDA,CAAC,CFCE8B,AKFA5C,CHCAiE,IFCK,CKFC,AHCD,EGDGsB,AHCDrB,KGDM,CHCA,GAAES,oBAAoB,CAAC9D,CAAC,EAAEC,CAAC,CAAC;ANgBnE,AgBViE,EHN9D,ADAA,AGAA,ADAA,APDA,AFeA,AGdA,EJEI,AFDA,AODA,AHCA,AWDU,ENANA,ADaIgH,ATVJvI,CUHC,EAAE,AVGA,CGDFwD,AFDAtB,AODAvB,AHCAD,CLEIlC,GCFA,AQYO,EAAE,CNXN,AFDA0D,CODC,ADALN,CCAM,AHCA,ALEF,CGDG,AKFA,AHCA,ALEFnD,CYHLwD,AXCQ,AODA,AHCA,CMDRA,AEAAA,CCAAA,APAK,AFCK,CAAC,CODP,ALAGX,AFCK,CMDR,AEAA,ANAI,APGG,CYHLY,AEAF,AdGQtD,CWHNsD,AEAAA,ANAIX,COAJW,APAK,ASCb,EJDY,ALAGzB,CIAH,AEAA,CDAE0B,AEAF,CHAEA,AEAAA,CCAAA,EPAO,EAAErD,EKAD,CDAA,AEAA,CDAEsD,AEAF,APAK,CIAHA,AEAAA,CCAAA,APAK,IKAC,CDAA,AEAA,CDAER,AEAF,CHAEA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CDAEN,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEC,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEd,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE,AEAF,CHAE,AEAA,CCAA;AVenE,AWTkE,ETP7D,EMC8D,ADAA,AVE3D,AaF2D,ADAA,AHC3D,AFAA,ACaI,AFd+B,AFEnC,ALEA,CUHC,ADaI,ATVJ,CGDGa,AMWE,AOZFtB,CbCC,EAAE,AaDA,CbCC,AFDHoC,AODA6D,AHCAZ,CWAI7G,KfAE,AODA,EHCE,CJAC4D,AODA,AHCA,AWAF,CXAG,AWAF3D,CXAG,IJAI,AODD8I,CQCA,CAAC7I,aRDc,CAAC,EAAE,EAAE,EAAE,CAAC;AFF7C,ASO6D,ETX3BoD,ANUnC,EYL+D,ADAA,AVG3D,AaH2D,ADAA,AHE3D,AFAA,ACcI,AFhB+B,AFGnCF,AWAA,CAAC,CbCGL,CAAC,CGTgC,AGqB7B0F,CNZD,AGT+BzE,ADQjC,CJAAL,ASDAsB,AFAA2C,AHCC5F,GIaO,AJbJ,CAACa,EIaM6C,ERbH,ESDE,AJPkC,AEOlC,CPCC/B,ASDA,AJPkCM,CDQhC,CGDA,IEAGe,AJPmC,ELQhC,CODC,CCcA,CAACqD,ECdE,CAACvF,CAAC,EAAE,CDcC,CAAC2G,ICdGzE,MDcO,CCdA,ADcC,CCdAjC,CAAC,ALCtB,CKDuB;AJPS,AFsBhE,AWXkE,EfD7D,AgBDD,EbCI,ASJA,ADAA,AVEyB,AaFzB,ADAA,AHEA,AFAA,ACcI,AFhBJ,AFGA,CFCC,GMYO0F,ECdHvD,AFAApB,AHCAgD,GIaQ,KCdA,ADcK,CCdJ,ADcK,CAAC,AJbL,EIaO,CJbJ,CGDC,EAAE,IIFfrD,ADAAA,AGAAA,ADAAA,ANAAL,CFGoB,CAAC,CAAC,COHlB,ADAA,AGAA,ADAA,CNAC,CKACM,ADAAA,AGAAA,ADAAA,CNACZ,CAAC,EKAE,ADAA,AGAA,ADAA,ANAAC,CAAC,CKACY,ADAAA,AGAAA,ADAAA,CNAC1B,MAAM,CKAC,ADAA,AGAA,ADAA,EDAE2B,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA,EDAER,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEN,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEd,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA;ATiB/D,AWZkE,EdF9D,AeAC,EbEG,ASJA,ADAA,AGAA,ADAA,ALGA,ADHA,AFGA,AUGK+J,AfHR,EUFmB7G,ADeRO,GLAPY,CDZIpE,ASJAwH,ADAAA,AGAAA,ADAAA,ALGAV,ADHArB,AFGAZ,KUGW,CXUR,CQhBI,ADAA,AGAA,ADAA,ATgBHjB,EDZK,AKDA,CLCC,ASJA,ADAA,AGAA,ADAA,ARGA,CFCC,AOHe,ADed,CLAH,AIbG1C,ACaCgF,AFhBD,CJIC,AOHe,ALEf,COHC8C,ADAAA,AGAAA,ADAAA,ATgBH,CGhBI,CJIC,AIJA,CJIC,AKDA,CAAClJ,ACaC,CAACyG,EDbC,AHAA,CKFgB,AFEfQ,AHAA,CAAC,CIaE,EDbC,ACaC,CDbA7F,ACaC,CAAC,EGhBR,ADAA,AGAA,ADAA,CDACA,ADAAA,AGAAA,ADAAA,CLGU,CAAC4C,GIHN,ADAA,AGAA,ADAA,CLGU,CIHRlD,ADAAA,AGAAA,ADAAA,ALGSmD,CIHR,ADAA,AGAA,ADAA,GDAC,ADAA,AGAA,ADAA,ELGa,CAACC,GIHTlD,ADAAA,AGAAA,ADAAA,ELGc,GAAG,EAAE,EAAE,CAAC,EIHV,ADAA,AGAA,ADAA,ALGY,EIHVD,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CLGY0E,KIHP4D,ADAAA,AGAAA,ADAAA,CLGa,EAAE,KIHP,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA;EZE7E,AGeD,AWXoB,EZDhB,ASJAjI,ADAAA,AGAAA,ADAAA,AJgBI,AFhBJ,APEH,AgBDA,END+C8F,AFEmCA,CJc9E,EQhBI,ADAA,AGAA,ADAA,CVIAjE,ASJCjD,ADAAA,AGAAA,ADAAA,ANAD1B,CGA4C,ANgB5CoC,AId+E,ARExF,CIYU,CQhBG,ADAA,AGAA,ADAA,AHA0C,AFEmC,CIF5EG,ADAAA,AGAAA,ADAAA,ANAD,CHgBAiD,EGhBGxF,CCE+E,ELE5E,ACYD,CDZE,ACYDiC,AGhBC,CKAE,ADAA,AGAA,ADAA,AHA0C,GVI3Dd,EGAoBuD,ACYA,EJZhB,CIYmB,CAAC,AJZlB,EIYoBtC,CDZC,ACYA,CDZCI,CAAC,CCYC,CDZC,ACYA,EAAEJ,CAAC,EAAE,CDZAsC,CCYE,MDZK,CAACjC,CAAC,ASJtB,ADAA,AGAA,ADAA,CVIuB;EYC/B,EZAhB,ASJA,ADAA,AVAH,AaAG,ADAA,ATgBA,AKCIK,AFjBJ,AFGA,AWHH,ENDiE+H,AFE+BhC,ARG7F7H,EIYIiF,CAAC,AKCI,CNbJrB,ASJAoG,ADAAA,AGAAA,ADAAA,AJiBK3C,AFjBLf,AFGAZ,CWDT,CZcYR,EMjB8D,AFE+B,EEF7B,ANiB5D,AIf2F,CJe1FC,CDZA,CAAC,CSJC,ADAA,AGAA,ADAA,ANAA,APID,CYJErD,ADAAA,AGAAA,ADAAA,ARGA,CDaE,CAACoD,AGhBD,APID/E,CKDE2B,EOHE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA,ATgBC,AJZF,CIYGsD,CCbA,CIcM,AJdL1E,AWDnB,CPeyB0D,AFjBL,EFGE,CDaE,ACbDuB,EDaG,IAAIvE,CAAC,CCbA,EDaC,ACbC,CDaA,CAAC,AKCA,CLDC,AKCA;EAEzC,AMdJ,CNcK,CGnBsB,ADAA,AVA1B,AaA0B,ADAA,ATgBmB,AIfmE,ADA7G,AFGA,ALCJ,CQJkH,ACkB3GU,CNfa+B,AKH+F,AQE/G,ENJyEe,EDoBjE,AFlBH2B,AFGAX,AWDD,CfDR,AQiBa,AOhBJxF,ENJyE,EAAE,ANkBzD,AYdd,CZceoE,AYddhE,GTFI,EJGiB,ACaF,AYdd,CZceyE,AGhBb,ASED,CbCiBxB,ACaF,CAAC,AGhBb,CQIT,CXYwBe,GCbV,CAAC1C,AWDD,CfDjBA,AGegC,CAACV,AYdd,CZce,CAAC,CAAC,ACbb,CJFlB,AIEmB,EJFjB,qBeCuC,CAAC;EJF1D,ADAA,AGAA,ADAA,AJoBIU,AThBH,EGD4C,ACaxC0C,AIfD,ADAA,AFEgC,AUCtB,CZDgC,CAAC,AFD3C,ASJmF,AMKnF,CPiBK,CAAC5C,CLJA,CHdF,AGcGR,AIfFsG,ADAAlB,ASED,CfDCjE,AGcG,AYbHnC,CZaI,CKIE,CAAC0D,COjBH,CPiBK,AOjBJtD,CPiBK,CRlBH,CODE,CAACI,CPCA,AeCA,CfDC,AeCA,CPiBK,CFnBF,CEmBI,CRlBH,CAAC2B,AMDC,CAAC,CCAC,CAAC,CAAC,AQED,ERFG,AQED,CfDC,AODC,CAAC,ACmBEqE,OAAO,EAAEuB,UAAU,EAAEQ,KAAK,AOjBH,CAAC,CPiBIC,KAAK,EAAE;EGpBtE,ADAA,AGAA,ADAA,ARKD,EFDI,AONoF,ANkBzEpE,AIbX1C,ACkBIqG,AFnBJrG,AQEU,AfAb,CUNwF,CTKrF,ASLsF,AMMtF,GZYgB,AIbX,ADDA,CJEAgC,AFDD,AGaamB,AIbXvE,ADDAA,ASEF,CfDC8B,AGaa,AYZbpC,CbAE,ACYY,CDZX,AKDC,ADDA,CCCCmB,ACkBI,AFnBJA,CEmBKC,AOjBN,CPiBO,AOjBNhB,GPiBSmI,EOjBJ,CRDG,ADDA,ASEF,EPiBQ,CRlBL,CECE,CFDA,CECE,CYCjB,GCDoB,EAAE,mBRDJ,ADDA,USEiC,CAAC;EZa9D,ACZC,EOLA,ADAA,AGAA,ADAA,AHDG7G,AFMA,ACiBIqG,AFpBqB,APE5B,EGA0B,AFAvBrG,AcEI5B,ACDJ,GNNK,AKOE,CLPDQ,AFMDoH,AQAD,CfDC,AcEIpJ,AfAb,AgBDS0B,CfDCwB,CEAuB4B,AOLpB,CAACjC,ADuBI,CAACE,AOjBN,CPiBO,AOjBNjB,CfDC,CAACiC,CQkBOmG,AMhBP,CAACjK,CZFwB,AaCtB,CNNG,AMMF,CbDuB,CMkBf,EMhBL,CAACE,EPDI,CPDA,AOCCiD,ARCnB,AgBDkB,CfDC,CeCC,GfDG,AOCC,CPDA,AOCC,iBENP,MMM6B,CAAC;AZa9D,EKKQ,AFpBJ,CEoBK,CNnBsC,ASJ1C,ADAA,AGAA,ADAA,AHAG,AFMA,ACiBE,AJlBL,AUEG,CAAC,CZHuC,AFCxC,ADEA,AgBDA,IfDI,ASLCS,AFMAwF,ARCD,AgBDA,CJJR,ADAA,AVGSnH,AaHT,ADAA,AbKSR,AgBDAA,IhBCI,AgBDA,ChBCCC,AgBDAG,CNNE,GTKE,ASLC,AFMA,CPDA,AeCA,CRAE,AQAD,EfDE,CSLE,CTKA,CAAC,ADEA,CCFC,ADEA,EgBDE,CJJjBsB,ADAAA,AGAAA,ADAAA,CGImB,GhBCG,CYLjB,ADAA,AGAA,ADAA,CbKmB,CYLjB,ADAA,AGAA,ADAA,qBGIuC,CAAC,WhBCW,EAAE;EOJtE,AQKD,EZHI,AOJA,ALIH,EOFG,ADAA,AGAA,ADAA,AGIA,EhBCIxB,EGHCyD,AOJAwB,AMMD,CXAR,AWASnF,IAAI,CAACI,ENNG,AVOC,CUPA,CAAC,AVOCzB,CUPA,AMMD,CbFE,AaED,EbFG,QaEO,EAAE,KhBCD,CAACG,EKDV,OLCmB,cgBDoB,CAAC,gBJJzC4C,CDAAA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CCAA;ELsBtB,AMjBH,EZFGA,ASFJ,ADAA,AGAA,ADAA,AHHqB,AFOjB,ADLH,ENIG,AICA,AWAA,EhBCIvB,CGHC,CAACG,AEEF,AWAA,CXACgF,AWAAtF,EbFI,CAACmB,CaED,CAACf,GhBCK,EAAEzB,AgBDF,CbFG,AEEF,AWAA,CXAC8G,KAAK,EAAE,AWAA,EAAE,QhBCE,CAAC1G,YGHL,MaE6B,CAAC;EJJzD,ADAA,ADFD,ADwBI2C,ENpByB,AKEzB,ADLH,AQKA,ACCD,EfDI,AICA,ALCA,CSgBK,AThBJ,CSgBKF,AThBJ,ECFE,AICA,CJDCF,AMHT,AFISgE,EIiBM,CAAC5B,EAAE,CAAC,KJjBC,CJDC,AICAgC,GJDG/G,MICM,CIiBK,AJjBJ,CAAC,CIiBK,CJjBH,CEJjB0H,GFIqB,CAACjB,EEJhB,ENGY,AQkBWoB,AFrBrB,CNGW1H,KICa,CIiBI,AJjBH,EIiBKiJ,CRlBV,SQkBoB,EAAE;ENnBnE,AOLC,AFOD,AQAC,EJLA,ADAA,AGED,ADAA,AJqBQ,AMnBP,EdCG,AMHA,AFIA,ALCA,ESgBQA,ERlBJ,AICA,ALCA,CCFCxG,AICA+D,AUAT,AfCStF,IAAI,CAACI,ESgBQ,CAACqI,EThBJ,CKDC,ALCA,CSgBO,AJjBN9C,CJDC,CcCjB5F,EdDoBpB,CQkBO,CMjBvB,EAAE,EVAoB,CAAC,ALCA,ESgBQ,AThBN,EKDE,CAACyC,CIiBO4C,AJjBN,GAAG,GJDL,CAACjF,AICQ,CAACyC,KAAK,CAACoE,CIiBC,CAACa,CRlBP,IICY,ALCA,CKDCjC,ALCA,ESgBE,CAACuD,EJjBE,GAAG,CAAC,EAAE,EIiBE,CAAC,CJjBC,CIiBC,AJjBA1G,CAAC,GAAG,IAAI,CAACG,KAAK,CAACoE,OAAO,CAACnB,MAAM,GAAG,CAAC,EAAE,IAAI,CAACjD,KAAK,CAACoE,OAAO,CAACpB,KAAK,EAAE,IAAI,CAAChD,KAAK,CAACoE,OAAO,CAACnB,MAAM,CAAC;EFHlK,AWDD,EFFC,ADAA,AVMD,AYHA,AHLC,ALSD,ALCA,AgBHC,EPmBW,AFrBR,AQIA,INiBYiE,AFrBR,AQIAnC,CHLR,ADAA,AJCSD,IQII,ENiBU,CMjBPvG,ENiBU,EAAE,AMjBR,ORJO,EAAE,EKDhB2B,ADAAA,KCAK,ADAA,ECAE,ADAA;EVInB,AYHD,ALIA,AHAC,ALCA,EGLA,AWDD,AJJC,AMOA,EJFG,ADAA,AFsBQA,AFtBkB,AQK1B,IHLImI,ADAAA,CDHR,ADyBiB,AOlBjB,CPkBkB3B,EGtBN,ADAA,GCAG,ADAA,CFsBS,CAAC5H,EGtBN,ADAA,CFsBS,CAAC,MOlBpB,KNPK,eHKQ0D,eAAS;ECG/B,ELLC,AFGA,AaJD,ADCA,ARIC,ALCA,EYJGlD,ADAA,ADHA,AKQA,ACDA,EPkBYqH,AFrBe,EIDvB,ADHA,AKQA,ACDA,CbHR,AWFA,AJFShG,AKQAoI,ACDA7I,EJJE,CAACX,ADAA,CAACmB,AFsBU,COlBT,CJJC,AHsBU6F,AOlBVzH,CJJC,AFHA,EMOE,CLJC,ADHA,AMOAhC,CJJC,ADAAwL,CCAC,CGKC,CLRC,EDyBY,CEtBT,CKIJ,CAACvL,ELJO,CGDjBmD,EXEE,CaGc,CAACjD,CFLZ,EHCoB,AGDlB,EHCoB,CKIJ,EAAE6L,wBAAW,EAAE,KAAK,CAAC;ERAzD,EIHA,AXCC,AYHD,AHDA,ALKC,ALCA,EGFG,AWFA,APC2B,AQK3B,ACDA,ELJI,AFsBQlC,ENrBR,AWFAyB,ACMA,ACDA,CbHCzH,AFET,AYJA,ARKA,AUCSoI,AfAT,AgBDS9I,ELJI,AFsBQ,CKvBT,CLuBW,CAAC,AOlBV,CLJGV,AGDF,AEKAW,CLJG,GAAC,AGDA,CHCC,AKIA,CAACrD,CLJC0C,CRCC,AQDA,AIKA,CZJC,EQDE1B,CXKjB,CCFC,CeCc,CAACf,CHLZmD,KAAK,AGKa,CAACjD,CHLZ,CFCW,CAACkB,ANIV,GWAgB,CAAC,QLJK,CAACkB,MAAM,EAAEG,CAAC,EAAE,EAAE;ECAzD,AFHA,EFMD,AOGA,ACDA,EfDI,AaJA,ADAA,ARKA,ALCA,EGLsB4C,AMsBVvC,AFvBZ,CEuBa,CEtBL/B,AGDJuK,ADAAA,ARKA,ALCAxJ,CSiBW0H,AJlBVzC,CLCC,CCFC,CaJC,ADAA,CCACpD,AdMA,ECFE,AYJA,CZICH,CDEC,CAACzB,CGLqB,AWDpB,ADAA,AJuBU,CRnBT,AaJAwJ,ALuBUnB,AJlBV,CFJqB,AQAxB,ANIIlD,ALCA,CWLH9F,AXKIY,IcNI,ATKA,EAAE,ALCA,CAAC,CcNC,AdMA,GSiBa,ATjBV,CWLH,AFsBcc,CEtBbL,AFsBc,ATjBV,CWLH,AXKI,CWLH,CAACS,AGDI,ALuBUiH,ATjBV,EcNE,EHCF,CAAC,EFsBgB,KTjBL,CAAC,CAAClI,IWLA,EAAE,AJDrB,GPM4B,CAAC,CAAC,EAAC,CAAC,CAAC,CWLHgG,OAAO,EAAE;EIKvE,ACDA,EJLA,AXKD,AYJA,AHJC,AFMD,ELF8C,AEK1C,ALCAnG,CGN2C,CAAC,AWAxCS,ALuBQQ,ATjBV,CAACb,COP0B,AFMzB,CGFR,AHES6E,CMJO,EJFHiB,COCE,CHCK,AGDJxF,CHCKgJ,AXKN,CAAC,CcNG,APDD,APOD,CcNG,ALuBQ,ATjBV,ESiBYpL,AJlBV,CAAC+G,CSLG,CAAC,CHCK,CAAC,IAAI,CAACsE,ANIN,CAAC,CAAC,EGFhBpC,AHEkB,GGFf,CHEmB,CMJO,AHExBC,ACoBoB,AJlBFxC,CIkBGvG,CEtBK,CHEvB,EGF0B+K,AHExB,IGF4B,CAAC3H,AFsBJ,AJlBF,CAAC,EIkBI,CAAC,EEtBM,CAAC+H,MAAM,CAAC;EVGpE,AYJA,AGIA,EbHD,ASFC,AFHA,AKSA,EDJG,ANGA,AHEA,ALCA5J,ESiBYkB,ATjBV,CAACb,COPC6F,AFMA,COLR,AFHA,ALQSjB,CMJO,CHELR,CRGC,COPC,CIEO,AJFNpB,CIEO4D,AHEN,ARGA,CQHCvC,ADJA,CAAC,CPOC,CSiBW,CJlBT,CGFC,ACoBUpG,AJlBVgH,CGFCb,EGFQ,CAACoF,CHEL,CAAClF,EIHhB,CLDmB,CFMC,CMJO,AJFN,AFMA,CMJO,AHEN,CENjB,CFMmB,CHEC,CMJO,ANIN5D,CMJO4I,ANIN,CGFCnC,CCoBG,CAAC9I,AJlBF,CGFC,ADJDyH,GCIIoB,AHEA,CAACpG,CMJO,CHEL,CGFO,AJFP,CIEQ,CHEL,ACoBE,AFxBH,AFMC,CGFC,AHEAoE,CGFC,CAAC,ACoBE,CAAC,EDpBAgC,EHEE,CGFC,AHEApD,KAAK,GAAG,CAAC,EAAE,IAAI,CAACnD,CAAC,GAAG,IAAI,CAACG,KAAK,CAACoE,OAAO,CAACnB,MAAM,GAAG,CAAC,EAAE,IAAI,CAACjD,KAAK,CAACoE,OAAO,CAACpB,KAAK,EAAE,IAAI,CAAChD,KAAK,CAACoE,OAAO,CAACnB,MAAM,CAAC;AWFlK,EbHA,AajB0B7C,EfoB1B,AaFD,ADFC,ALKD,AHEA,AUFC,EHHG,AFHA,AVUA,ESgBYgH,AOzCiB,CAAC/G,CNe1B,AVUAlB,CUVCwB,AKQT,CJHgB,AJHJ,CKCD,AHuBU,COzCkB,CPyChB,CThBT,CWLO,CDLL,AD0BU,CThBT,CAAC,CWLO0C,ADLN,CCKO,GAAC,CAAC,ADLJ,ECKMA,CAAC,CIGrB,EJHwBvF,aAAK,CAACK,YAAY,CAACkB,MAAM,EAAEgE,CAAC,EAAE,EAAE,WCFe;AIlB1C,EFkBtC,ANGA,AHEA,EFNA,ASED,AXCC,AYJA,AHAD,EKQI,AfEA,ESgBYwD,EMlBR,AfEAzH,CCJR,AYJA,AEMSZ,CRNG,EIGQV,CIGP,CNkBW,AFxBR+G,AQMFjG,AfEA,ESgBY,CThBT,CAAC,CeFC,CRNG,AQMF,CRNG+F,IIGE,AIGA,CJHCxG,CIGC,CdFjB,CYJC,CNAqB,CAAC8G,OIGK,CAAC5B,AJHE,CIGD,AJHE,CIGD,CAACrD,EJHI,CAAC,EIGA,AJHE,CIGDyH,AIGA,CAAC,MJHM,GAAG,KAAK;ECF9D,AFHA,ALOA,EFNA,AWCA,ANGA,EPEG,AYJA,AJwBQ,AMlBR,AfIA,CScS,CAAC,EMlBN,AfIArJ,CGVR,AYMSI,CJHO,CVCL,AYJA,CNAS,CQMP,CAACI,CdFC,CAAC4B,GcEG,CdFC,AcEA,EfIE,CAACnB,MAAM,GGVfgD,AYMkB,CfIC,CeJC,AfIA,EGVhB,AHUmB,EGVjBC,IAAI,EAAE,eYMiC,CAAC,KFNK;ARIhE,EOJA,APpB6BlC,EJyB9B,AaNC,ADED,AHJC,AFKA,ELDG,AMwBQmG,AMlBR,EV3BgC,AL+B5BjH,CK/B6BwB,CFqB7B,AQGI,AIGJ,CZNCgB,AQGI,AGHb,ANGA,AOGStD,CJHK,EJHEqG,CQMH,AfIE,CScO,AMlBRjG,AfIEW,CScOiH,CNxBP,CHUG,COVG,AFrB0B,AL+B5B,CGVD,AIAI7B,AFrB0BlB,AU2B9B,CAAC,ENkBU,CAAC4D,AJ7CsB,KEqBrB,COArB,APAsBnC,IQMA,CNkBS,CFxBH,AQMJ,CNkBS,AFxBJL,ECGpB3E,IDH0B,CCGrB,ADHsByE,ECGpB,ODH6B,CAACQ,GPUC,CAAC,GOVK,CAAC,AQMJ,CAAC,GRNO,CAAC,EAAE,CAAC,CAAC;AKDzE,APpBoD,EOClB7E,AXwBlC,AYJA,EHJA,EIKG,ANGA,ACqBQiG,AMlBR,AfIA,CAAC,CGVG3G,AQGA,CRHC,CWAD,ANGA,AOGA,CZNGyC,AOHX,AFMSxC,AOGArB,CPHC,CROC,CcVC,APAI,CJAD,AWAFkC,ANGAR,AOGA,CNkBS,AMlBRtB,CNkBS4H,CFxBH,CKrBuB,ALqBtBpB,CCGH,CMHC,ANGAtC,AOGA,CDNCwF,ACMA,ENkBU,CDrBP,ACqBQhB,CDrBPvE,COGC,CDNC,APAI,CQMH,CRNK,EOAF,ANGA,CAACE,MAAM,CMHC,AJHlBrD,CAAC,CIGmB,ANGA,CENjBC,CAAC,AD2B0B,CDrBP,ACqBQ0G,CC3BzB,SD2BmC,CAAC3G,CAAC,GAAGzC,YMlBI,CAAC,MNkBM,CAACG,SAAS,EAAEiJ,UAAU,CAAC1G,CAAC,GAAG1C,mBAAW,CAACI,UAAU,GAAG,CAAC,GAAG2J,OAAO,GAAG,EAAE,CAAC;AG7CvG,ECoB1C,EZIA,AQsBO,EErBJ,ADNA,AFMA,AOGA,CJHC,CRHGrH,AWAA,AdUA,CGVC,COHD,AFMA,AOGA,CZNGyC,AOHF1C,AFMAA,AOGApB,CLTC,AFMA,ADHE,CIGD,AJHE,APUA,EcVE,AJHFoB,AFMAM,AOGA,CLTC,AKSAtB,CJHC,AXOEY,CAAC,COVC,CCGD,CGAC,AHAAsD,AOGA,AfIA,CWPCpC,AIGA,AfIA,EAAElB,CQPC,AROA,CQPCuD,EGAE,AXOA3E,CWPCkK,AIGA,EAAE,CPHC,CAACtF,EGAE,GHAG,CGAC,EHAE,CROC,CAAC3D,CWPC,AHAA,EGAE,GXOG,EAAEG,CAAC,EAAE,EAAE,GeJG,CAAC,WDNa;ADFtE,EApBmCc,AJ+ChC,CAAC,CRvBJ,AOED,CCqBOJ,CNxBH,AWAA,AJHA,AKSA,CZNC,AWAA,CHGG,EDNA,AD2BI,AMlBJ,AfII9B,CCPZ,ASNSyB,AD2BI,AMlBJrB,CLTC,CCMG,AGHF,CPAK,CGHHqB,AKSA,CLTC,AKSAjB,CJHGY,AGHF,CPAKqF,CIGF,AE1B0B,ECuBzB,ACMA,CJHA,AGHCnE,ACMA,CJHA,CJHM,APUA,CWPJlB,AJHKmF,APUAnF,CAAC,CWPL,AXOM,CcVH,AdUIC,CcVH6I,CHGDxK,EVAd,AcGkB,ERNM,AQMJ,CDNC,APAIuB,GPUG,CcVH,AdUI,EOVE,EIGZ,AXOc,CWPblB,AJHc0G,APUA,GcVD,EAAE,CPAK,CAACD,KIGT,CAACvF,MAAM,EAAEG,AJHc,AQMJ,CAAC,CJHV,AJHe,EIGb,EAAE;AE1Bd,EL0B3C,EELD,EPGI,AFGA,AcGA,EDNI,EXAA,AQGI1B,AIGJ,AfII,CGVHiE,AYMAvD,EdHE,CDOKkB,CcVD,ACMF,CRNOmF,AQMNjG,CdHC,CAAC8B,GEHG,AYMA,CZNC,AIAM,AQMN,CJHH,AJHUiE,CIGTxG,AVAI,CDOK,CGVH,CAAC2D,CHUK,IOVM,APUF,COVGqB,APUFrE,CGVH,CAACc,AYMA,CZNC,AQGJ,AXOQ,CWPPJ,AJHU,AQMN,AfIIG,CGVH,AIAM,CIGV,CAAC,CAAC4I,CRHM,AIAM,CJALzG,AIAM,EPUA,CAAC1D,IGVA,AQGL,CRHMyB,AQGL/B,CRHM,CAAC,IWAM,GdUK,CAAC0B,CAAC,CAAC,CWPhB,AXOiB,CWPhBrB,MIGmB,CAAC,KJHR,CAACqB,EAAC,CAAC,CAACgJ,SAAS,EAAE,GAAGH,IAAI,CAAC3H,MAAM,CAAC+H,MAAM,CAAC;EDNlG,AD4BG,ENxBJ,AFGA,AOFC,EMDG,ACMA,IJHQ3K,AIGJ,AfII4B,CeJHlB,IAAI,CRNO,AQMNC,KfIS,CAACmB,CWPP,AXOQ,CWPPzB,EXOUgB,CeJH,CAAC,IfIQ,GeJD,AfIKK,CWPR,AXOS,CWPRA,AIGI,EJHH,AXOU,CWPT,CAACsG,CXOY,QWPH,CAAC4C,OAAO,CAAC5K,aAAK,CAACK,GIGgB,EAAE,OJHN,CAACqB,EAAC,CAAC,CAACgJ,SAAS,EAAE,CAAC;ERHrF,AFGA,ASPA,AD6BGtI,EKxBJ,ANAC,GCwBQ,CErBD,AFqBEF,AMlBFtB,EfIIgB,CQRZ,ECsBe,CAACwC,EAAE,AFxBE,CEwBD,CMlBD,ERNM,AQMJpE,CRNKuH,APUF,CAACxF,CAAC,GAAGT,EOVI,CAAC,GEwBC,ATdA,CQRrB,AOIY,CNkBW,AMlBVrB,GRNe,CAAC,MEwBGiH,CMlBR,MNkBe,EAAEuB,UAAU,EAAE;AC7BjE,EIKA,AJ9BwBnG,EP6BxB,AFGA,AQuBO,EErBJ,AHDA,EEjC2B,ADuDnBmG,AMlBJ5H,CLrCwBmC,CFiCxB,ARQIpB,CQRHiB,GDFO,ICEA,ACsBM,CAACsG,AMlBJ,CLrCwB,CAAC1E,AFiCzB,AOIEzE,AfIE,CQRH,ARQIkB,CScG,ECvDqB,CFiCxB,CAAC2B,CCsBO,GTdC,CAAC,CAAC,CQRH,AOIN,CAAC3C,AfIU,CScG,ATdF,CAAC,GScKwE,eAAS,CAACyC,QAAQ,CAACsB,UAAU,CAAC,EAAE;ACvD5B,EI8B/C,EXDA,AQMD,AVHC,EOEG,ACsBQrG,AMlBR,CAAC,CAAC,EPJE,ARQIR,CGXZ,AFGA,AOASoG,ACsBQ,CAACY,AFxBN,MEwBY,CAAC5H,CDtBP,CAAC6B,ARQI,CScK,ATdJb,CScK,KDtBH,EPAhB,COAmB,CAAC,CLHjBuC,CHWuB,EQRF,CLHjB,AKGkByD,ARQI3I,EGXpBmF,IAAI,EAAE,CKGmB,CAAC3B,OAAO,ERQF,CAACrD,SAAS;AcZ3D,EHKA,AG/BoCgD,EN+BrC,AOIA,EZPI,AFGA,EQsBYqG,ENzBR,AICA,APUIjH,CGXH,AICA,CAAC,CNEC,EEHE2C,AMyBU,ERtBR,AQsBUkE,CRtBT9F,CEHC,AW5B4B,EduCtB,CAACV,CGXH,CAAC,EFGE,CQsBW,CNzBT,CAAC,IAAIuC,EHWM,EGXF,CHWKnF,GGXD,CAAC,EAAE,aHWS,CAACI,UAAU;AcvCjB,EN+B5C,AOIA,EJJA,AVCD,IEHQ,AMyBQsC,AFxBZ,APUI,CScS,EAAE0G,CNzBP,CAACvH,QMyBgB,CNzBP,AMyBQmI,CNzBP9E,IAAI,EAAEC,IAAI,CAAC,CMyBS,CAACzC,CAAC;ERtB5C,EUDA,AHAA,AOIA,EZLG,AIAC,APWD,EScY+G,GEtBhB,EFsBqB,EAAEL,UAAU,CAACY,KEtBvB,QFsBoC,CAACP,KAAK;INxBrD,AFCC,AODA,AOIA,EJDG,AXSA,ESaY9G,AF1BX,EPaG,CQVR,AOIA,AfMSE,EWTE,GXSG,CAACC,GSaa,CTbT,CSaW9C,ATbV,OeNX,MfMwB,CQVjB,CRUmB,ISaM,CAACG,OTbI,ESaK,cEtBY;ERH9D,EQID,AVHC,EOEG,ADJC,AQQD,ENmBYyC,ATbR,EeNAkJ,CdJR,CDUY,CQVD,ARUE/I,IQVE,CAACwE,ARUE,CeND,AfMEvE,ESaU,CMnBT,CNmBWhD,CTbP,CAACL,CeND,CAACgG,CdJjBtC,AOAkB,GOIG,CdJjB,AcIkBuC,CfMF,CCVd,ADUehG,IeNO,CAACiG,CfMF,CAAC/F,CSaM,CAACM,CMnBD,GfMA,CAAC,KSaU;EN1BpD,AQIA,EHAD,EPAI,AcIA,AfMA,CAAC,CSaW6J,AF5BX,CPeE,CCVC,AcIA8B,CdJC1I,EQuBY,ATbV,CAAC,CCVC,AQuBU+F,GRvBP/F,EcIE,EdJE,CcIC,ENmBY,CAAC2G,CMnBT,CAACrE,IAAI,CAACC,MNmBgB,AMnBV,CNmBWqE,AMnBVnE,KNmBe,CMnBT;AZR3C,EAhC+B7C,AQoC/B,AHAA,EPCD,ADUA,EOhBK,AQWD,EZ1CkC,AM4DtByG,CN5DuB/F,CY0C/BqI,MNkBgB,EAAE,EN5DwB,CAAC5G,IAAI,GY0C7B,GAAG,IAAI+D,wBAAe,CAAC,IAAI,CAAC;AZ1CC,AQoCtD,EAnCmChG,AVoCnC,ADUA,EQXA,ADHD,EE4BY,AMjBR,CNiBS,CAAC,EMjBN8I,MAAM,GJ3C8B,AI2C3B,IAAI,CAACtK,GAAG,CAACuK,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEJ,SAAS,EAAEC,UAAU,EAAE,KAAK,CAAC;AJ3C5B,EVoC3C,AMJA,APcA,EQXA,EC0BW3C,AMjBR,IAAI+C,CPPR,KCwBsB,CAAC9C,AMjBR,GAAG,INiBY,AMjBR,CNiBSC,AMjBR3H,GAAG,CAACF,GPPf,EOOoB,CAAC,CAAC,ENiBU,AMjBR,CAAC,CNiBS,CMjBP,aAAa,CAAC;AdRpD,ADUA,EChDiCwB,ADGAA,ES6D1B,AF9BP,ECMG,AOOA,Ed/CoC,ADGA,CCHCU,ADGAT,Ce4CjCxB,EAAE,CPPC,CRrCmC,Ce4CjC,EPPE,CAAC0F,COOC,Cd/CmC,Ac+ClCzF,Cd/CmCiC,Ec+ChC,CPPC,AOOAhC,Gd/CqC,Gc+C/B,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;Ad/CW,ADGb,ES8D3C,CAAC,CDxBJ,ADPC,CE+BKmB,CMjBFkJ,INiBO,CAAC,AF7BZ,CQYU,CAACnK,QAAQ,CAAC,CAAC,CAAC,gBRZFiB,KAAK,EAAE;ECK1B,AC0BGA,IF9BA,AQaAoJ,CNiBK,CAACtJ,KAAK,AMjBJ,CNiBKkC,AMjBJqH,ENiBM,CAAC,QMjBI,CAACN,ENiBM,EAAE,KMjBC,GAAC,CAAC,CNiBMjE,CMjBJkE,MNiBW,EAAE3C,EMjBH,CAAC,ONiBY,EAAEgB,QAAQ,EAAE;ID1BvE,AC2BOA,EMjBJ+B,MNiBY,CAAC9B,AMjBN,CAACvI,QAAQ,CAAC,KAAK,CAAC,GNiBS,EAAE;EAClC,CAAC,CD5BJ,AC4BK,EF9BF,AQaAJ,EAAE,CAAC0K,EPTP,SOSkB,CAACN,SPTT1E,AOSkB,GAAC,CAAC,EPTd,AOSgB2E,EPTd,QOSwB,GAAC,GAAG,CAAC;ENmB3ChJ,ID3BA,ADJA,AQaArB,CNkBK,CAACmB,AMlBJ,CAACf,CPTC,ADJAqG,CCICf,EC2BM,CAACrC,EAAE,CD3BH,AC2BI,AMlBJ,CAAC,CRbC,CCICqC,EDJE,AQaA,CAAC,CRbC,ECIE,EC2BM,EAAE,UAASS,OAAO,EAAEuB,UAAU,EAAEgB,QAAQ,EAAE;ID1BxE,AC2BQA,EFhCe,AQenB,IAAI1C,ENiBQ,CAACb,GMjBH,GAAG,IAAIQ,SNiBe,EAAE,IMjBX,CAAC,IAAI,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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 130,\r\n    cardHeight: 205,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemy = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3,\r\n    enemyList: [],\r\n    enemyOnScene: []\r\n}\r\n\r\n","import { CST } from \"../CST\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\nlet graveYardArray;\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"background\", \"./assets/background.png\")\r\n    }\r\n\r\n    create() {\r\n        let bg = this.add.sprite(-110, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n        bg.alpha = 0.3;\r\n\r\n        let startX = 0;\r\n        let startY = 0;\r\n\r\n        \r\n        if (graveYardArray.length == 0 ) {\r\n            console.log(\"You have no discarded or used cards.\")\r\n        } else {\r\n            for (let i=0; i < graveYardArray.length; i++) {\r\n                graveYardArray[i].setVisible(true);\r\n                let discardCard = this.add.existing(graveYardArray[i]);\r\n                discardCard.x = startX + (i * 150);\r\n                discardCard.y = startY;\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth;\r\n                discardCard.displayHeight = gameOptions.cardHeight;\r\n            }\r\n        }\r\n\r\n        this.input.once(\"pointerdown\", function() {\r\n            this.scene.start(CST.SCENES.BATTLE);\r\n        }, this);\r\n    }\r\n}","import { gameOptions } from \"../../config\";\r\n\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(scene, x, y, sprite);\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.effect = effect;\r\n        this.cardType = cardType;\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth;\r\n        this.displayHeight = gameOptions.cardHeight;\r\n    }\r\n    \r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCost() {\r\n        return this.cost;\r\n    }\r\n\r\n    getEffect() {\r\n        return this.effect;\r\n    }\r\n\r\n    getType() {\r\n        return this.cardType;\r\n    }\r\n\r\n    setCost(cost) {\r\n        this.cost = cost;\r\n    }\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.on('pointerdown', () => callback());\r\n        this.changeCursor();\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changeCursor() {\r\n        this.setInteractive({ useHandCursor: true });\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","import {cardBackDimensions} from \"../config.js\";\r\n\r\nlet handArray = [];\r\nlet deckArray = [];\r\nlet deckTrackerArray = [];\r\nlet graveYardArray = [];\r\n\r\nfunction deckSetUp(scene, array, arrayTracker) {\r\n    let x = scene.game.config.width / 25;\r\n    let y = scene.game.config.height / 1.24;\r\n    for (let i=0; i < array.length; i++) {\r\n        let cardBack = scene.add.sprite(x,\r\n        y, 'cardBack');\r\n        cardBack.setOrigin(0.5, 1);\r\n        cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n        cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n        \r\n        arrayTracker.push(cardBack);\r\n        x += 4;\r\n    }\r\n}\r\n\r\n// implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\nfunction shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i+1));\r\n        [array[i], array[j]] = [array[j], array[i]]\r\n    }\r\n}\r\n\r\nexport {handArray, deckArray, deckTrackerArray, graveYardArray};\r\nexport {deckSetUp, shuffle};\r\n\r\n","import { graveYardArray } from \"./deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.setDepth(0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","export default class Character extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.health = 50;\r\n    }\r\n\r\n}","import Character from \"./characters\";\r\nimport { deckArray, handArray, deckTrackerArray, shuffle, deckSetUp } from \"./deck\";\r\n\r\nexport default class Player extends Character {\r\n\r\n    constructor(scene, x, y, sprite, deck) {\r\n        super(scene, x, y, sprite);\r\n        this.actionPoints = 6;\r\n        this.deck = deck;\r\n        this.spriteType = \"player\";\r\n        this.keepCards = [];\r\n        this.keepCardsLimit = 2;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    selectCardInHand(player) {\r\n        // disable drag first on all cards\r\n        this.disableDragOnCards();\r\n        \r\n        for (let cards of handArray) {\r\n            cards.on(\"pointerdown\", function(pointer) {\r\n                // this is referring to the clicked object rather than player now\r\n                if (player.keepCards.includes(this)) {\r\n                        // removes the card from list \r\n                    player.keepCards.splice(player.keepCards.indexOf(this), 1);\r\n                    this.clearTint();\r\n                } else {\r\n                    if (player.keepCards.length < player.keepCardsLimit) {\r\n                        player.keepCards.push(this);\r\n                        // add a visual effect when clicked\r\n                        this.setTint(0x999999);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    moveCardsBackInDeck(scene) {\r\n        // remove the keep cards button \r\n\r\n        // get indexes of cards not in this.keepCards List\r\n        let indexList = [];\r\n        for (let cards of handArray) {\r\n            if (!this.keepCards.includes(cards)) {\r\n                let index = handArray.indexOf(cards);\r\n                indexList.push(index);\r\n            }\r\n        }\r\n\r\n        // remove the indexes in reverse order not to mess up the loop\r\n        for (let index=indexList.length-1; index >= 0; index--) {\r\n            deckArray.push(handArray[indexList[index]]);\r\n            handArray[indexList[index]].setActive(false).setVisible(false);\r\n            handArray.splice(indexList[index], 1);\r\n        }\r\n\r\n        // remove tint of cards remaining in hand\r\n        for (let cards of handArray) {\r\n            cards.clearTint();\r\n        }\r\n\r\n        // set up the deck sprites and deckArray and organise the cards on screen\r\n        shuffle(deckArray);\r\n        deckSetUp(scene, deckArray, deckTrackerArray);\r\n        scene.arrangeCardsInCenter(handArray);\r\n        this.enableDragOnCards();\r\n\r\n        // rest of turn ensues\r\n    }\r\n\r\n    disableDragOnCards() {\r\n        for (let i=0; i < handArray.length; i++) {\r\n            handArray[i].input.draggable = false;\r\n        }\r\n    }\r\n\r\n    enableDragOnCards() {\r\n        for (let i=0; i < handArray.length; i++) {\r\n            handArray[i].input.draggable = true;\r\n        }\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints = actionPoints;\r\n    }\r\n\r\n    getDeck() {\r\n        return this.deck;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n}","import Character from \"./characters\";\r\n\r\nexport default class Enemy extends Character {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n        this.spriteType = \"enemy\";\r\n        this.setInteractive();\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n}","import { handArray, graveYardArray } from \"./deck\";\r\nimport { gameOptions, enemy } from \"../config\";\r\n\r\nexport default class InteractHandler {\r\n    constructor(scene) {\r\n\r\n        scene.input.on('dragstart', function (pointer, gameObject) {\r\n            gameObject.tooltip.removeTooltip();\r\n            scene.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            scene.tweens.add({\r\n                targets: scene.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                handArray.splice(index, 1);\r\n            }\r\n\r\n            scene.arrangeCardsInCenter(handArray);\r\n\r\n        }, scene);\r\n\r\n        scene.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        scene.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                let yOffSet = 50;\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    y: gameObject.startPosition.y - yOffSet,\r\n                    displayWidth: gameOptions.cardWidth * 2,\r\n                    displayHeight: gameOptions.cardHeight * 2,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.showTooltip();\r\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\r\n            }\r\n        }, scene);\r\n\r\n        // hover out listener\r\n        scene.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    y: gameObject.startPosition.y,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.removeTooltip();\r\n            }\r\n       }, scene);\r\n\r\n        scene.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        scene.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        scene.input.on('drop', function(pointer, gameObject, dropZone) {\r\n            gameObject.input.enabled = false;\r\n\r\n            // setting card in the middle \r\n            gameObject.displayHeight = gameOptions.cardHeight;\r\n            gameObject.displayWidth = gameOptions.cardWidth;\r\n            gameObject.x = dropZone.x;\r\n            gameObject.y = dropZone.y + dropZone.y / 3;\r\n            \r\n            graveYardArray.push(gameObject);\r\n\r\n            // remove the card from the scene after 500ms\r\n            setTimeout(function() { \r\n                gameObject.activateCard(scene);\r\n                gameObject.setActive(false).setVisible(false); \r\n            }, 500);\r\n\r\n            dropZone.renderNormalOutline(scene);\r\n\r\n            scene.cameras.main.shake(100, 0.02);\r\n\r\n        });\r\n\r\n        scene.input.on(\"dragend\", function(pointer, gameObject, dropped) {\r\n        \r\n            if (!dropped) {\r\n                handArray.push(gameObject);\r\n                gameObject.displayHeight = gameOptions.cardHeight;\r\n                gameObject.displayWidth = gameOptions.cardWidth;\r\n                scene.arrangeCardsInCenter(handArray);\r\n            }\r\n        }, scene);\r\n    }\r\n\r\n}","export class Tooltip extends Phaser.GameObjects.Text {\r\n    constructor(scene, x, y, label) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 20,\r\n            y: 20\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\r\n        scene.add.existing(this);\r\n        this.visible = false;\r\n        this.setDepth(2);\r\n    }\r\n\r\n    showTooltip() {\r\n        this.visible = true;\r\n    }\r\n\r\n    removeTooltip() {\r\n        this.visible = false;\r\n    }\r\n    \r\n    setLabelCoordinates(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class DamageCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (this.effect.target == \"single\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\r\n                    this.setHealth(this.getHealth() - card.effect.damage);\r\n                    this.heartText.setText(this.getHealth());\r\n\r\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\r\n                        enemy.enemyOnScene[j].input.enabled = false;\r\n                    }\r\n                })\r\n            }\r\n        } else if (this.effect.target == \"all\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\r\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\r\n            }\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        return \"Damage: Inflicted damage is on the enemy's health.\";\r\n    }\r\n    \r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ComboCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        console.log(this);   \r\n    }\r\n\r\n    getLabel() {\r\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\r\n    }\r\n    \r\n   \r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ReloadCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // nned to account for next turn side effects\r\n    // such as losing action points next turn\r\n    activateCard(scene) {\r\n        let card = this;\r\n    }\r\n\r\n    getLabel() {\r\n        return \"AP: \\nAction Points are used when activating a card.\"\r\n    }\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class HealingCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // needs to access the player's health and armour\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (card.effect.target == \"health\") {\r\n            console.log(this);\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        if (this.effect.target == \"armour\") {\r\n            return \"Armour: \\nRemoved before health when receiving damage.\";\r\n        } else if (this.effect.target == \"health\") {\r\n            return \"Health: \\nIf this reaches zero, you die.\"\r\n        }\r\n    }    \r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/button.js';\r\nimport { gameOptions, enemy} from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/zone.js\";\r\nimport Player from \"../helpers/classes/player.js\";\r\nimport Enemy from \"../helpers/classes/enemy.js\";\r\nimport {handArray, deckArray, deckTrackerArray, graveYardArray, shuffle, deckSetUp} from \"../helpers/classes/deck.js\";\r\nimport InteractHandler from \"../helpers/classes/interactHandler.js\";\r\nimport DamageCard from \"../helpers/classes/cards/damageCard.js\";\r\nimport ComboCard from \"../helpers/classes/cards/comboCard.js\";\r\nimport ReloadCard from \"../helpers/classes/cards/reloadCard.js\";\r\nimport HealingCard from \"../helpers/classes/cards/healingCard.js\";\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        let cards = data;\r\n        // make these class variables to turn them off on click\r\n        this.endTurnButton;\r\n        this.keepCardButton;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemy.spriteWidth,\r\n            frameHeight: enemy.spriteHeight\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let interactiveHandler = new InteractHandler(this);\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        let player = new Player(this, 0, 0, \"guy\", handArray);\r\n        player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        let heartext = this.add.text(0,0, player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        let actiontext = this.add.text(0,0, player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        // set it so a rectangular zone appear with overflow\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.start(CST.SCENES.DISCARD_PILE, graveYardArray);\r\n        }, this);\r\n        \r\n        // load cards\r\n        this.loadCards();\r\n        \r\n        this.endTurnButton = new Button(gameWidth, gameHeight/2, \"End Turn\", this, this.endTurn.bind(this, player, this.endTurnButton), '#202529');\r\n        this.keepCardButton = new Button(gameWidth, gameHeight/2, \"Keep Cards\", this, this.keepCard.bind(this, player, this.keepCardButton), '#202529');\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 200, 200, 500, 500);\r\n\r\n        // shuffle the deck, draw it and set up the cards in hand;\r\n        shuffle(deckArray);\r\n        deckSetUp(this, deckArray, deckTrackerArray);\r\n        this.drawCard(gameOptions.startCards);\r\n\r\n        // spawning enemies according to spritesheet randomly\r\n        for (let i=0; i < enemy.numberOfSprites; i++) {\r\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemy.enemyList.push(enemySprite);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n    }\r\n\r\n\r\n    loadCards() {\r\n        // damage cards\r\n        let cannon = new DamageCard(\"cannon\", 1, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\r\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\r\n\r\n        // combo cards\r\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\r\n        \r\n        // reload cards\r\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\r\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -1}, this, 0, 0, \"overload\");\r\n\r\n        // healing cards\r\n        let medkit = new HealingCard(\"medkit\", 1, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\r\n        let kevlar = new HealingCard(\"kevlar\", 2, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\r\n\r\n        deckArray.push(cannon);\r\n        deckArray.push(grenade);\r\n        deckArray.push(headshot)\r\n        deckArray.push(reload);\r\n        deckArray.push(overload);\r\n        deckArray.push(medkit);\r\n        deckArray.push(kevlar);\r\n    }\r\n    \r\n\r\n    // draw an amount of cards\r\n    drawCard(amountOfCards) {\r\n        for (let i=0; i < amountOfCards; i++) {\r\n            let lastCard = deckTrackerArray.pop();\r\n            lastCard.destroy();\r\n\r\n            let drawCard = deckArray.pop();\r\n            handArray.push(drawCard);\r\n            drawCard.cardInHand(this);\r\n            this.arrangeCardsInCenter(handArray);\r\n        }\r\n    }\r\n\r\n\r\n    arrangeCardsInCenter(handArray) {\r\n        // organise code based on the bottom middle of screen\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            card.startPosition = {\r\n                x: card.x,\r\n                y: card.y,\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(2);\r\n        }\r\n    }\r\n\r\n\r\n    // start keep cards and make keep cards button appear\r\n    keepCard(player) {\r\n        this.keepCardButton.visible = false;\r\n        this.endTurnButton.visible = true;\r\n        player.selectCardInHand(player);\r\n    }\r\n    \r\n    \r\n    // ends the player's turn\r\n    endTurn(player) {\r\n        this.keepCardButton.visible = true;\r\n        this.endTurnButton.visible = false;\r\n        player.moveCardsBackInDeck(this);\r\n    }\r\n\r\n    \r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n            randomEnemy.setDepth(1);\r\n\r\n            enemy.enemyOnScene.push(randomEnemy);\r\n        }\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport HandCard from \"../helpers/classes/cards/handCard\";\r\nimport { BattleScene } from \"./battleScene\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/Overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\r\n    }\r\n\r\n    create() {\r\n        this.scene.add(CST.SCENES.BATTLE, BattleScene, false);\r\n        this.scene.start(CST.SCENES.BATTLE);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport { LoadScene } from \"./scenes/loadScene\";\r\nimport {BattleScene} from \"/src/scenes/battleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 1000,\r\n    height: 800,\r\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\r\n    scene: [\r\n        LoadScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}