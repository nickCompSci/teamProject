{"version":3,"sources":["src/CST.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/HandCard.js","src/helpers/font.js","src/helpers/classes/Button.js","src/helpers/classes/Deck.js","src/helpers/classes/Zone.js","src/helpers/classes/Characters.js","src/helpers/classes/Player.js","src/helpers/classes/Enemy.js","src/helpers/classes/InteractHandler.js","src/helpers/classes/cards/Tooltip.js","src/helpers/classes/cards/DamageCard.js","src/helpers/classes/cards/ComboCard.js","src/helpers/classes/cards/ReloadCard.js","src/helpers/classes/cards/HealingCard.js","src/scenes/BattleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","graveYardArray","DiscardPileScene","key","data","load","spritesheet","frameWidth","frameHeight","image","bg","add","sprite","setOrigin","setScale","alpha","startX","startY","length","console","log","i","setVisible","discardCard","existing","x","y","displayWidth","displayHeight","input","once","scene","start","Phaser","Scene","HandCard","name","cost","cardType","effect","visible","setInteractive","setDraggable","GameObjects","Sprite","loadFont","url","newFont","FontFace","then","loaded","document","fonts","catch","error","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","on","useHandCursor","newX","newY","Text","handArray","deckArray","deckTrackerArray","deckSetUp","array","arrayTracker","game","config","width","height","cardBack","push","shuffle","j","Math","floor","random","Zone","setRectangleDropZone","setDepth","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Character","frame","health","Player","actionPoints","spriteType","Enemy","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","min","max","InteractHandler","pointer","gameObject","tweens","targets","angle","duration","background","index","indexOf","splice","arrangeCardsInCenter","dragX","dragY","type","includes","yOffSet","startPosition","depth","tooltip","showTooltip","setLabelCoordinates","removeTooltip","dropZone","renderActiveOutline","enabled","setTimeout","activateCard","setActive","cameras","main","shake","dropped","Tooltip","wordWrap","DamageCard","getLabel","cardInHand","card","target","setHealth","getHealth","damage","setText","ComboCard","ReloadCard","HealingCard","BattleScene","cards","gameWidth","gameHeight","interactiveHandler","hud_bg","tileSprite","card_bg","setPosition","player","heart","heartext","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","loadCards","endTurnButton","endTurn","bind","changeCursor","enemySprite","spawnEnemyOnScene","cannon","grenade","headshot","reload","amount","sideEffects","overload","medkit","kevlar","bottomOfScreen","screenCenterX","yDelta","cardX","lastCard","pop","destroy","drawCard","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","LoadScene","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AKAP,AKAA,ACAA,AFAA,AFAA,AOAA,ADAA,AVAA,AaAA,ADAA,AdAO,AGAA,AeCP,AFDA,AfAA,AgBAA,IlBAaA,ACAAK,GDAG,EIAA6D,CJAG,KCAK,EGAA,CHAG,AGAFT,IAAI,EAAEU,GAAG,EAAE;ACAF,AKAG,ACCrC,AFDqC,AFCrC,AOAA,ADAA,AVD2C,AaC3C,ADAA,AICA,AFDA,AfAA,AgBAA,ElBAIlE,ACAAK,AGAA,IHAI,AGAA8D,EJAE,ACAA,CAAC,CDAC,GIAG,GAAG,IAAIC,QAAQ,CAACZ,IAAI,EAAE,aAAa,CAAC;ACDjB,AKAG,ACCU,AFDV,AFCG,AOCxC,ADAA,AVF2C,AaE3C,ADAA,AICA,AFDA,AfDgD,AgBChD,EjBAIlD,AGAA6D,EJAIlE,IAAI,CIAD,CJAG,AIAFwB,EHAE,EAAE,AGAA,CHAC,CDAG,AIAF,CAAC4C,IAAI,CAAC,UAAUC,MAAM,EAAE;ACFR,ACAlC,AIAqC,ACCU,AFDV,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AIFpC,AFGA,AfFgD,AgBCJ,EjBCxC/D,EDAIL,AIAAqE,MJAM,CCAD,CDAG,AIAA,CHAD,AGAEC,GHAC,EGAI,CAACzC,CJAC,EIAE,CAACuC,MAAM,CAAC;ACHA,ACElC,AIFqC,ACCU,AFDV,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AEEpC,AfHgD,AgBCJ,EjBExC9D,AGAA,CAAC,CJAGL,AMFJqF,AFEE,CAACf,KAAK,CAAC,CHAC,CKFD,CLEG,EDAI,AMFJ,CLEG,CDAG,AMFJ,GFEKC,KAAK,EAAE;ACJI,ACEf,AIFkB,ACCU,AFDV,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AIGpC,AFAA,AfJgD,AgBCJ,ElBGxC,ACAAjE,EGAI,OAAOiE,GHAC,EAAE,AGAE,GHAC;ADCrB,AKNkC,ACGlC,AIHqC,ACCU,AFDV,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AEIpC,AfLgD,AgBCJ,ClBI3C,CCAGhE,AGAA,CAAC,CEHD+E,AFGE,OHAO,EKHA,ALGE,CAAC,EKHA,EAAE;ANGjB,AKNiC,ACGf,AIHkB,ACCU,AFDV,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AXKpC,AeAO,AFAP,AfNgD,AgBCJ,EjBKxC9E,EkBAOoF,MAAM,GlBAF,AkBAK,ElBAH;AIPiB,ACIlC,AIJqC,ACCU,AFDV,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AdMpC,AgBAA,AfPgD,AgBCJ,CjBM3C,CkBAGoD,EbJAzD,AKDiB2C,EQKb,EAAEhF,MAAM,CAACkL,IRLmB,AQKf,CbJD,GAAG,EAAE,uBKArB,yBAAYpL,KAAK,EAAE;ANJW,ACIR,AIJW,ADAA,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AdMnC,AgBCD,AfRgD,AgBCJ,EPErB,AQKnB6C,KAAK,EAAE,IAAI;AdTmB,ACKlC,AILqC,ADAA,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AdQ7B,AgBAP,AfTgD,AgBCJ,EPIpC7C,AQIJ8C,EbLA5E,ALKST,GUJA,CAACqC,AQIJ,EAAE,GRJO,AQIJ,CRJKkC,EAAE,CAAC,CLDL,GAAG,CLKU,CKLR,ELKW,GUJA,EAAE,UAAUmD,OAAO,EAAEC,UAAU,EAAE;ANNjC,ACKV,AILa,ADAA,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AESpC,AfVgD,AgBCJ,EjBSxC1H,AkBAA2N,ERJQrL,GQIH,ERJQ,AQIN,CRJOqF,CVIL,EAAE,GUJS,AVIN,CUJOzG,GAAG,CAAC;ANPK,ACOlC,AIPqC,ADAA,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AEUpC,AfXgD,AgBCJ,EjBUxCjB,EkBDS2N,ERHGhG,GLDP9C,CaIU,ElBCL,AkBDO,CRHE,CVIP,CUJS4C,GLDP,CAACpF,KAAK,CKCW,CLDTyC,IaIa,CbJR,EAAEC,YAAY,EAAE;ADPb,AKAG,ADAA,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AdWpC,AgBD8D,AfXd,AgBCJ,CjBW3C,CKLG,EERiBwB,AIARiD,AOW4BoE,EbHjC7L,AKCQ6F,CLDP,CaGoC,EbHjCvF,AaGkCE,CRFzB,ACTD,EJAU,AGSP,CAAC,CLDP,CAACyC,AaGkC,CAAC6I,GbH/B,CAAC5I,CaGmC,CAAC6I,GAAG,CbHjC,CAAC5I,KAAK,GAAG,EAAE;ADPxC,AKDqC,ADAA,AFCG,AOCJ,ADAA,AVFO,AaEP,ADAA,AdWnC,AgBD6D,AfXd,AgBCJ,EVFd,AFS1B,AMTgB,ETECzC,AgBS2CsL,EbFxD/L,AKCQD,CLDP,AKCQ,EAAEyF,CLDPnF,EHPiB,EgBS6C,CbFzD,CAAC2C,AKCQ,AQCkDzC,CRDjDR,CAAC,ELDN,CAACkD,CaE2D,CAAC4I,IbFtD,CAAC1I,AaE0D,CAAC6I,KbFrD,GAAG,IAAI;ADR3C,AKDqC,ADAA,AFCG,AOCJ,ADAA,AGAA,ADAA,Ada7B,AgBHuD,AfT9D,AgBD4C,EVFd,AFU1B,AHRyB,ASFT,AOWiF,CAAC,CdRjFnK,AKDAgD,ADAAH,AFCAf,ANYR1F,ACZTM,ESQYyB,CLDP,AKCQ,CJRQ,CGDC,ACSPwF,AVID,CIZS,AIDA,CHQd7F,CAAC,ALKO,GKLN,CAAC,AKCU,CAACK,CLDTL,AKCU,ATRV,CIOC,GAAGmD,KAAK,CAACtD,MAAM,EAAEG,CAAC,EAAE,EAAE;AQRL,ADAA,AGAA,ADAA,AEU0B,AfT3C,AgBDyB,EbCjB,AGFvB,AECsB,ADAC,AFCF,AJDI,ASDzB,AXeAzB,AkBJAmC,EbDI,AJNK7B,ESOGqH,CQAP,CbDGzC,CaCD,CACHoI,GlBGO,CUJS,CVIP,CKLG,AKCM,GLDHnL,AMVPA,AXeK,CCXQ,CMJbA,GFUY,AMVP,CNUQpB,CEVR,AIAEc,CAAC,CJADA,AFUS,CEVR,AFUSb,AMVPc,CAAC,AOYV,CXZSA,CAAC,AIAE8B,AOarBtD,EXbqBU,CFUU,CAACa,CAAC,AMVP,ENW1BC,AMX4B,CJAD,AFW1B,EEX4BwE,AFW1B,KEX+B,EAAE,GFWvB,CAAC,aaEE;ALZY,ADAA,AGAA,ADAA,AIcpC,AFJ8D,ACVlB,CCc3C,Cdb0B,AKDD,ADAC,AFCF,AJArB,AFcArG,ACZyB,EMJe,AFYpCiF,AKAI,ACZwB,AMGvBoI,CPSA,CAAC,MLAE,CAACrM,AYTK,CjBaN,EAAE,GAAG,CEdLuB,EGUU,CAAC,CHVP,EGUU,AHVRC,EGUU,CAAC,CAAC,AHVR,EAAEC,QAAQ,EAAEC,MAAM,EAAER,KAAK,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM,EAAE;AWD/B,ADAA,AGAA,ADAA,AIclC,AFJ4D,EZP1D,AKFA,ADCA,AFAA,ANcAd,ACbyB,AgBDP,EVHsB,AFapCgF,AKAI/C,ARXuD,ASF/B,KDanB,CAACqF,ELAF,CAACzF,GKAO,AJVRI,CGDAA,ACWSpB,AVIN,CIbHc,AIDAM,CJCC,AJaI,CUJO,AVIN,CIbHL,AMSU,AJVR,CFCD,AKFC,CDCA,AFAED,CFCD+B,AKFC/B,AHCC,CDUK,AIXL,ADCDA,CAAC,AFAEC,CGDAA,AHCC,CDUKlC,AIXL,ADCDkC,CJCC,AIDA,AFAEkD,CGDAhE,CLEAmB,AIDAnB,GFAK,EFCA,AKFC,AHCCiE,CEAD,CJCCpB,AKFCyC,CDCAjH,GFAK,CGDA,ADCD,CFAG,CGDA,ADCD,CJCC,EAAEyE,MCSI,CAACjE,CDTG,EAAE,MCSI,GAAG,CAAC;AQZ5B,ADAA,AGAA,ADAA,AIgBpC,AFN8D,EhBO1DM,ACbA,AgBFkB,EbCkC,AGHhD,AFaA+E,AIZoC,ADCD,AFAC,AOAvB+E,ADAAT,AVD8C,AaC9CW,ADAAD,AHFb,AOgBJpF,ERHY2C,EQGR,GlBCK,AkBDF,CbHK,CAACzF,AKAM,AGXO,Abef,CYfgB,AEAA,CJWNG,AKXO,Afef,AkBDFE,KRHe,CAACuF,AQGV,CAACmG,IbHQ,AaGJ,CAAChJ,EbHMnF,CEbnBuC,AIAAA,AVII,CSSuB,EQGR,CAAC,CXhBf,AIAA,EJAEN,AIAAA,CJAC,AIAA,EJAEC,AIAAA,CJAC,AIAA,EJAEd,AIAA4C,KAAK,CJAC,EAAE0C,IFagB,CEbX,AFaYxG,UAAU,GAAG,CAAC;AWHJ,EHRhC,ADAC,AGAC,ADAD,AdgB3BM,AiBfA,EbAoD,AGFhD,AFcAyE,AIdoC,ADCD,AFAC,AJApC,ASDA,AVGU,ESUF1D,IHbHoF,AIAAxC,CDaQ,EAAE,CVIP,EOjBG,AFcC,AKDM,AVIR,CKHGoB,AMdD,EJAE,CIAC,CJAC,AFcC,CAACD,CYZR,OZYgB,AHbpB/C,CGaqB,IHbhB,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM;AFiBjC,AgBT8D,ChBS7D,CajB6B,ADAC,AGAC,ADAD,EVEvB,AGHiB,AFejBa,AIdA,ADCA,AFAA,AJAA,ADCU,AgBDA,CZaT,CKDO8F,ACbJ9F,CAAC,ENcA,AMdE,CNcD,AHbDW,CSDI,GDaO,ARZP,EQYS,CRZNA,IAAI,QDEV,CGDAL,AKFAA,ADCAA,CFAAA,IFCK,AKFA,ADCA,CFAA,CFCEN,AKFAA,ADCAA,CJCC,AKFA,ADCA,AFADA,CAAC,CFCEC,AKFAA,ADCAA,CJCC,AKFA,ADCA,AFADA,CAAC,CFCE8B,AKFA5C,ADCAA,CFAAgE,IFCK,CKFC,ADCA,AFAD,EGDGsB,AHCDrB,KGDM,CHCA,GAAES,oBAAoB,CAAC7D,CAAC,EAAEC,CAAC,CAAC;ANgBnE,AgBT6D,ETR1D,AFeA,AQdA,ADAA,AGAA,ADAA,EVEI,AKFA,ACaI,AFZJ,AFAA,AJAA,AeDU,CPaL,CAAC,ACbFA,AVGAvB,CUHC,EAAE,AVGA,CGDFwD,AKFA7C,ADCAuF,AFAAxF,AJAAwB,CDEI1D,GCFA,GECG,AFDA0D,CODC,CAAC,AHCA,ALEF,CGDG,AKFA,AHCA,ALEFzD,CQHG,AHCA,AODRwD,AXCQ,CMAC,AIDTA,AEAAA,CRCU,ASDVA,CTCW,CEAC,AFAA,AODR,CLCS,AIDT,AEAA,AbGO,CYHLC,AEAF,AdGQtD,CWHNsD,AEAAA,CCAAA,AECR,EJDY,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,MFAQ,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAER,AEAF,CHAEA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CDAEN,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEC,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEd,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE,AEAF,CHAE,AEAA,CCAA;AVenE,AWR8D,ETRzD,EEEG,ACcI,AFbJ,AFAA,AOF2D,ADAA,AVE3D,AaF2D,ADAA,AHC3D,AVGA,CUHC,AVGA,CGDGa,AaDAtB,CbCC,CMYGsH,CNZD,AaDA,CbCC,AKFHtB,ADCAlH,AFAAsG,AJAAhD,CeAI5D,EPaI,CFbJ,ECDE,ACcKyF,ARbL,CMACnF,CFAC,CGDC,AHCA,AJAAsD,AeAF,CXAG,AWAF3D,CTAG,AFAA,IGDG4H,APCC,CeAD,CAAC3H,IPaK,CAAC6I,OAAO,CDdC,ACcAP,CDdC,EAAE,EAAE,EAAE,CAAC,ECcE,CAAC;AHhBhD,ASQyD,ETZvBlF,ANUnC,EQHI,ACcI,AFbJ,AFAAF,AOH2D,ADAA,AVG3D,AaH2D,ADAA,AHE3D,AMCA,CAAC,CbCGL,CAAC,CGTgC,AGqB7B+F,CNZD,AGT+B9E,ADQjC,CGDA2D,ADCAA,AFAC3F,AJAD2B,ASDAsB,GDcQ,AJbJ,CAACpC,IIaQ,ARbL,CQaM,CHrB8B,AEOlC,ACcK,AFbL,AGDA,CJPmCoB,ALQlCN,ASDA,CDcM,AJbJ,CGDA,ADCA,IDRsC,AIOnCqB,ETCG,CODC,CDCC,GGDE,CAAClC,CAAC,EAAE,MAAKkC,OAAO,CAACjC,CLCrB,AKDsB,CAAC;AJPS,AFsBhE,AWV8D,EfFzD,AgBDD,EbCI,AKFA,ADCAK,AFAA,AOHA,ADAA,AVEyB,AaFzB,ADAA,AHEA,CPEC,CMYOqC,GFbH,CCDA3B,ADCC9B,AFAD6E,AKDA3B,GHCI,CAACrC,IGDG,CAAC,CLCC,CIaE,CAACmG,AFbA,CFAA,CGDC,EAAE,ECcG,CAACF,CGhBnBrF,ADAAA,AGAAA,ADAAA,CRGoB,CAAC,CAAC,CIaE,AGhBpB,ADAA,AGAA,ADAA,EJgBsB,AGhBpBC,ADAAA,AGAAA,ADAAA,CJgBqB,CAAC,EGhBlB,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CNGJ,KKHU,ADAA,AGAA,ADAA,EDAER,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEN,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEd,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA;ATiB/D,AWX8D,EdH1D,AeAC,EbEG,AKDA,ACaI,AFdqB,AFCzB,AOHA,ADAA,AGAA,ADAA,AbGH,EUFmBkD,GNefkB,CDZInE,AKDA4F,AHAAhB,AOHA2C,ADAAA,AGAAA,ADAAA,MTgBG,CAAC5D,AQhBG,ADAA,AGAA,ADAA,EVIE,AKDA,CLCC,AEDA,AOHA,ADAA,AGAA,ADAA,CVIC,AOHe,CNejB,AIbGzC,CLCC,AEDA,AKFe,CNejB,AQhBGmH,ADAAA,AGAAA,ADAAA,EVIE,CAAC,AKDA,CAACvI,GAAG,AHAA,CGAC+F,AHAA,AKFe,CLEd,GGAG,CAAC3E,GIHN,ADAA,AGAA,ADAA,CDACA,ADAAA,AGAAA,ADAAA,CLGU,CAAC2C,GIHN,ADAA,AGAA,ADAA,CLGU,CAACC,AIHTlD,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,GDAC,ADAA,AGAA,ADAA,ELGa,CAACmD,GIHTjD,ADAAA,AGAAA,ADAAA,ELGc,GAAG,EAAE,EAAE,CAAC,EAAE,AIHZ,ADAA,AGAA,ADAA,EDAED,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CLGYyE,KIHPkD,ADAAA,AGAAA,ADAAA,CLGa,EAAE,KIHP,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA;AEKpB,EXY1D,AGdA,ANDC,EEGG,AMaItH,AGjBJA,ADAAA,AGAAA,ADAAA,AEOKiI,AfLR,AgBDA,ERCkFrD,AEFnCA,CNgB3C,EKCQ,AGjBJ,ADAA,AGAA,ADAA,CVIA/C,AMaKgE,AGjBJjH,ADAAA,AGAAA,ADAAA,CTgBDU,AId+E,AEFnC,AVIrD,CIYU,CIdgF,AIF7E,ADAA,AGAA,ADAA,AHA0C,CEAzCG,ADAAA,AGAAA,ADAAA,CTgBDgD,AWTO,GPL2E,ELE5E,ACYD,CDZE,ACYDtD,CQhBG,ADAA,AGAA,ADAA,AHA0C,GVI3Dd,EGAoBuD,ACYA,EJZhB,CIYmB,AKCM,CLDL,AKCMS,ATbxB,EIYoB/C,CDZC,ACYA,CDZCI,CAAC,CCYC,CDZC,ACYA,EAAEJ,CAAC,EAAE,CDZAsC,CCYE,CKCC,CAAC,INbG,CAACjC,CAAC,ASJtB,ADAA,AGAA,ADAA,CVIuB;EMe/C,AFjBH,AQKmB,CNYf,CNdD,ACYA,ACbA,AOHA,ADAA,AVAH,AaAG,ADAA,AGAH,CPkBMK,CDjB0F6E,AEF/BuC,AVK9DlJ,EIYIgF,CAAC,CDZApB,AMcG,AJfH6B,AOHA4D,ADAAA,AGAAA,ADAAA,CJkBI,AOhBb,CZcYpE,EIf6F,AEF/B,ENiB1D,AIf2F,AEF/B,CNiB3DC,CDZA,CAAC,CSJC,ADAA,AGAA,ADAA,AbID,CKDE,AOHApD,ADAAA,AGAAA,ADAAA,CTgBE,CAACmD,AJZF9E,CKDE2B,EOHE,ADAA,AGAA,ADAA,CTgBE,AQhBD,ADAA,AGAA,ADAA,AbID,CIYGqD,CCbA,CAACzE,AWDnB,GXCsB,CDaE,ACbDgF,EDaG,IAAItE,CAAC,CCbA,EDaC,ACbC,CDaA,CAAC,CAAC;EKIzCU,AMdgB,EXU0B,AIfmE,ADAhH,AFGG,AOJuB,ADAA,AVA1B,AaA0B,ADAA,AbK3B,CQJkH,CLG9F+B,AKH+F,AQE/G,CPiBK,CAACjC,ACrBmE+C,ELKpEgB,AWDD,CfDR,AeCSvF,EPiBM,ACrBmE,CDqBlE0D,CLHW,AMlByD,AMIvE,CZceS,AKGV,AOjBJ/D,CPiBK,INhBgB,ACaF,AYdd,CZcewE,AYdd,CbCiBvB,ACaF,AKGV,CLHW,CKGT,CLHWc,GCbV,CAACzC,AWDD,CZce,AHfhCA,CGeiCV,AYdd,CZce,CAAC,CAAC,AKGX6F,AJhBF,CAAC,AJFnB,EAAE,IQkByB,EAAEC,UAAU,EAAEU,GOjBA,CAAC,CPiBI,EAAEC,KAAK,EAAE;EGnBvE,ADAA,AGAA,ADAA,AEMA,AfFC,EGD4C,ACaxCtD,AIfD,ACmBI2C,AFpBP,AFGmC,CFAU,CAAC,AFD3C,ASJmF,AMKnF,GZaM,CAAC9F,AIfFoF,APCD,AeCA,CZaI,AGdZ,ANASjE,AeCAnC,CZaI,EKIK,CAACoB,AOjBN,CPiBO,AOjBNhB,EfDE,CODE,ACmBKoH,CDnBJhH,CPCA,AeCA,CfDC,AeCA,EPiBQ,CMdd,CdJU,CAAC2B,EODG,CAAC,CAAC,AQED,CTDjB,CCDoB,AQED,CRFE,APCD,CODE,0BQEyB,CAAC;EXE5D,AOLC,ADAA,AGAA,ADAA,EVIG,ACYWgC,AIbXzC,ACkBIoF,ACvBgF,AKQ1E,AfFb,CUNwF,CHKrF,ANAA,ASLsF,AMMtF,GZYgB,AIbX,CLCApD,ACYYkB,AIbXtE,APAF,AeCA,CZYc,AHbb8B,AeCApC,CbAE,ACYY,CDZX,AKDC,ADAF,CCAGmB,ACkBI,CAACE,AOjBN,CPiBO,AOjBNjB,CTDC,CAAC0F,CEkBO2B,EOjBJ,CRDG,AQCF,EPiBQ,AFlBN,CNAC,CECE,CFDA,CECE,IaAG,EAAE,mBRDJ,UQCiC,CAAC;EZa9D,AKKI,AJjBH,CIiBI,CDjBD,ACiBE,AFlBN,AKJC,ADAA,AGAA,ADAA,AHDG/F,AKOU,AfFb,EGA0B,AFAvBA,AeCA,GNNK,CFMA8E,AENClG,AMMF,CfDC,ADET,AgBDSN,CfDCwB,CEAuB4B,AOLpB,CAACjC,CMMD,CAACf,CfDC,CAACiC,GEAyB,AaCtB,CNNG,AMMF,CbDuB,MKCf,AOElB,CPFmBX,APDD,ADElB,AgBDkB,CfDC,CeCC,GRAI,APDD,COCE,APDD,iBSLN,MMM6B,CAAC;AZa9D,EGdK,EJA0C,AKEvC,AHDH,AOLA,ADAA,AGAA,ADAA,AHAG,EPIwC,AFCxC,AcGI5B,AfDJ,AgBDA,GDEO,CPFF2G,APDD,ASLCtE,AVOD,AgBDA,CJJR,ADAA,AVGS3B,AaHT,ADAA,AEMalC,AfDJ0B,AgBDAA,IhBCI,AgBDA,ChBCCC,AgBDAG,CNNE,EKQA,CPFG,APDD,ASLC,AKQF7B,CdHE,AeCA,CRAE,AQAD,EfDE,CSLE,CTKA,AcGD,CdHE,AcGDE,AfDC,CCFC,ADEA,EgBDE,CJJjBiD,ADAAA,AGAAA,ADAAA,CGImB,GhBCG,CYLjB,ADAA,AGAA,ADAA,CbKmB,CYLjB,ADAA,AGAA,ADAA,qBGIuC,CAAC,WhBCW,EAAE;ESiBnE,ENnBAA,AIDH,AFCA,AKJG,AKQA,CAAC,CHND,ADAA,AGAA,ADAA,AGIA,EhBCIxB,CGHC,CAACI,AOJD4E,AMMD,CXAR,AWASlF,EbFI,CAACmB,CaED,CAACf,ENNG,AVOC,CUPA,CAAC,AVOCzB,CUPA,AMMD,CbFG,AaEF,UAAU,EAAE,KhBCD,CAACG,EKDV,OLCmB,IGHb,UaEiC,CAAC,gBJJzC4C,CDAAA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CCAA;ELsBtBA,AMfJ,EZL6B,AKGzB,ADJH,AKAD,ADAA,AGAA,ADAA,AHHqB,ELOjB,AJDA,AeCA,CPiBK,CAACF,AThBFrB,EKDA,AWAA,CTFR,AFESkF,AWAArF,EPiBM,CAAC0D,COjBH,CPiBK,AOjBJtD,CPiBK,EThBA,EAAEzB,AgBDF,CXAC,AWAA,CXAC6G,KAAK,EEFhBM,AFEkB,AWAA,EAAE,CPiBK,EAAE,CFnBrB,EAAE,EPGc,CAAC/G,ISgBa8H,OAAO,EAAEC,KOjBE,CAAC,IPiBO,EAAE;ENnBnE,ASFC,ADAA,ADFD,AKQC,EPFG,ACkBI,AOjBR,ETFI,AFEA,AJDA,ADEA,CAAC,CSgBOA,AThBN,EOHE,AFEA,AJDA,CMDChB,AFEAT,AJDA/D,MMDM,CEmBO,CAACoG,CFnBL5B,EFEE,CIiBO,AJjBNL,AJDA,GMDG,ANCA9G,EQkBQ,IJjBF,CAAC,CAAC,EIiBQ,AJjBN,IIiBUoF,AJjBN,CAACoB,IJDJ,CAACrG,KICa,CAAC,GIiBG,ARlBR,CQkBS6I,QAAQ,CAACb,UAAU,CAAC,EAAE;ENpB3E,AKGD,AEPC,AMOA,ETDD,AKJC,ADAA,AGED,ADAA,AEIC,ENiBW,AJjBR,AJDA,ADEA,ISgBYc,AJjBR,AJDA,ADEA,CKDCvC,AJDA9D,ADEAvB,IAAI,CAACI,CSgBS,GAAG,CThBP,CSgBS,AJjBR,ALCA,CKDCsF,CJDC,GAAG/G,MICM,CAAC,ALCA,EAAE,EKDE,CAACyC,CAAC,GAAG,GJDL,CICS,AJDRrC,CICSyC,KAAK,CAACmE,GJDL,IICY,ALCA,CKDCpB,ALCA,KKDK,GAAG,CAAC,EAAE,IAAI,CAAClD,CAAC,GAAG,IAAI,CAACG,KAAK,CAACmE,OAAO,CAACnB,MAAM,GAAG,CAAC,EAAE,IAAI,CAAChD,KAAK,CAACmE,OAAO,CAACpB,KAAK,EAAE,IAAI,CAAC/C,KAAK,CAACmE,OAAO,CAACnB,MAAM,CAAC;EEFlK,AOFD,EXAC,AEKD,AOPC,ADAA,AVMD,AYHA,AHLC,AKQA,AfED,AgBHC,EPmBW9C,KAAK,AGtBjB,ADAA,AIMA,CNgBkBqF,MAAM,CAACzG,GAAG,CAAC,EMhBxBP,IAAI,EAAE,EHNE2B,ADAAA,KCAK,ADAA,ECAE,ADAA;EHKpB,AHAC,AJDA,AYHD,AbKC,EGNA,AIEA,AOFD,AJJC,AMOA,EJFG,ADAA,AIMA,ENgBYsF,EGtBRkC,ADAAA,AIMAU,CZLR,AOJA,AMOA,GJJY,ADAA,CFsBW,AMhBV,ENgBY9C,AGtBV,ADAA,CIMC/G,GHNG,ADAA,CIMC,KNgBe,EOlB1B,KNPK,CPIC;EKIf,EDJC,AFGA,AJDA,AaJD,ADCA,AEOA,AfFC,EGHG,ASDAe,ADAA,ADHA,AMOA,EPkBYmG,ENrBR,AQDA,ADHA,AMOA,CbHC7E,AICT,AOHA,AJFSD,AMOAT,EPkBY,AGtBV,CAACX,ADAA,CFsBW,AEtBVmB,CFsBW,AOlBV,CJJC,AIIA5B,CJJC,AFHA,EMOE,CLJC,ADHA,AMOAhC,CJJC,ADAA6K,CCAC,ETCE,AOJA,CPIC,EQDE,CKIJ,CAAC5K,ELJO,CGDjBmD,GEKgB,CAACjD,CTFZ,AOHA,EHCoB,AGDlB,EHCoB,CKIJ,EAAEkL,wBAAW,EAAE,KAAK,CAAC;ERAzD,AOEC,EVHA,AOFD,AXCC,AYHD,AHDA,AVMC,EODG,AOHA,AEKA,EbJsBhG,AMsBVtC,AEtBR,CFsBS,CKvBT6H,AEKA,CPkBWpC,AJlBnB,AJDA,AYJA,AbMA,AgBDSpF,ETFE,AIFE,CGDD,EEKE,CTFC,AIFEV,AGDF,AEKAW,CTFCqE,AIFE,GRAqB,AMsBV,AEtBV,AGDA,CLuBW6B,AEtBV,AKIA,CbJqB,AaIpBvJ,CLJC0C,CAAC,GAAG1B,CXKjB,COHmB,ANClB,CeCc,CAACf,CHLZmD,EJuB8B,CAACL,CAAC,CIvB3B,AGKa,CAAC5C,CPkBgBmJ,AIvB5B,CFCW,CNIT,AMJUjI,GKIM,CAAC,CPkBgB,OEtBX,CAACkB,MAAM,EAAEG,CAAC,EAAE,EAAE;ECAzD,AFHA,EFMD,ADAA,AQEC,ACAD,EbL8C,AEK1C,AJDA,AaJA,ADAA,AbMA,CGN2C,CAAC,AMuBhCM,EJlBR,AMJIhC,AGDJ4J,ADAAA,AbMA7I,CKDCgF,CLCC,CCFC,CaJC,ADAA,CCACnD,AdMA,ECFE,AYJA,CZICH,CDEC,CSiBW,ATjBVzB,CcNC,ADAA,CJuBW3B,AJlBV,AJDA,AaJAwK,CTKC3D,AMJJ,AXKI,CWLH7F,AXKIY,IKDI,ASLA,ETKE,ALCA,CAAC,CcNC,AdMA,GAAG,CWLH,CAACS,AXKI,CWLH,AXKI,CWLH,CAACS,AGDI,AdMA,CSiBG,CAAC3C,AKvBF,EHCF,CAAC,MFsBY,CTjBD,CAAC,CSiBG,ATjBF0B,CSiBG,GEtBH,EAAE,GXKO,CAAC,CAAC,EAAC,CAAC,CAAC,CWLHqG,OAAO,EAAE;EJEvE,ASEA,EbJD,AKEA,AIHC,AXKD,AYJA,AHJC,AKQA,EVCG,ALCAxG,ESiBYkB,AKvBRT,AdMF,CAACL,CKDC,CGFR,AHES4E,AUCT,CJLgBvE,GGDD,CAACC,CdMD,CAAC,CWLO,AGDJ,AdMF,CWLOA,AGDJ,AdMF,CSiBW,CJlBT,CIkBWpC,AJlBV8G,AMJM,CAAC,AGDJ,CAAC,GHCO,CAAC,CIKvB,EVDoB,CAAC,CAAC,EGFhBiB,AHEkB,GGFf,CHEmB,CGFjBC,AHEkBvB,CIkBG,CAACrG,CDpBnB,EAAE,KHEuB,CAAC,CIkBG,GAAG,CAAC;ENvBxD,AFIA,AYJA,AGIA,ETFA,AKHA,AFHA,EFQG,AHEA,ASLA,ACMA,AfAAsB,ESiBYyH,ATjBV,CAACpH,CKDC,AUCA,CVDC2E,AOLT,AFHA,AKSSrF,CJLO,CHEL6E,ACoBU,CTjBT,CSiBW,AMjBV,CJLO,AIKNzE,CPHC,AGFMgJ,AXKN,CQHCtE,ACoBU,ETjBR,CeAC,CVDC,AUCA,CPHC,AHEAY,CGFCb,EGFQ,CAAC,AIKN,CPHC,CAACE,AOGA,EHNhB,ADCwB,CAACsE,CNIL,CAAC,CGFC,CENjB,CFMmB,CHEC,CAACjI,CAAC,CGFCuF,AGFM,ENIJ,AMJM,CHEL,EGFQuC,CHELxC,AHEA,CAAClF,EGFE,AGFM,AIKN,CJLOU,AIKN,EPHE,AHEA,CGFC,AHEAyD,CGFC,CAAC,CGFO,CAAC2D,CHEL5C,EHEE,CGFC,AHEAnC,EMJQ,CAAC,ENIJ,GAAG,CAAC,EAAE,IAAI,CAAClD,CAAC,GAAG,IAAI,CAACG,KAAK,CAACmE,OAAO,CAACnB,MAAM,GAAG,CAAC,EAAE,IAAI,CAAChD,KAAK,CAACmE,OAAO,CAACpB,KAAK,EAAE,IAAI,CAAC/C,KAAK,CAACmE,OAAO,CAACnB,MAAM,CAAC;AWFlK,EApB0B5C,EbgB1B,AKKD,ADHC,AFKD,AJHC,AaFD,ADFC,EDEG,AFHA,AKSA,AfCA,ESgBYsF,AOzCiB,CAACrF,CNe1B,AKSA,AfCAlB,COLR,AGLSwB,AKSAnC,CJLO,CCDL,CIlB4B,CDwB1B,CNiBW,AEtBJ,AIKNI,AfCA,CWNOgG,CFsBK,AC1BV,CVUC,CAAC,CUVC,AKSA,CAAC,IJLU,ADJN,CCIOmD,OAAO,AIKN,CJLO,CJCvBvD,AQIkB,GJLS,CAACqD,QJChB,CIDyB,CJCvB,CIDyB,CAAC,SIKG,CAAC,qBHNqB;AIlB1C,ERqBtC,AHEA,ASLA,EXFA,ASGD,AXCC,AYJA,AHAD,ED0BY,AFrBR,AQIA,AfCA,CSgBS,CAAC,EFrBN,AQIA,AfCAzI,CGRR,AIGSoF,ANCT,AYJA,AEOShG,CJJO,GIIH,CAACI,AfCA,CWLO,EXKJ,CAAC,CWLOwE,AIIN,CJJO,AIIN,CRJC,EIAM,CJAHoB,AIAI,EAAEpB,CAAC,CVCrB,CYJC,CFGuBtF,ERHpBsE,CYOmB,EAAE,CZPjB,AIGkB,EJHhBC,IAAI,CQGe,CRHb,AQGclE,YAAY,CAACkB,IIIQ,CAAC,CJJH,EAAE+D,CAAC,EAAE,EAAE;ENEjE,AOJA,AFHA,EFKA,ADCD,AOJC,EXCG,AMwBQkC,ARpBR,AYJA,AEOA,AfGA,IGVI,AYOA,AfGAlH,CGVC0D,AYOAtD,EdHE,AYJA,CFGSV,CIIP,CNiBS,AMjBRc,CNiBS2H,ARpBR,CEJC,AFIA/F,GEJG,AYOA,CdHC,AcGA,ENiBU,ATdR,CScSgG,ATdRnH,EWPE,AIIA,CJJClB,CIIC,EfGE,IAAI,CScS,ATdR,EScU,ATdP,EWPC,CAACiF,CAAC,CAAC,CAACpD,KAAK,CAAC6G,OAAO,GAAG,KAAK,EEHE,KEOK,CAAC;AVHtE,EEDA,AFvB6BzG,AOoB7B,EJEA,APGD,AaNC,ADED,AHJC,ED4BWkF,AMjBR,EZPI1F,AErB4B,AL+B5BN,CGVC,AErB4BwB,CU4B7B,CZPGsB,AKGX,AMHA,ACOS5D,CJJO,GRHD,AYOF,AfGE,CScO,AMjBRI,AfGEW,CScOgH,ETdJ,CK/B6B,AL+B5B,CK/B6B/C,AU4B9B,CAAC,ENiBU,CAACiD,AJ7CsB,IU4B1B,EDPhB,ACOkB,SPJTvG,ICqB8B,CDrBzB,ACqB0BoF,EDrBxB,QCqBkC,CAAC1F,CAAC,CTdL,CeHD,AfGE,CScOzC,AMjBR,mBNiBmB,CAACG,SAAS,EAAEgI,UAAU,CAACzF,CAAC,GAAG1C,mBAAW,CAACI,UAAU,GAAG,CAAC,GAAG6I,OAAO,GAAG,EAAE,CAAC;AJ7C7F,AOoBpD,EAnBkC9F,AXwBlC,AYJA,EJ0BO,AFxBP,AGNA,EFQG,AMHA,ACOA,AfGA,CAAC,CGVGT,CAAC,CKGD,AGAI,AGHJ,ACOA,CZPGwC,AKGFxC,AGAI,ADNb,AKUSrB,CPJC,AGAI,CXOH,CcVC,CNGC0B,AMHAQ,ACOA,CAAC9B,IPJI,AIxByB,CJwBxBiE,AMHA,ACOA,CDPC8E,ACOA,GPJG,CAAC7E,EMHE,INGI,AMHA,ACOA,CPJCE,COIC,KPJK,CMHC,AJHlBpD,CAAC,CFMmB,AMHA,CJHjBC,CAAC,CFMmB,CENjB,mBKUqC,CAAC;AH5BrB,EH+CvC,AI3BH,CJ2BI,CFzBJ,ANEA,CQuBMK,CNzBH,AKGA,AENA,AKUA,CZPC,CQGG,AGHA,AdUA,EQPA,ACsBI,AC5BJ,AKUA,CPJCN,ACsBI,AFvBb,AGLSA,AKUApB,CPJC,AENA,CVaG,EQPA0B,AMHE,AJHFN,AKUA,CLVC,AKUAhB,CfGGY,CAAC,EQPA,CAACqD,AOIA,AfGA,CeHC,AfGA,EAAErD,CQPC,AROA,CQPCsD,EROE1E,EORhB,ECCoB,CAAC2E,EOIE,EAAE,CPJC,GAAG,CROC,CAAC1D,CQPC,KROK,EAAEG,CAAC,EAAE,EAAE,ecViB,ACOF,CAAC;AFTrE,EApBmCc,EL0BpC,APFC,EEDG,AIEA,AICA,AGHA,AJHA,AKUA,CJJC,AGHA,GXAG,AOHA,AKUA,AfGIlC,CGVH2D,AFGT,ASNSlC,AKUArB,CLVC,CHKC,AICA,AGHA,EJHEqB,AKUA,CLVC,AKUApB,CRLC,AICA,AGHA,CPECrB,EMzB4B,CVuBzB,AQGA,AGHA,CXAC,AIEA,AICAsD,AGHAA,EdUM,CAAClB,CGVH,AHUI,CGVHsC,AYOA,AfGI,CWPH,AGHA,ACOA,AfGIrC,CWPHkI,AGHAA,GbGf,EEHoB,CAAC/H,AQGA,AGHA,ACOA,CZPC,CYOC,CZPC,AHUI,CWPH,AGHA,AdUI,GGVD,CAACkC,AHUI,CWPH,AXOI,EWPF,CGHC,EAAE,CXAC,CAACjC,CAAC,CAAC,uBYOuB,EAAE;AF9BhC,EL0B3C,ACuBG,ENzBJ,AIEA,AGLA,ETMI,EUAI,AGHA,ACOAnB,EfGI,GWPC,AVAF,CDOKgB,CcVD,EHGEF,AVAF,CAACkB,AcIE,CJJA,CIIE5C,EJJD,CAAC,CVAE,CUAA0B,AXOK,EWPJ,CXOO,EWPJ1B,EXOQ,CeHT,AfGUgB,CeHTf,EfGY,CAAC4B,MWPR,CAACxB,CIIK,AfGU,CAACC,UWPJ,CAACiB,AGHY,GdUK,CAACG,CAAC,CWPb,AXOc,CAAC,CWPbA,EAAC,EAAE,EAAE;ERHzD,AM0BGU,AFxBH,AGLA,EFKA,APED,EaHI,CLyBK,CAACF,AMlBFrB,EJJIb,AXOA4B,GSeG,CAACwC,EAAE,CAAC,EMlBA,EAAEpE,AfGE,CAAC8B,CWPP,AXOQ,CWPPzB,EXOUgB,MSeM,ATfA,ESeE,AMlBV,CAACnB,AfGWwB,CWPR,AXOS,CWPRA,EAAC,AXOU,CWPT,CAACoI,CXOY,ESeDvC,MEtBF,CFsBS,AEtBRvH,EFsBUwH,UAAU,CEtBf,CFsBiB,AEtBhBnH,YAAY,CAACqB,EAAC,CAAC,CAACqI,SAAS,EAAE,GAAGH,IAAI,CAAChH,MAAM,CAACoH,MAAM,CAAC;EVAlG,ASPA,EPGA,AKEA,ACyBO,AFzBP,AOAD,ECOI,CAAC,CNkBOxC,AMlBN,EJJMxH,AXOA4B,CQRZ,OCuBsB,CAACwG,ETfA,CAACrG,CSeG,AEtBV,AXOQ,CWPP1B,EXOUiB,ESeI,ITfE,CQRrB,GCuB2B,AEtBV,CAACI,EAAC,CFsBY+C,AEtBX,CAACqC,SAAS,CAACmD,IFsBS,CAAC5B,EEtBH,CAACrI,KFsBU,CAACwH,OEtBN,CAACnH,EFsBe,CAAC,EAAE,OEtBN,CAACqB,EAAC,CAAC,CAACqI,SAAS,EAAE,CAAC;ADRrF,EIKA,AJ9BwBzH,EP4BxB,AIEA,ANEA,AcMD,EPLI,ACuBQF,EEtBJ,ADlCuB,CAACY,CFiCxB,ARQIpB,CGXZ,AKGSiB,ACuBQ,AFxBjB,CEwBkB4E,MDvBF,ACuBQ,CAACzG,CCxDkB,CFiCxB,AEjCyBwD,AVyCrB,CQRH,ACuBQ,ATfJtD,CSeK,ECxDmB,CFiCxB,CAAC2B,IRQQ,CAAC,CGXrByB,AHWsB,CQRH,CRQK,COTrB,APSsB,CGXrB,AHWsB,EGXpBC,IAAI,EAAE;AO9BuB,EI8B/C,ACQA,EdNA,EEDG,AKGA,ADDA,AIEA,EFsBYmD,EN1BR,AKGA,ARQI9F,CGXH,AKGAkF,APAT,EMDW,EJFExC,AM0BU,EAAEkD,AFxBV,CAACb,CJFC,CKGC,CAAC9D,ARQI,CAACb,CGXH,CAAC,GM0Ba,CN1BT,AKGA,ADDA,CJFC,CFGjB,COAmB,CAAC,CLHCuC,CHWK,EQRF,CLHC,AKGAuC,ARQIzH,IGXA,CAAC,EAAE,EKGE,CAACwD,OAAO,ERQF,CAACrD,SAAS;AcZ3D,EA1BoCgD,EN+BrC,ADDA,AIEA,AIEC,EdHG,EEHI,AM0BQT,CAAC,CTfLH,CSeO4F,CN1BP,CAACtG,AFGF,IAAI,CAACyB,Ea/B6B,CLsDhB,ATfN,CGXD,AM0BQ4F,ATfNtG,CGXDqC,GFGC,CEHG,EAAEC,IAAI,CAAC,CM0BS,ATfN,CSeOxC,CAAC,CTfL1C,mBAAW,CAACI,UAAU;AcvCjB,EN+B5C,ADDA,AIEA,EVAD,AcEC,EZLG,EM0BYkI,ATfR,GeJR,ENmBqB,EAAEH,UAAU,CAACe,GMnBzB,UNmBsC,CAACZ,KAAK;EFzBpD,ANEA,EEFD,AKCC,AGCA,EIKG,AfIA,ESeY3F,EMnBRuI,SAAS,CNmBW,EAAElL,AMnBV,IAAI,CAAC0F,IAAI,CAACC,MAAM,CAACC,ENmBI,CAACzF,EMnBA,ONmBS;AF1BlD,EJAA,AIhC+B8G,ECiC/B,AGCA,AVAA,EcMG,AfKA,EScYrE,EMnBRuI,AfKA,CQVR,AGCA,AXSStI,KAAK,CAACC,GeLG,CNmBW,AF3DY,AP6CtB,CAAC,CScW9C,AMnBV,IAAI,CAAC0F,GJJf,CIImB,CAACC,EfKE,CQVjB,CRUmB,EeLE,CAACE,ENmBI,CAACzF,GMnBC,GfKE,IScO;AF3DZ,EJgCxC,EFEA,EOEG,AGCA,AIKA,ENkBY+I,ATdR,EeJAiC,CdNR,CDUY,CQVD,ACwBU,AEvBV,AXSErI,EScUoF,EDxBR,CAACb,ARUE,CAACtE,KAAK,CScS,ATdRrD,CScSuJ,EDxBR,APAlB7F,AcMkB,GAAG,CdNjB,CDUgB,CCVd,ADUezD,CeJIqI,INkBc,CAACkB,ATdb,CAACrJ,ISciB,ETdX,CAAC,WeJK,CAAC,IAAI,CJLU,AIKT;AZVrD,EA/B+BmD,EKoChC,AGCA,EVDI,AcOA,AfGA,CAAC,CG9CiC,AM4DtBsF,CN5DuB5E,AH8ChC,CCVC,AcOA0H,CdPChI,EDUE,CAAC,CCVC,CQwBW,AMjBV,ENiBY,ARxBVA,CcOC,CZ3CiC,CAAC8B,CFoC/B,CcOC,CAACxD,CZ3CiC,EY2C9B,CAAC2J,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEJ,SAAS,EAAEC,UAAU,EAAE,KAAK,CAAC;AZ3CjB,EKoCtD,AGCA,EVAD,ADUA,EScY,AMjBR,CNiBS,CAAC,EMjBNI,OAAO,GAAG,IAAI,CAAC5J,GAAG,CAACF,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC;EJPpD,AVAA,ADUA,EQXA,EC0BW0G,AMjBR,IAAIzG,EAAE,GAAG,CNiBS,CAAC0H,EMjBN,CAACzH,GAAG,CNiBS,AMjBRC,CNiBS2H,KMjBH,CAAC,CAAC,EAAE,CAAC,EAAE,CNiBS,EAAE,SMjBC,CAAC;AJR/C,EApCmCpG,AVoCnC,ADUA,EQXA,AC2BO,EMjBJkI,KPRJ,COQU,CAACvJ,OJ7CiC,CI6CzB,CAAC,CAAC,CAAC,QPRV;AGrCgC,AVoC3C,ADUA,ESiBE,ARjE+BmB,ADGAA,CS8D9B,EAAEF,CDzBF,AOSAwI,EdjDoC,ADGA,CCHC5H,ADGAT,CS8D9B,CAAC,EDzBD,AOSA,CAACsI,Af9CkC,GQqC/B,CAACrE,EPxCoC,CAACvD,GOwC/B,COSC,CAACsH,CdjDmC,QciD1B,GAAC,CAAC,EAAEC,UAAU,CAAC;AdjDW,ADGb,ESgE1CpI,ED1BJ,EOSIwI,CNiBK,CAAC1I,KAAK,AMjBJ,CNiBKkC,AMjBJjD,ENiBM,CAAC,KMjBC,CAAC,KNiBS,AMjBJ,CAAC,CNiBK,UAASoG,OAAO,EAAEC,UAAU,EAAEqB,QAAQ,EAAE;ED1BvE,EC2BOA,EMjBJ9H,EAAE,CAAC8J,GNiBS,CAAC/B,OMjBC,CAACyB,SAAS,ENiBQ,CMjBP,CNiBS,AMjBR,EAAEC,UAAU,GAAC,GAAG,CAAC;ENkB3C,CAAC,CD5BJ,AC4BK,EMjBFzJ,EAAE,CAACI,QAAQ,CAAC,IAAI,CAAC;ENmBjBiB,ED9BH,EOaG,CNiBK,CAACF,EMjBF4I,CPXR,EC4Be,CAAC1G,EAAE,AMjBJ,CNiBK,EMjBF,IAAIqC,KNiBS,ED5BpBD,AC4BsB,MD5BhB,EAAE,AOWS,CAAC,CNiBae,GMjBT,EAAE,CAAC,CNiBa,CMjBX,CNiBaC,AMjBZ,EAAE,KAAK,EAAE/C,CNiBa,EAAEoE,QAAQ,EAAE,EMjBhB,CAAC;INkBjDA,ED5BJ,AOWAiC,IPXI,CAACtE,CC4BO,AMjBN,CNiBOP,AMjBN4E,IPXI,GAAGrE,IOWI,CAAC+D,CPXC,MC4BY,EAAE,AMjBN,GAAC,CAAC,EAAEC,UAAU,GAAC,IAAI,CAAC;ENkBhD,CAAC,CD5BL,AC4BM,EMjBFM,MAAM,CAAC3J,QAAQ,CAAC,CAAC,CAAC;EPXrB,AC8BGiB,IMjBA,CNiBK,CAACF,EMjBF6I,GNiBO,CAAC3G,CMjBH,CNiBK,CAAC,CMjBH,IAAI,CNiBK,AMjBJpD,ENiBM,CMjBH,CAACF,KAAK,CAAC,CAAC,CNiBIyG,CMjBF,CAAC,EAAE,GNiBM,EAAEC,EMjBD,CAAC,ONiBU,EAAEqB,QAAQ,EAAE;ED9BlE,EC+BOrB,EMjBJ,IAAIwD,INiBU,CAAC9I,GMjBH,ENiBQ,CAAC6G,AMjBN,IAAI,CAAC/H,ENiBQ,CMjBL,CAAC+F,CNiBO,GMjBH,CAAC,CNi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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 130,\r\n    cardHeight: 205,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemy = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3,\r\n    enemyList: [],\r\n    enemyOnScene: []\r\n}\r\n","import { CST } from \"../CST\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\nlet graveYardArray;\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"background\", \"./assets/background.png\")\r\n    }\r\n\r\n    create() {\r\n        let bg = this.add.sprite(-110, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n        bg.alpha = 0.3;\r\n\r\n        let startX = 0;\r\n        let startY = 0;\r\n\r\n        \r\n        if (graveYardArray.length == 0 ) {\r\n            console.log(\"You have no discarded or used cards.\")\r\n        } else {\r\n            for (let i=0; i < graveYardArray.length; i++) {\r\n                graveYardArray[i].setVisible(true);\r\n                let discardCard = this.add.existing(graveYardArray[i]);\r\n                discardCard.x = startX + (i * 150);\r\n                discardCard.y = startY;\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth;\r\n                discardCard.displayHeight = gameOptions.cardHeight;\r\n            }\r\n        }\r\n\r\n        this.input.once(\"pointerdown\", function() {\r\n            this.scene.start(CST.SCENES.BATTLE);\r\n        }, this);\r\n    }\r\n}","import { gameOptions } from \"../../config\";\r\n\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(scene, x, y, sprite);\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.effect = effect;\r\n        this.cardType = cardType;\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth;\r\n        this.displayHeight = gameOptions.cardHeight;\r\n    }\r\n    \r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCost() {\r\n        return this.cost;\r\n    }\r\n\r\n    getEffect() {\r\n        return this.effect;\r\n    }\r\n\r\n    getType() {\r\n        return this.cardType;\r\n    }\r\n\r\n    setCost(cost) {\r\n        this.cost = cost;\r\n    }\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changeCursor() {\r\n        this.setInteractive({ useHandCursor: true });\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","import {cardBackDimensions} from \"../config.js\";\r\n\r\nlet handArray = [];\r\nlet deckArray = [];\r\nlet deckTrackerArray = [];\r\nlet graveYardArray = [];\r\n\r\nfunction deckSetUp(scene, array, arrayTracker) {\r\n    let x = scene.game.config.width / 25;\r\n    let y = scene.game.config.height / 1.24;\r\n    for (let i=0; i < array.length; i++) {\r\n        let cardBack = scene.add.sprite(x,\r\n        y, 'cardBack');\r\n        cardBack.setOrigin(0.5, 1);\r\n        cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n        cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n        \r\n        arrayTracker.push(cardBack);\r\n        x += 4;\r\n    }\r\n}\r\n\r\n// implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\nfunction shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i+1));\r\n        [array[i], array[j]] = [array[j], array[i]]\r\n    }\r\n}\r\n\r\nexport {handArray, deckArray, deckTrackerArray, graveYardArray};\r\nexport {deckSetUp, shuffle};\r\n\r\n","import { graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.setDepth(0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","export default class Character extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.health = 50;\r\n    }\r\n\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Player extends Character {\r\n\r\n    constructor(scene, x, y, sprite, deck) {\r\n        super(scene, x, y, sprite);\r\n        this.actionPoints = 6;\r\n        this.deck = deck;\r\n        this.spriteType = \"player\";\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints = actionPoints;\r\n    }\r\n\r\n    getDeck() {\r\n        return this.deck;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Enemy extends Character {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n        this.spriteType = \"enemy\";\r\n        this.setInteractive();\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n}","import { handArray, graveYardArray } from \"./Deck\";\r\nimport { gameOptions, enemy } from \"../config\";\r\n\r\nexport default class InteractHandler {\r\n    constructor(scene) {\r\n\r\n        scene.input.on('dragstart', function (pointer, gameObject) {\r\n            scene.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            scene.tweens.add({\r\n                targets: scene.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                handArray.splice(index, 1);\r\n            }\r\n\r\n            scene.arrangeCardsInCenter(handArray);\r\n\r\n        }, scene);\r\n\r\n        scene.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        scene.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                let yOffSet = 50;\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    y: gameObject.startPosition.y - yOffSet,\r\n                    displayWidth: gameOptions.cardWidth * 2,\r\n                    displayHeight: gameOptions.cardHeight * 2,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.showTooltip();\r\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\r\n\r\n            }\r\n        }, scene);\r\n\r\n        // hover out listener\r\n        scene.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    y: gameObject.startPosition.y,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.removeTooltip();\r\n            }\r\n       }, scene);\r\n\r\n        scene.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        scene.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        scene.input.on('drop', function(pointer, gameObject, dropZone) {\r\n            gameObject.input.enabled = false;\r\n\r\n            // setting card in the middle \r\n            gameObject.displayHeight = gameOptions.cardHeight;\r\n            gameObject.displayWidth = gameOptions.cardWidth;\r\n            gameObject.x = dropZone.x;\r\n            gameObject.y = dropZone.y + dropZone.y / 3;\r\n            \r\n            graveYardArray.push(gameObject);\r\n\r\n            // remove the card from the scene after 500ms\r\n            setTimeout(function() { \r\n                gameObject.activateCard(scene);\r\n                gameObject.setActive(false).setVisible(false); \r\n            }, 500);\r\n\r\n            dropZone.renderNormalOutline(scene);\r\n\r\n            scene.cameras.main.shake(100, 0.02);\r\n        });\r\n\r\n        scene.input.on(\"dragend\", function(pointer, gameObject, dropped) {\r\n        \r\n            if (!dropped) {\r\n                handArray.push(gameObject);\r\n                gameObject.displayHeight = gameOptions.cardHeight;\r\n                gameObject.displayWidth = gameOptions.cardWidth;\r\n                scene.arrangeCardsInCenter(handArray);\r\n            }\r\n        }, scene);\r\n    }\r\n\r\n}","export class Tooltip extends Phaser.GameObjects.Text {\r\n    constructor(scene, x, y, label) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 20,\r\n            y: 20\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\r\n        scene.add.existing(this);\r\n        this.visible = false;\r\n        this.setDepth(2);\r\n    }\r\n\r\n    showTooltip() {\r\n        this.visible = true;\r\n    }\r\n\r\n    removeTooltip() {\r\n        this.visible = false;\r\n    }\r\n    \r\n    setLabelCoordinates(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./HandCard\";\r\nimport { Tooltip } from \"./Tooltip\";\r\n\r\nexport default class DamageCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (this.effect.target == \"single\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\r\n                    console.log(this);\r\n                    this.setHealth(this.getHealth() - card.effect.damage);\r\n                    this.heartText.setText(this.getHealth());\r\n\r\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\r\n                        enemy.enemyOnScene[j].input.enabled = false;\r\n                    }\r\n                })\r\n            }\r\n        } else if (this.effect.target == \"all\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\r\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\r\n            }\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        return \"Damage: Inflicted damage is on the enemy's health.\";\r\n    }\r\n    \r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./HandCard\";\r\nimport { Tooltip } from \"./Tooltip\";\r\n\r\nexport default class ComboCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        console.log(this);   \r\n    }\r\n\r\n    getLabel() {\r\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\r\n    }\r\n    \r\n   \r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./HandCard\";\r\nimport { Tooltip } from \"./Tooltip\";\r\n\r\nexport default class ReloadCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // nned to account for next turn side effects\r\n    // such as losing action points next turn\r\n    activateCard(scene) {\r\n        let card = this;\r\n    }\r\n\r\n    getLabel() {\r\n        return \"AP: \\nAction Points are used when activating a card.\"\r\n    }\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./HandCard\";\r\nimport { Tooltip } from \"./Tooltip\";\r\n\r\nexport default class HealingCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // needs to access the player's health and armour\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (card.effect.target == \"health\") {\r\n            console.log(this);\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        if (this.effect.target == \"armour\") {\r\n            return \"Armour: \\nRemoved before health when receiving damage.\";\r\n        } else if (this.effect.target == \"health\") {\r\n            return \"Health: \\nIf this reaches zero, you die.\"\r\n        }\r\n    }    \r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/Button.js';\r\nimport { gameOptions, enemy } from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/Zone.js\";\r\nimport Player from \"../helpers/classes/Player.js\";\r\nimport Enemy from \"../helpers/classes/Enemy.js\";\r\nimport {handArray, deckArray, deckTrackerArray, graveYardArray, shuffle, deckSetUp} from \"../helpers/classes/Deck.js\";\r\nimport InteractHandler from \"../helpers/classes/InteractHandler.js\";\r\nimport DamageCard from \"../helpers/classes/cards/DamageCard.js\";\r\nimport ComboCard from \"../helpers/classes/cards/ComboCard.js\";\r\nimport ReloadCard from \"../helpers/classes/cards/ReloadCard.js\";\r\nimport HealingCard from \"../helpers/classes/cards/HealingCard.js\";\r\nimport { Tooltip } from \"../helpers/classes/cards/Tooltip.js\";\r\n\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        let cards = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemy.spriteWidth,\r\n            frameHeight: enemy.spriteHeight\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let interactiveHandler = new InteractHandler(this);\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        let player = new Player(this, 0, 0, \"guy\", handArray);\r\n        player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        let heartext = this.add.text(0,0, player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        let actiontext = this.add.text(0,0, player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.start(CST.SCENES.DISCARD_PILE, graveYardArray);\r\n        }, this);\r\n        \r\n        // load cards\r\n        this.loadCards();\r\n\r\n        // Button to end turn\r\n        let endTurnButton = new Button(gameWidth, gameHeight/2, 'End Turn', this, this.endTurn.bind(this), '#202529');\r\n        endTurnButton.changeCursor();\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 500, 400, 300, 600);\r\n\r\n        shuffle(deckArray);\r\n        deckSetUp(this, deckArray, deckTrackerArray);\r\n\r\n        // enemy\r\n        for (let i=0; i < enemy.numberOfSprites; i++) {\r\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemy.enemyList.push(enemySprite);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n    }\r\n\r\n    loadCards() {\r\n        // damage cards\r\n        let cannon = new DamageCard(\"cannon\", 2, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\r\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\r\n\r\n        // combo cards\r\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\r\n        \r\n        // reload cards\r\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\r\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -1}, this, 0, 0, \"overload\");\r\n\r\n        // healing cards\r\n        let medkit = new HealingCard(\"medkit\", 1, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\r\n        let kevlar = new HealingCard(\"kevlar\", 2, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\r\n\r\n        deckArray.push(cannon);\r\n        deckArray.push(grenade);\r\n        deckArray.push(headshot)\r\n        deckArray.push(reload);\r\n        deckArray.push(overload);\r\n        deckArray.push(medkit);\r\n        deckArray.push(kevlar);\r\n    }\r\n\r\n    arrangeCardsInCenter(handArray) {\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            card.startPosition = {\r\n                x: card.x,\r\n                y: card.y,\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(2);\r\n        }\r\n    }\r\n\r\n    // simulate a drawing feature\r\n    endTurn() {\r\n        if (deckArray.length > 0) {\r\n            let lastCard = deckTrackerArray.pop();\r\n            lastCard.destroy();\r\n\r\n            let drawCard = deckArray.pop();\r\n            handArray.push(drawCard);\r\n            drawCard.cardInHand(this);\r\n            this.arrangeCardsInCenter(handArray);\r\n        }\r\n    }\r\n\r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n            randomEnemy.setDepth(1);\r\n\r\n            enemy.enemyOnScene.push(randomEnemy);\r\n        }\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport HandCard from \"../helpers/classes/cards/HandCard\";\r\nimport { BattleScene } from \"./BattleScene\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/reload.png\");\r\n    }\r\n\r\n    create() {\r\n        this.scene.add(CST.SCENES.BATTLE, BattleScene, false);\r\n        this.scene.start(CST.SCENES.BATTLE);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport { LoadScene } from \"./scenes/loadScene\";\r\nimport {BattleScene} from \"/src/scenes/BattleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 1000,\r\n    height: 800,\r\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\r\n    scene: [\r\n        LoadScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}