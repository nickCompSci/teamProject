{"version":3,"sources":["src/CST.js","src/scenes/BattleScene.js","src/index.js"],"names":["CST","SCENES","BATTLE","gameOptions","startCards","cardWidth","cardHeight","cardDistance","cardAngle","handArray","BattleScene","key","load","image","spritesheet","frameWidth","frameHeight","bg","add","sprite","gameWidth","game","config","width","gameHeight","height","setPosition","startAngle","graveYardArray","i","card","setInteractive","input","setDraggable","push","setOrigin","displayWidth","displayHeight","setDepth","angle","cardTop","getBounds","top","previousCardTop","y","startPosition","x","dropZone","zone","setRectangleDropZone","normalZone","activeZone","graphics","lineStyle","strokeRect","hitArea","on","pointer","gameObject","tweens","targets","duration","background","alpha","index","indexOf","splice","arrangeCardsInHand","dragX","dragY","clear","enabled","setTimeout","destroy","cameras","main","shake","dropped","n","totalCards","rotation","Math","PI","xPosition","cos","yPosition","sin","r","forEach","coordinates","setHandCoordinates","length","Phaser","Scene","type","AUTO","scene","Game"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        BATTLE: \"BATTLE\"\r\n    }\r\n}","import { CST } from \"../CST.js\";\r\n\r\nlet gameOptions = {\r\n    startCards: 5,\r\n    cardWidth: 260,\r\n    cardHeight: 410,\r\n    cardDistance: 50,\r\n    cardAngle: 5\r\n}\r\nlet handArray;\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"background\", \"./assets/background.jpg\");\r\n        this.load.spritesheet(\"cards\", \"./assets/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n        bg.setPosition(gameWidth/2, gameHeight/2);\r\n        \r\n        let startAngle =- gameOptions.cardAngle\r\n        handArray = [];\r\n        let graveYardArray = [];\r\n        for (let i = 0; i < gameOptions.startCards; i ++) {\r\n\r\n            // creates cards from spritesheet and makes them draggable\r\n            let card = this.add.sprite(this.game.config.width/2 - i * gameOptions.cardDistance, this.game.config.height, 'cards', i).setInteractive();\r\n            this.input.setDraggable(card);\r\n            \r\n            // Angles and minimises the cards initial display size\r\n            handArray.push(card);\r\n            card.setOrigin(0.5, 1);\r\n            card.displayWidth = gameOptions.cardWidth / 2;\r\n            card.displayHeight = gameOptions.cardHeight / 2;\r\n            card.setDepth(gameOptions.startCards - i);\r\n            card.angle = startAngle;\r\n\r\n            // Settings angles for the cards in hand\r\n            if (i > 0) {\r\n                card.angle = handArray[i - 1].angle+startAngle;\r\n                startAngle *= 0.9;\r\n                let cardTop = card.getBounds().top;\r\n                let previousCardTop = handArray[i-1].getBounds().top;\r\n                card.y += (previousCardTop-cardTop) * 1.6;\r\n            }\r\n            \r\n            card.startPosition = {\r\n                angle: card.angle,\r\n                x: card.x,\r\n                y: card.y\r\n            }\r\n        }\r\n\r\n        let dropZone = this.add.zone(500, 300, 300, 300).setRectangleDropZone(300, 300);\r\n        let normalZone = 0xffff00; // yellow\r\n        let activeZone = 0x00ffff; // lightblue / turquoise \r\n        \r\n        let graphics = this.add.graphics();\r\n        graphics.lineStyle(2, normalZone);\r\n        graphics.strokeRect(dropZone.x - dropZone.input.hitArea.width / 2, dropZone.y - dropZone.input.hitArea.height / 2, dropZone.input.hitArea.width, dropZone.input.hitArea.height);\r\n\r\n        this.input.on('dragstart', function (pointer, gameObject) {\r\n            this.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                displayWidth: gameOptions.cardWidth,\r\n                displayHeight: gameOptions.cardHeight,\r\n                duration: 50\r\n            });\r\n            this.tweens.add({\r\n                targets: this.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                handArray.splice(index, 1);\r\n            }\r\n\r\n            this.arrangeCardsInHand();\r\n        }, this);\r\n\r\n        this.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // this.input.on('pointerover', function(pointer, gameObject) {\r\n        //     this.tweens.add({\r\n        //         targets: gameObject,\r\n        //         angle: 0,\r\n        //         x: pointer.x,\r\n        //         y: pointer.y,\r\n        //         displayWidth: gameOptions.cardWidth,\r\n        //         displayHeight: gameOptions.cardHeight,\r\n        //         duration: 50\r\n        //     });\r\n            \r\n        // }, this);\r\n\r\n        // this.input.on('pointerout', function(pointer, gameObject) {\r\n        //     this.tweens.add({\r\n        //         targets: gameObject,\r\n        //         angle: gameObject.startPosition.angle,\r\n        //         x: gameObject.startPosition.x,\r\n        //         y: gameObject.startPosition.y,\r\n        //         displayWidth: gameOptions.cardWidth/2,\r\n        //         displayHeight: gameOptions.cardHeight/2,\r\n        //         duration: 50\r\n        //     });\r\n        // }, this);\r\n\r\n        this.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            graphics.clear();\r\n            graphics.lineStyle(2, activeZone);\r\n            graphics.strokeRect(dropZone.x - dropZone.input.hitArea.width / 2, dropZone.y - dropZone.input.hitArea.height / 2, dropZone.input.hitArea.width, dropZone.input.hitArea.height);\r\n        });\r\n\r\n        this.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            graphics.clear();\r\n            graphics.lineStyle(2, normalZone);\r\n            graphics.strokeRect(dropZone.x - dropZone.input.hitArea.width / 2, dropZone.y - dropZone.input.hitArea.height / 2, dropZone.input.hitArea.width, dropZone.input.hitArea.height);\r\n        }); \r\n\r\n        this.input.on('drop', function(pointer, gameObject, dropZone) {\r\n            gameObject.input.enabled = false;\r\n\r\n            // setting card in the middle \r\n            gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n            gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n            gameObject.x = dropZone.x;\r\n            gameObject.y = dropZone.y + dropZone.y / 3;\r\n            \r\n            graveYardArray.push(gameObject);\r\n\r\n            // remove the card from the scene after 500ms\r\n            setTimeout(function() { gameObject.destroy(); }, 500);\r\n\r\n            graphics.clear();\r\n            graphics.lineStyle(2, normalZone);\r\n            graphics.strokeRect(dropZone.x - dropZone.input.hitArea.width / 2, dropZone.y - dropZone.input.hitArea.height / 2, dropZone.input.hitArea.width, dropZone.input.hitArea.height);\r\n\r\n            this.cameras.main.shake(100, 0.02);\r\n        });\r\n\r\n        this.input.on(\"dragend\", function(pointer, gameObject, dropped) {\r\n        \r\n            if (!dropped) {\r\n                handArray.push(gameObject);\r\n                this.arrangeCardsInHand();\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    // method to set card in hand coordinates\r\n    // n = card number\r\n    // totalCards = amount of cards on hand\r\n    setHandCoordinates(n, totalCards) {\r\n        let rotation = Math.PI / 4 / totalCards * (totalCards - n - 1);\r\n        let xPosition = this.game.config.width / 2 + 200 * Math.cos(rotation + Math.PI / 2);\r\n        let yPosition = this.game.config.height + 200 - 200 * Math.sin(rotation + Math.PI / 2);\r\n        return {\r\n            x: xPosition,\r\n            y: yPosition,\r\n            r: -rotation\r\n        }\r\n    }\r\n\r\n    arrangeCardsInHand() {\r\n        handArray.forEach(function(card, i) {\r\n            card.setDepth(i);\r\n            let coordinates = this.setHandCoordinates(i, handArray.length);\r\n            this.tweens.add({\r\n                targets: card,\r\n                rotation: coordinates.r,\r\n                x: coordinates.x,\r\n                y: coordinates.y,\r\n                displayWidth: gameOptions.cardWidth / 2,\r\n                displayHeight: gameOptions.cardHeight / 2, \r\n                duration: 150\r\n            });\r\n        }, this);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport {BattleScene} from \"/src/scenes/BattleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nvar config = {\r\n    type: Phaser.AUTO,\r\n    width: 1280,\r\n    height: 740,\r\n    scene: [\r\n        BattleScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);\r\n\r\n"]}