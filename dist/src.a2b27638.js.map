{"version":3,"sources":["src/CST.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/Card.js","src/helpers/font.js","src/helpers/classes/Button.js","src/helpers/classes/cards/HandCard.js","src/helpers/classes/Deck.js","src/helpers/classes/Zone.js","src/helpers/classes/Characters.js","src/helpers/classes/Player.js","src/helpers/classes/Enemy.js","src/helpers/classes/InteractHandler.js","src/scenes/BattleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemySprite","spriteWidth","spriteHeight","numberOfSprites","graveYardArray","DiscardPileScene","key","data","load","spritesheet","frameWidth","frameHeight","image","bg","add","sprite","setOrigin","setScale","alpha","startX","startY","length","console","log","i","setVisible","discardCard","existing","x","y","displayWidth","displayHeight","input","once","scene","start","Phaser","Scene","Card","name","cost","effect","type","loadFont","url","newFont","FontFace","then","loaded","document","fonts","catch","error","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","on","setInteractive","useHandCursor","newX","newY","GameObjects","Text","HandCard","frame","cardInHand","visible","setDraggable","Sprite","handArray","deckArray","deckTrackerArray","deckSetUp","array","arrayTracker","game","config","width","height","cardBack","push","shuffle","j","Math","floor","random","Zone","setRectangleDropZone","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Character","health","Player","actionPoints","Enemy","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","min","max","InteractHandler","pointer","gameObject","tweens","targets","angle","duration","background","index","indexOf","splice","arrangeCardsInCenter","dragX","dragY","includes","depth","startPosition","dropZone","renderActiveOutline","enabled","setTimeout","setActive","cameras","main","shake","dropped","enemyArray","BattleScene","gameWidth","gameHeight","interactiveHandler","hud_bg","tileSprite","card_bg","setPosition","player","heart","heartext","getHealth","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","endTurnButton","endTurn","bind","changeCursor","enemy","spawnEnemyOnScene","bottomOfScreen","screenCenterX","yDelta","card","cardX","setDepth","lastCard","pop","destroy","drawCard","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","cards","LoadScene","cannon","damage","target","grenade","headshot","reload","amount","sideEffects","overload","medkit","kevlar","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AKAP,AMAA,ACAA,AFAA,AFAA,AFAA,ALAO,AGAA,AWCP,AFDA,AXAA,AYAA,IdAaA,ACAAK,GDAG,EIAAsD,CJAG,KCAK,EGAA,CHAG,AGAFJ,IAAI,EAAEK,GAAG,EAAE;ACAF,AMAG,ACCrC,AFDqC,AFCrC,AFD2C,ASE3C,AFDA,AXAA,AYAA,EdAI3D,ACAAK,AGAA,IHAI,AGAAuD,EJAE,ACAA,CAAC,CDAC,GIAG,GAAG,IAAIC,QAAQ,CAACP,IAAI,EAAE,aAAa,CAAC;ACDjB,AMAG,ACCG,AFDH,AFCG,AFDG,ASG3C,AFDA,AXDgD,AYChD,EbAIhD,AGAAsD,EJAI3D,IAAI,CIAD,CJAG,AIAFsB,EHAE,EAAE,AGAA,CHAC,CDAG,AIAF,CAACuC,IAAI,CAAC,UAAUC,MAAM,EAAE;ACFR,AEAlC,AIAqC,ACCG,AFDH,AFCG,AFDG,ASA3C,AFGA,AXFgD,AYCJ,EbCxCxD,EDAIL,AIAA8D,MJAM,CCAD,CDAG,AIAA,CHAD,AGAEC,GHAC,EGAI,CAACpC,CJAC,EIAE,CAACkC,MAAM,CAAC;ACHA,AEElC,AIFqC,ACCG,AFDH,AFCG,AFDG,AOI3C,AXHgD,AYCJ,EbExCvD,AGAA,CAAC,CJAGL,AOFJsF,AHEE,CAACvB,KAAK,CAAC,CHAC,CMFD,CNEG,EDAI,AOFJ,CNEG,CDAG,AOFJ,GHEKC,KAAK,EAAE;ACJI,AEEf,AIFkB,ACCG,AFDH,AFCG,AFDG,ASK3C,AFAA,AXJgD,AYCJ,EdGxC,ACAA1D,EGAI,OAAO0D,GHAC,EAAE,AGAE,GHAC;ADCrB,AKNkC,AEGlC,AIHqC,ACCG,AFDH,AFCG,AFDG,AOM3C,AXLgD,AYCJ,CdI3C,CCAGzD,AGAA,CAAC,CGHDgF,AJHiBrC,ACMf,IDNmB,GFMZ,EMHA,ANGE,CAAC,EMHA,EAAE;APGjB,AKNiC,AEGf,AIHkB,ACCG,AFDH,AFCG,AFDG,AFO3C,AWAO,AFAP,AXNgD,AYCJ,EXAxC,AFKA1C,EcAOqF,MAAM,GdAF,AcAK,EdAH,CELD1C,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;AEFR,AEIlC,AIJqC,ACCG,AFDH,AFCG,AFDG,ALQ3C,AYAA,AXPgD,AYCJ,CbM3C,CcAGA,ERJAkC,AKDiBwC,ATDqB,EYMlC,EAAEhF,MAAM,CAACkK,IHLmB,AGKf,CRJD,GAAG,EAAE,uBKArB,yBAAYpK,KAAK,EAAE;APJW,AEIR,AIJW,ADAA,AFCG,AFDG,ALQ1C,AYAmE,AXPpB,AYCJ,EFErB,AGKnBgD,EZNI,GYMC,CZNG,CAAC3C,AYMF,IZNM,AYMF,GZNKA,IAAI;AEHU,AEKlC,AILqC,ADAA,AFCG,AFDG,ALUpC,AYF6D,AXPpB,AYCJ,EFIpCL,AGIJiD,ERLA/E,AJDI,AFMKP,GWJA,CAACmC,ATFF,AYMF,CZNGQ,CYMD,GHJO,ATFF,AYMF,CHJKqB,EAAE,ATFFrB,CSEG,CLDL,EJDM,CICH,CNKU,CMLR,ENKW,GWJA,EAAE,UAAU6E,OAAO,EAAEC,UAAU,EAAE;APNjC,AEKV,AILa,ADAA,AFCG,AFDG,AOQyB,AXPpB,AYCJ,EbSxCxH,AcAAyM,EHJQrK,ATFJ,GYMC,CZNG,CSEK,ATFJO,AYMF,CHJO8E,CXIL,EAAE,EENI,CSEK,AXIN,CWJOzG,CTFH2B,ESEM,CAAC,GTFD;AELM,AEOlC,AIPqC,ADAA,AFCG,AFDG,AOQyB,AXPpB,AYCJ,EbUxC1C,EENI,AYKKyM,EHHGhF,ETFJ,CICH3C,AJDInC,CYKM,EdCL,AcDO,CHHE,ATFN,CFMD,CWJS4E,CTFL5E,EICF,CAACR,CJDK,IICA,CKCW,CLDT4C,IQIa,CRJR,EAAEC,YAAY,EAAE;AFPb,AMAG,ADAA,AFCG,AFDG,ALa3C,AYLoE,AXPpB,AYCJ,CbW3C,CMLG,AJDA,EMPiBuB,AMWoBmG,ERHjC7K,AKCQ6F,CLDP,CQGoC,ERHjCvF,AQGkCE,CHFzB,EHTS,AGSP,CAAC,CLDP,CAAC4C,AQGkC,CAAC0H,GRH/B,CAACzH,CQGmC,CAAC0H,GAAG,CRHjC,CAACzH,KAAK,GAAG,EAAE;AFPxC,AMDqC,ADAA,AFCG,AFDG,ALa1C,AYLmE,AXPpB,AYCJ,ELFd,AFS1B,AJFC,EGLgBd,ASS2CwI,ERFxD/K,AKCQD,CLDP,AKCQ,EAAEyF,CLDPnF,EDPiB,ESS6C,CRFzD,CAAC8C,AKCQ,AGCkD5C,CHDjDR,CAAC,ELDN,CAACqD,CQE2D,CAACyH,IRFtD,CAACvH,AQE0D,CAAC0H,KRFrD,GAAG,IAAI;AFR3C,AMDqC,ADAA,AFCG,APcjC,AYP6D,AXLpE,AYD4C,ELFd,AFU1B,ADRyB,ASSwE,CAAC,CVRjFxJ,AMDAqD,ADAAF,AFCAb,ALIhB,AFQQ3F,ACZTI,EUQYyB,CLDP,AKCQ,CJRQ,CGDC,ACSPwF,CPRQ,AKDA,CHQd7F,CAAC,GAAC,ANKS,CMLR,AKCU,CAACK,CLDTL,AKCU,AXID,ACZT,CKOC,GAAGsD,KAAK,CAACzD,MAAM,EAAEG,CAAC,EAAE,EAAE;AMF2B,AXLjD,AYDyB,ETCjB,AIFvB,AECsB,ADAC,AFCF,AFDI,ALczBvB,AcJAiC,ERDI,AJJH,ADFQ7B,EUOGqH,CGAP,CRDGtC,CQCD,CACHsG,CZJJ,EFOW,CWJS,CXIP,CMLG,AKCM,GLDHxJ,ANKF,CCXQ,COJbA,GFUY,CAACpB,CEVR,EAAEc,AFUS,CEVR,AFUSb,CJFnB,AYIG,CNZSc,CAAC,AManBxB,ENbqBU,CFUU,CAACa,CAAC,EACjCC,CEX2B,AFW1B,EEX4BwC,AFW1B,KEX+B,EAAE,GFWvB,CAAC,aQEE;AAExB,AFRoE,ACJpE,CCYC,CVb0B,AMDD,ADAC,AFCF,AFArB,ALcAnE,ACZyB,EOJe,AFYpCkF,AKAI,AETRqG,CFSS,CAAC,ATHN,GWNC,GPSO,AOTJ,CPSKzK,AJHF,CFOC,AabF,EbaI,CEPC,CAACuB,CFOC,CKdLL,ECUU,AJHF,CIGG,EDVN,CCUS,CDVPN,CCUS,ADVR,CCUS,CAAC,ADVRC,CAAC,EAAEd,MAAM,EAAEsD,KAAK,EAAE;ASa1C,AFRkE,ACJrD,ETCX,AMFA,ADCA,AFAA,APcAlE,ACbyB,EOJe,AFapCiF,AKAIlD,ATHR,AGRwC,AQG/BwJ,KFQI,CAACnE,ELAF,CAACzF,AORK,GFQE,AJVRI,CGDAA,ACWSpB,AXIN,CIbHc,AKDAM,CLCC,AJaI,CWJO,CPTTL,AOSU,AJVR,CHCD,AMFC,CDCA,AFAED,CHCD0B,AMFC1B,AHCC,CDUK,AIXL,ADCDA,CAAC,AFAEC,CGDAA,AHCC,CDUKhC,AIXL,ADCDgC,CLCC,AKDA,AFAEqD,CGDAnE,CNEAmB,AKDAnB,GFAK,EHCA,AMFC,AHCCoE,CEAD,CLCC5B,AMFCc,CDCA/E,GFAK,CGDA,ADCD,CFAG,CGDA,ADCD,CLCC,EAAEkE,MESI,CAAC1D,CFTG,EAAE,MESI,GAAG,CAAC;ANKhE,AcDA,AFVoE,CZWnE,CERI,ADLD,AYAkB,ETDkC,AIHhD,AFaAsF,AIZoC,ADCD,AFAC,AFDA,ASexCJ,EHHYwC,EGGR,GAAG,CRHK,CAACzF,AKAM,EAAEG,AGGVE,KHHe,CAACuF,AGGV,CAACmF,IRHQ,AQGJ,CAAC7H,ERHMpF,CEbnBqC,APII,CUSuB,EGGR,CAAC,CNhBf,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM,EAAEsD,IFagB,CEbX,AFaYtE,UAAU,GAAG,CAAC;ANIjE,AYXmE,ECF9C,ETDkC,AIFhD,AFcAgF,AIdoC,ADCD,AFAC,ALOvC,AGPG,AJEU,EUUF7D,IHbHqF,CGaQ,EAAE,GHbJ,AFcC,AKDM,CLCLlB,EEdC,EAAE,AFcC,CAACD,QAAQ,ADbpBlD,CCaqB,IDbhB,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM,EAAEsD,KAAK;AOI4B,ECDhE,ETDG,AIHkB,AFejBzC,AIdA,ADCA,AFAA,ALMH,AGNGM,AJCU,CKYT,CKDOwF,GLCH,ADbA,CCaC,ADbA5G,CHQV,EGRa,CMYO,ANZNa,EMYQ,MNZA,CQER,MZAJ,CGDDO,AMFCA,ADCAA,APQA,CKRAA,IHCI,AMFC,ADCA,CFAA,CHCCN,AMFCA,ADCAA,CLCA,AMFC,ADCA,AFADA,CAAC,CHCCC,AMFCA,ADCAA,CLCA,AMFC,ADCA,AFADA,CAAC,CHCCyB,AMFCvC,ADCAA,CFAAmE,IHCI,CMFE,ADCA,AFAD,EGDGb,AHCDc,EFAF,GKDQ,CHCA,GAAES,oBAAoB,CAAChE,CAAC,EAAEC,CAAC,CAAC;AKGA,EJJhE,AFeA,EFZI,AMFA,ACaI,AFZJ,AFAA,AFAA,AQCU,CFWL,CAAC,ATJN,ADNIvB,GAAG,CGDFmD,AMFAxC,ADCAwF,AFAAzF,AFAAsD,CJEItF,ECMF,IEPK,AFOD,CQTE,ARSDwD,CQTE,AHCA,ANEF,CGDG,AMFA,AHCA,AFAA,AJEFvD,CSHG,AHCA,AFAAiD,CIAC,APQD,CKRE,CAAC,CEAC,AFAA,CEAC,AJAA,AJEF,CIFG,AJEF9C;AKY5B,AMVA,EJNK,EEEG,ACcI,AFbJ,AFAA8C,ALQJ,AGT2B,AOI3B4G,AXDI,AYFU,CZET,CGDGlH,CAAC,COYGgG,CPZD,AGDF,CHCG,AMFHrB,ADCAjH,AFACwB,GIaO,AJbJ,CEAA,AFACa,AKGJ,EFJK,ACcK+C,CFbJpF,AGGH,EFJK,AEIH,EHHK,CFAE,GGDCqH,IGEb,EFYmB,CAACkB,OAAO,CDdC,ACcAP,CDdC,EAAE,EAAE,EAAE,CAAC,ECcE,CAAC,EJbrB;ACH3B,AIMe,EJVmBlF,ANelC,AGRD,AJGA,ESFI,ACaI,AFbJF,AFAA,AKIK6G,ERHDlH,ASAAvB,CTAC,CITgC,AGqB7BsH,CPZD,AIT+B1D,ACQjC,AICE,CHDF0C,ADAC9F,AFAD+E,CMCI7G,EFYI,AFbJ,CAAC2C,CGIM,GDSE,CDbJ,ACaK,AEZP,CLTqC,AGqB7B,AJbL,AMCF1C,CLTqCwF,CEQjCvC,ACaK,AFbJ,CFAA,GMCC,CLTqC,AEQlC,AGCFhD,CHDG4B,GAAG,AHAA,CGAC+F,AHAA,CAAC,GGAG,CAAC3E,KAAK,CAAC8C,IAAI,CAACC,KDAnB,CCAyB,CAACC,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAKqB,MAAM,EAAE;AFRtB,AFsBhE,EDfK,AOKmB,AXFnB,EGAG,AKFyB,AFCzB,ALMH,AWLG,CTAC,ASAA,CHF8EO,ACcvEpC,IJbHoB,CGD+E,EAAE,KAAK,EHC5E,CIaE,CAACgC,CJbA,KIaM,CAACF,EJbC,CAAC,CAAC,CIaE,EAAE,CAAC,CAAC;ALC1C,EGdI,AGGoB,ACDpB,ETAI,AOYI,ATRP,AGRA,AJGA,ESFgGb,GJe5FzB,CFZItE,CFMT,GQTyG,EJe7F,AIf+F,CJe9F8D,EFZK,CAAC,CAAC,CEYF,CFZI,CEYF,EFZK,CAAC,KFMd;EIOZ,AGfC,AGID,ACFC,ETCG,AMJ6G,ACiBzG5C,AJdJ,AFJH,AJGA,CSFiH,CAAC,ARU/G,CIMC,EKCQ,CPbJwB,AOaKqE,AJdLhC,CDaAvE,ADfT,AJGA,CKYU,CJNC,EIMEsD,EJNE,CAACrC,EENG,AEYD,CFZE,AEYDpB,ACbC,GAAGa,ALOD,CULR,AXDT3B,EGAoBkD,AEYA,ECbG,ANCnB,CKYmB,AKCM,AJdL3C,CDaA,AKCM4D,ANhBxBxC,AJGA,EKYoBV,ACbC,CHCA,AEYA,ACbCwE,CHCApE,CAAC,ACHlB,CCemB,CFZC,AEYA,ADflB,ECeoBJ,CAAC,CCbE,CDaA,CFZAiC,AGDE,CDaA,CKCC,CAAC,IPbG,CAAC5B,CAAC,CAAC;EOe/C,CAAC,CPdD,AEYA,AIhBA,ADAH,AFGG,ALOJ,AUNc,ACFb,CFgBMK,CNjBH,AJGA9B,EKYImF,CAAC,CFZA5B,AMJAiD,ACkBG,AJfHX,AFFD,CMiBK,ANjBJ1B,CCeGiB,IAAI,CAACC,CFZA,ACHD,CDGE,AMJA,CAACzE,ATID,CIHC,CCeG,ADfF,CCeGwE,ALZFjF,GIHG,CCeG,ADfFgE,AJGA,CKYGmB,CIhBA,AHGA,CGHC,AHGAxD,CGHC,EAAE,CJgBE,AIhBD,ALCD,CKDE,AHGA,CDaE,ACbD,IDaKV,CAAC,GAAC,CAAC,CAAC,CAAC;EKIzCU,ATVH,EIM6C,AId1CA,ADFH,AFGmC,AKCtB,AXCd,AYHC,ETEmB0B,ACFhB,CMkBK,CAAC5B,CDlBD,CAAClB,ALAF,CIAR,AJASgD,AQET,EHFa,ACkBE,CDlBDnC,ACkBEkC,CLHW,CAACiB,AKGV,CAAC,IPhBgB,AEaF,CAACS,AIfZ,CNEe/B,AEaF,AKGV,CLHW,CKGT,ANlBJ,CCeesB,CDfb,EOGf,CCDA,CPaiC,CAACtD,AGfhC,CHeiC,CAAC,CAAC,AKGX6F,OAAO,EAAEC,SDlBjB,CCkB2B,EAAEU,KAAK,EAAEC,KAAK,EAAE;EJfvE,ANAC,EGD4C,AEaxCnD,AIbD,ACiBIwC,ATXP,CEN6C,CAAC,AKD3C,AJAApF,AOGI5B,ACDJ,GPYM,AMXC,CNWAkB,AIbFwF,AGCD,CPYI,ADdH,AOGIhI,ACDJwB,CPYI,ADdHwB,CIAC,CEkBO,CAACJ,AEhBN,CFgBO,AEhBNhB,CJFC,AJAA,CIAC2F,AJAA/B,CMkBOwD,ACfP,CAAC/I,CCDE,CAAC,EFgBQ,AFlBN,EGGC,CAACE,EFFI,CAAC+C,ALDD,AQEA,CRFC,CQEC,GHDI,ALDD,CKCE,ALDD,uBQEuB,CAAC;ENAzD,EHAG,AEYW4C,AIZX,ACiBIwC,AFlBR,APMC,AUHG,AXFH,CWEI,CPHD,AQEA,GPWgB,CFZXzD,AEYY0B,AIZZ0B,ALDD,AQEA,CPWc,AJLtB,AGRSjG,AQEAR,CTDE,AEYY,CFZX,COiBM,CAACqB,AEhBN,CFgBO,AEhBNjB,GFgBSqH,CDjBJ,ALDD,CAAC,AQEA,CHDE,AGCD,EFgBQ,ANlBN,EDCG,ACDD,CAAC,CDCE,ACDD,EHQhB,CWNmB,EAAE,4BAA4B,CAAC;EPY5D,AKKI,AFnBH,AGID,CDeK,CAAC,AJlBL,ANAA,EGA0B,AFQvB,AWNA,IAAI,CZAR,AYASzH,ETFwB+C,AFQtB,EWNE,CAAC3C,CXMC,CAAC8B,GERyB,ASEtB,CXMC,AWNA,CTFuB,OHEjC,EYAoB,EAAE,6BAA6B,CAAC;APYlE,EMXK,ERH0C,AMEvC,ADHH,AFCA,ALSD,EET4C,ACCxC,AJEA,AYAA,IZAI,AYAA,CNDR,ANCSlC,AYAAA,IZAI,AYAA,CZACC,AYAAG,KAAK,CAAC,KZAK,CAAC,EYAE,EAAE,GZAG,EAAE,KMDb,iBMCmC,CAAC,WZAW,EAAE;EUiBnE,ATXH,EERGsB,AMCA,ADHH,AGIA,ELAG,AFDA,AQEA,EZAIxB,CGHC,CAACI,AGEF,AFDA,AQEA,CJHR,AFESiF,AFDAjE,AQEAtB,ETHI,CAACmB,CSGD,CAACf,EZAI,EAAEvB,CYAD,CTHG,AGEF,AMCA,CNDC6G,AFDA,GAAG7G,EECE,EEFhBkH,AFEkB,AMCA,EAAE,IJHd,EAAE,CRGa,CAAC/G,KIFG,CAACA,GJEK,IGHb,ECCiB,GAAG,CAAC,AQEQ,CAAC;EHD1D,ACkBI0C,EPpByB,AFQ5B,AUNA,EHDG,AFEA,AFDA,AQEA,CFgBK,CAACF,AVhBFrB,EQHA,AFEA,AFDA,AQEA,CJHC4F,AFEAR,AFDAhE,AOET,ACASvB,EFgBM,CAACqD,CEhBH,CFgBK,AEhBJjD,CFgBK,AFnBJ,ERGI,CQHD2F,CRGGlH,AYAF,CNDC,AMCA,CNDC8G,CFDC,EIDE,CJCC9G,GOEf,ELDoB,AMCA,CFgBK,AJjBJ,CAAC,AMCA,CFgBK,CJjBH,IAAI,ANCN,CMDOwG,ANCNpG,IUgBa4H,CNlBV,CAAC5H,IECY,CIiBI,AJjBH,EIiBK6H,GNlBR,GAAG,CAAC,EQEU,CFgBI,AEhBH,EFgBK;EPnBnE,EOoBQ,AFnBR,APMC,AGLD,EECI,AKCA,AXAA,AYAA,CZAC,CUgBOA,AVhBN,EMDE,AKCA,ACAA,CNDCvB,ALMT,AULSvF,ACAAA,IDAI,ACAA,CDACI,ACAAA,EFgBQ,CAAC8B,EChBJ,ACAA,CNDC,AKCA,ACAA,CFgBO,AJjBN0D,IKCI,CDgBO,ATXxB5D,CULmB,CCAC,EXKhB,AWLkB,CNDC,CAAC,ALMlB,ESW0B,EJjBJ,CAACZ,CIiBO8C,AJjBN,GAAG,IAAI,CAAC1C,EKCE,CAAC,ELDE,CAACqE,CIiBC,CAAC6B,GEhBG,CAAC,CNDC,CAAChD,EIiBE,CAACoC,EJjBE,GAAG,CAAC,EAAE,EIiBE,CAAC,CJjBC,CIiBC,AJjBAzF,CAAC,GAAG,IAAI,CAACG,KAAK,CAACqE,OAAO,CAAClB,MAAM,GAAG,CAAC,EAAE,IAAI,CAACnD,KAAK,CAACqE,OAAO,CAACnB,KAAK,EAAE,IAAI,CAAClD,KAAK,CAACqE,OAAO,CAAClB,MAAM,CAAC;EHHlK,AMGD,ADFC,AJCA,EEED,AMCA,EFgBYjD,ATXR,AULA,AXAA,ICKI,AULA,AXAA,CUgBS,ATXRM,AULAhC,AXAAA,CUgBS+G,GTXL,AULA,AXAA,CWAC3G,AXAAA,EUgBU,ATXR4B,CSWS1B,EChBN,AXAA,CUgBS,ATXR,AULA,AXAA,CUgBS,WChBG,AXAA,EWAE,AXAA,yBWAyB,AXAA,CWAC,AXAA;ESD5D,AHAC,AFFA,AQGA,ETLA,AKCA,APUD,ADLA,EWAI,EDgBY0G,EChBR,CAAChH,IDgBc,AChBV,CAACI,CDgBW0G,IChBN,CAAC,KDgBe,QChBF,EAAE,0BAA0B,CAAC;APJ7D,EKED,AROC,AGzBiClF,AJoBjC,EGNA,AKCA,AFGA,AMCA,EDEG,EDgBYqF,ANrCwB,CAACvD,COqBjC,CRLR,AKCA,AGIS1D,EDgBY,EAAE,AChBV,CDgBW,AChBVI,IPrBsC,CAAC6D,AOqBlC,CAAC,KPrBuC,AOqBlC,EAAE,MRLZ,GKCG,kCGIoD,CAAC;APrBZ,EHyB1D,EQPD,AHAC,ANEA,AYDA,ETFG,AKCA,AGIA,EDgBY3C,EPrBR,AQKA,CRLCgC,AGGT,AKEStD,ACDT,EJHW,EGIE,CAACI,CHJC,CAAC6F,EEoBY,CChBT,CDgBWpH,AChBV,GRLG,CAAC,GQKG,ACDlB,CJHmB,CGIC,UDgBY,CAACG,AJlBpB,SIkB6B,QChBM,CAAC;AVGzD,IQPD,ADCA,ARCC,EMCG,AKEA,ACDA,ETLsBuE,AOsBVhC,EJlBR,AKEA,CFJR,AHESgE,AKEAvF,AXDT,IWCa,CAACI,KRNyB,AOsBV,AChBV,CLFC,AKEA,CRNqB,AOsBVvB,AJlBV6G,KAAK,CNCjB,CMDmB,EKEE,EAAE,EFJhBgB,GAAG,EAAEC,CCoBqB,CAAC1H,CDpBnB,EAAE,OCoB2B,YChBU,CAAC;AVE/D,EONA,ILF6C,AMG1C,AHEA,AKEA,AXDA,AYAA,CTN2C,CAAC,AOuBhC0I,EJlBR,AKEA,AXDAtH,AYAA8K,CNDC5F,AKEAvF,CXDC,CSHCgF,ACoBU,EAAE,AChBV,AXDA,CWCC5E,ACDA,CHHC,CAAC6E,ACoBU,CVjBT,AYAA,CZAC3E,CWCC,CLFC,AKEA,CFJC,AHEAqF,ANCA,AYAA7D,CHHCkD,ATGAzE,ISHI,CAAC2E,CTGC,CAAC,CMDC,ANCA,CMDC,CAAC,CGFC,AEIA,AXDA,CMDC,AMCT,CHHU,AEIA,AXDA,AYAT,CZAU,EMDE,ANCA,CSHCyB,AHEArB,GGFG,CGGR,EHHWoB,AGGT,CAAC,EHHW,AGGT,CNDU,CAAC,ANCA,CSHC,ATGA,CSHC,ATGAlG,CSHC,CAAC,EGGP,CHHUkG,CGGR,EHHW,CTGC,CAAC,CAAC,EAAC,CAAC,CAAC,EWCG,CAAC;IRNtE,AMGA,ADFC,EFIG,AKEA,AXDArG,EUiBY6G,AVjBV,AYD4CkE,CZC3C3K,CMDC,AKEA,CLFC8E,AKEAvF,GCF+C,CDE3C,CDgBW,AChBVC,ACF4C,CZC3C,AYD4C,CFkBjC,AVjBV,CAAC,CAAC,EMDE,CAAC2F,IKEI,CAAC,KLFK,CAAC,CKEC,EAAE,CLFC,CAACxE,CAAC,GAAG,IAAI,CAACI,KAAK,CAACqE,OAAO,CAACnB,KAAK,GAAG,CAAC,EAAE,GKEG,CLFC,CAACrD,AKEA,CLFC,GAAG,IAAI,CAACG,KAAK,CAACqE,OAAO,CAAClB,MAAM,GAAG,CAAC,EAAE,IAAI,CAACnD,KAAK,CAACqE,OAAO,CAACnB,KAAK,EAAE,IAAI,CAAClD,KAAK,CAACqE,OAAO,CAAClB,MAAM,CAAC;EHLlK,AMGA,EDFA,AFKD,EIkBY,AVjBRtE,CUiBS,CAAC,AChBNH,AXDF,AYFuDmL,CZEtD3K,EQJP,GRIY,AYFuD,EAAE,CZEtD,CWCG,EAAElB,AXDF,gBQJFyG,GGKe,CAACxG,QHLJ,EAAE,CGKa;ELF1C,EHNA,AMGA,ACsBO,EFrBJ,ARKA,AYJsE,CAAC,CDInEU,ACJoE,EJDpE,ARKAQ,CQLCsF,KRKK,GWAK,AXAF,CAAC,CWAGzG,EHLA,GAAGyG,YAAY,EGKJ,CAACvG;EDiB7B,AJpBH,CIoBI,CP1BJ,AMGA,ADED,CEqBOgC,CChBH,AXAA,AYJA,CDIC,CAAC,EDgBM,AVhBJd,AYJA0K,CTJR,AMGA,ACqBa,KVhBC,CYJC,EZIE,CAAC,AYJA,IAAIxJ,UTJR0B,GSIY,CTJR,ASIS,ETJPC,AMGA/B,INHI,CMGC,CNHC,CMGC,AGCS,EAAE,CAAC,EAAE,QAAQ,EAAE;ANAlD,EEDA,AFtB6BE,IHoB1B,AMGA,AEKA,AXEA,EM9BgC,AMuBgBwJ,CNvBf1H,CHoB7B,AMGA,AEKA,AXEA9D,CGVCqD,AMGA5B,AEKArB,CFLC,EGAgD,CHA7C0B,AEKA,CAACtB,ACL8C,CAAC,CTH7C,EMGE,AHvB8B,CHoB7B,AMGAoE,AHvB8BW,AK4B9B,CAAC,EXEE,CSPC,AHvB8B,AN8B9BtE,CSPC4D,IEKI,CXEC,CSPC,AEKA,CFLCE,ETOE,CAAC,EAAG,CSPA,GAAG,GAAG,cEKc,CAAC;AL5BL,EI6CjD,EFvBH,ECEG,AEKA,ERRIvD,AHUAN,AYRuDuK,CTFtD,CMGD,AEKA,CRRG7H,AMGFpC,AEKApB,CFLC,EGD2D,CTFtD,AMGF0B,AEKA,AXEE,CWFDtB,AXEEW,AYRuD,GZQpD,CSPD,ATOE,CSPDyD,AEKA,CAAC,GFLG,CAACC,KEKK,CFLC,CAACC,AEKA,KFLK,GAAG,GAAG,cTOgB,CAAC,EWFA,CAAC;EDiBxDhD,EDrBJ,ADHC,EGQG,AXEA,AYT2E,CFuBtE,AVdJ,AYT2E,CTDxEL,AOwBEG,AEvBuE,CTDxE,CQQD,CRRGiC,AKEX,AGMSzD,EDgBM,AVdJ,CUcKqD,CChBH,CDgBK,AChBJjD,CDgBK,IChBA,CAAC,QHNV,EEsBwB,AChBJ,EDgBM,AChBJ,UDgBayG,OAAO,EAAEC,UAAU,AChBH,CAAC,CDgBI;EDrBjE,ECsBO,EPxBJ,AKEA,AGMA,CRRC,COwBOA,AVdJ,EWFA,CAAC9G,EHNE,ARQE,EWFA,CAACI,CHNC,ARQEY,CUcK,AFtBNlC,ARQE,CUcKoD,EChBJ,AXEA,CQRC,AGMA,AXEA,CUcO,CVdLlB,CAAC,GUcS,AVdNpB,EWFE,EAAE,IDgBU,IAAIsE,EVdJ,CAACrD,MAAM,EAAEG,CAAC,EAAE,CUcC,CAAC0G,AVdA,GWFG,CAAC,IDgBI,CAACZ,UAAU,CAAC,EAAE;IDtB3E,ADCD,ELFI,AOwBQpF,AChBR,ACPA,ITDI,AQQA,AXEI9B,CGVHsD,AOwBQ,AChBRlD,CDgBS+G,GChBL,CAAC3G,EDgBU,CAACE,EPxBN,AQQA,CRRC,AOwBQ,AChBR,CDgBS,CVdH,CAACU,CGVH,AHUI,CGVHiC,AHUI,CAAChC,EWFF,EAAE,ERRE,CAACG,CAAC,EAAE,AHUI,CAAC,GGVD,CAAC6B,AHUI,CAAC,MGVE,CAAC5B,CAAC,CAAC,MQQM,CAAC;EHNzD,ELDD,AMAC,EEQG,ACPA,EFuBY2F,EChBR,AXEI,AYTJuE,CHCR,AEMSvL,GXEOkB,CUcO,AChBV,CAACd,CDgBW0G,CEvBT,GDOG,ACPA,CDOC,GXEO,AYTJhF,EFuBY,CVdL,IWFA,AXEI,CSRrB,ATQsBxB,CWFH,EXEM,CAACa,CYTZ,CAAC,MZSmB,CAACvB,GYTV,EAAE,CAAC,EAAE,MZSmB,CAACoB,AYTb,CZSc,CWFH,AXEI,AYTb,CDOU,AXEI;EGVjE,AKCA,ICEG,AEMA,EDgBYiG,AExBqCoE,EHE7C,AEMA,AXEInK,CSRH6C,AEMA/D,EDgBY,CExBsC,CFwBpC8G,AChBV,CAAC1G,ACR+C,EHE7C,GAAG,AEMA,AXEI,CSRH,AEMA,AXEIgB,CAAC,CYV4C,CFwBpC,CDtBT,ACsBUwG,AVdNjH,CSRHoD,GEMG,EAAE,AXEI,ESRF,CTQM/C,CAAC,GUcQ,AVdL,CUcMiG,EVdF,GUcO,cChBI,CAAC;AHRzD,EA3B+BnB,EL0B/B,AQUD,EFNI,ECsBYxE,AEzBuDW,EHG/D,ATQIf,CSRHkF,GGHoE,EAAE,IHG7D,ACsBU,CDtBTrC,AD9BsB,ARsClB,CUcOlF,AVdNwC,CAAC,GAAGT,ESRF,GAAG,CAAC,ATQI,ISRA,CAACwF,ICsBM,CAACpH,IDtBE,CAAC+E,ICsBM,GDtBC,ACsBA,CAAC;AFpDZ,EGoCxC,ERVA,AMKD,EGJwF,CAAC,CF0BzExC,AE1B0E,EZY9EL,CGXZ,UOyB6B,AVdN,CAACV,CUcO3B,QVdE,CAAC,CGXrB2E,AHWsB,EAAE,CAAC,CGXrB,AHWsB,EGXpBC,GOyBuB,CPzBnB,AOyBoBxE,EPzBlB,QOyB4B,GAAC,CAAC;EDtBtD,EEKA,ERPG,EOyBY0I,EPzBR,AHWIzG,CGXH,EOyBY,EPzBRsC,AOyBUsD,IPzBN,EHWM,CAACxF,CGXH,CAAC,COyBW,CAACsG,EPzBR,CAAC,IAAInE,CHWK,GGXD,AHWI5E,EUcQ,CAAC8I,CPzBT,CAAC,EAAE,COyBW,WVdH,CAAC3I,SAAS;EST3D,EEKA,ECPG,ETCI,AOyBQkI,EVdJhG,CWHZ,CRRY,CAACV,GOyBW,EAAE,GVdH,CGXD,AHWEe,CGXDiC,IAAI,EAAEC,AQQpB,IRRwB,CAAC,CHWG,GAAG5E,mBAAW,CAACI,UAAU;ASV7D,EA/B8B6G,IN+B3B,AOyBQ,ACjBR,ACTA,CF0BS,CAAC,AVdN,EWHA0C,ACTAgD,MAAM,GDSG,ACTA,EH9BuB,CEuCpB,CCTC1J,GDSG,CAAC0C,IAAI,CAACC,ICTL,CAAC,CDSU,CAACC,KAAK,CCTR,EAAE,CAAC,EAAE,QAAQ,EAAE;AH9BT,INgCxC,AOyBQ,ECjBJ,AXGA,EYb8C+G,EDU1ChD,ICVgD,EAAE,CAAC,GDUzC,GAAG,IAAI,CAACjE,IAAI,CAACC,MAAM,CAACE,MAAM;ERR3C,AO0BE,CAAC,EAAEjD,CChBF,AXGA,EYfyDgK,EF4BlD,AChBHhD,AXGA,CUaI,AVbHlH,KAAK,CAACC,EYfyD,EZerD,AYfuD,CZetD,MWHM,GAAG,IAAImF,AXGA,EAAE,YAAW,UWHE,CAAC,IAAI,CAAC;ERVrD,AO4BGlF,IChBA,ACd0E,CF8BrE,AE9BsE,CF8BrEF,AVdF,AYhBwE,EDcxEmH,EXEI,CUcG,AVdFjH,CUcG2B,EAAE,AChBJ,CDgBK,CVdD,CWFD,AXEE1B,IWFE,CAACrB,AXEE,CAAC9B,EWFA,CDgBK,AChBJoK,EDgBM,GVdJ,CAACnK,IWFO,CAAC,CDgBIoI,AChBH,AXEH,CAAClI,CWFI,CAAC,EAAE6J,EDgBK,AVdN,CAAC,CUcO1B,KChBE,EAAE2B,GDgBM,EAAEZ,KChBE,EAAE,CDgBI,EAAE,EChBD,CAAC;ARZvE,EA/B+BjG,EO4DxBiG,EChBJ,AXEA,AYhBA,CZgBC,CG9CiC,CAACnE,AH8ChC,CWFCmF,ACdA8C,EF8BQ,CAAC7D,AVdN,CAAC,GWFG,CCdC,ET9BkC,AQ4ChC,CR5CiCnE,AS8BhC,GDcG,CR5CiC,AQ4ChCrD,ACdAwB,GDcG,CAAC1B,GDgBS,EAAE,AChBN,CAAC,CAAC,EAAE,ACdT,CDcU,ACdT,EDcW,QCdD,EAAE,CAAC,EDcW,ACdT,CDcU,SCdA,EAAE;AT9BA,EO6DnD,CAAC,CAAC,AVdN,EWFI,ECfoDqL,EDehDpL,EAAE,ECfoD,CDejD,CCfmD,CAAC,EDehD,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;EDkB5CmB,AVhBH,IWDGiH,CDiBK,CAACnH,AEjCyDkK,IDgBzD,CDiBK,ACjBJjL,CDiBK4C,EAAE,CAAC,EEjC2D,EDgB3D,AChB6D,CDgB5D,AChB6D,CDgB5D,CAAC,IDiBQ,EAAE,UAASwD,OAAO,EAAEC,UAAU,EAAEe,QAAQ,EAAE;EVhBvE,EUiBOA,EChBJgB,AClB8E,CAAC,CAAC,IFkCpE,CAACpD,AChBN,CAACqD,WAAW,CAACN,MDgBY,EAAE,CChBL,GAAC,CAAC,EAAEC,UAAU,CAAC;AXD/C,EUkBG,AV/D8B7G,CU+D7B,CAAC,EChBFiH,EX/CoC,CAAChH,IW+C9B,CAACpB,AX/CkC,QW+C1B,CAAC,KAAK,CAAC;AX/CmB,EUiE1CiB,ICjBArB,AClBA,CFmCK,CAACmB,ACjBJ,CAACsH,IDiBQ,CAACzF,EAAE,CAAC,GCjBD,CAACmF,EDiBM,EAAE,KCjBC,GAAC,CAAC,CDiBM3B,CCjBJ4B,MDiBW,EAAE3B,ECjBH,GAAC,GAAG,CAAC,CDiBQ,EAAEe,QAAQ,EAAE;IAC3Df,ECjBJzG,AClBA,EDkBE,CAACI,CClBCmL,IFmCU,CAACpK,CEnCL,CDkBC,CAAC,CClBC,CFmCO,CAACuG,CCjBL,CAAC,AClBAjG,KFmCW,GAAG,KAAK,AEnCf,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE;MDoB9C,ECpB+CuJ,EDoB3CtC,ICpBiD,EDoB3C,ACpB6C,GDoB1C,IAAI/C,CCpB8C,cDoBxC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE9B,eAAS,CAAC;IDiBjD,EChBJ6E,ECrBiE0C,IDqB3D,CAAC3C,CCrBgE,EAAE,QDqBvD,CAACN,SAAS,GAAC,CAAC,EAAEC,UAAU,GAAC,IAAI,CAAC;IDiB5C3B,EChBJiC,ACtB0E,CAAC,CAAC,IDsBtE,CAACtI,CDgBO,CAACa,MChBA,CAAC,CAAC,CAAC,GDgBS,GAAGzC,mBAAW,CAACG,SAAS,GAAG,CAAC;IACnD8H,ECfJ,ACvBA,IDuBIkC,ACvBA6C,IFsCU,CAACtK,ACfN,CCvBC,EDuBE,CCvBC,GDuBG,CAACjB,ACvBAwB,GDuBG,CAAC1B,CDeO,GAAGvB,CCfL,CAAC,CAAC,EAAE,ACvBT,CDuBU,ACvBT,EDuBW,MCvBH,CDuBU,CAAC,ACvBT,CAAC,EFsCS,AEtCP,CFsCQI,QEtCC,EFsCS,AEtCP,GFsCU,CAAC;IACrD6H,ECfJ,ECxB+CuE,EDwB3CpC,IDeU,AEvCuC,CFuCtC7H,CAAC,AEvCuC,EDwB3C,CDeOyG,ECfJ,GCxBgD,CDwB5C,CAACvH,CDeO,CAACc,CAAC,ACfN,CAACiF,IAAI,CAAC,CAAC,EAAC,CAAC,EAAE0C,MAAM,CAACG,SAAS,EAAE,EAAE;IDgBlDpC,IChBmDR,ACxBUmF,KDwBL,CDgB9C,AExCyD,CFwCxDpK,AChB+C,CDgB9C,AExCyD,GFwCtDwG,GChBkD,KDgB1C,CAACxG,CAAC,GAAGwG,QAAQ,CAACxG,CAAC,GAAG,CAAC;IAE1CzB,EE1CsE,CAAC,CDwBJ2G,ACxBK,QDwBG,EAAE,MDkB/D,CAAC1B,IAAI,CAACiC,UAAU,CAAC;MClBoD,ACtBvFmE,CDsBwF,CAAC,GCtBpF,CAACpG,IAAI,CAACsG,MAAM,CAAC;IF0Cd,ECnBJnC,ACtBAiC,KDsBK,ACtBA,CDsBCxK,ACtBAoE,IAAI,CAACyG,GDsBG,CAAC,CAAC,CAAC,CCtBC,CAAC;IF0CftD,ECnBJiB,ACtBAgC,KAAK,CAACpG,EFyCQ,ACnBN,CDmBO,ACnBNiE,CCtBC,CAACyC,QAAQ,CDsBC,ACtBA,CFyCM,ACnBL,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;MDqBtBzE,ACpBR,ACtBAmE,IDsBIlF,CCtBC,CAAClB,IF0CY,ACpBR,ACtBA,CF0CSoD,AE1CRuD,EDsBE,IAAI,ACtBA,CDsBClL,ACtBA,EF0CU,CAAC,ACpBR,CAAC6I,IDoBY,CAAC,CAAClI,GCpBL,CAAC,CAAC,EAAE,CAAC,EDoBU,ACpBR,CDoBS,ACpBR+H,KDoBa,ACpBR,CDoBS,CCpBPC,QAAQ,CAAC,CAAC;IDqBpD,CAAC,CCpBLlD,ACtBAkF,CF0CO,GAAG,CAAC,AE1CN,CDsBC,ACtBApG,CDsBCiE,GCtBG,CAAC6C,ODsBO,CAACnD,ACtBA,CAAC,QDsBQ,GAAC,EAAE,EAAEC,UAAU,GAAC,GAAG,CAAC;IDsB5CZ,ECpBJ,ACvBAoD,IDuBI7B,CCvBC,CF2CO,AE3CNvE,CF2COY,GE3CH,CDuBC,ACvBAmG,GDuBG,GCvBG,CDuBC,ACvBA,CDuBCtL,GAAG,CAAC+I,GDoBS,CAAC3H,ECpBJ,CAAC,CAAC,CDoBO,CAAC,ACpBN,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC;IDsB7CA,ECrBJ,ACvBAuJ,GF4CS,CAAC/C,ACrBNoB,CCvBC,CAACzE,IAAI,CF4CO,AE5CNgH,CF4CO1D,ECrBJ,EDqBQ,CAACC,ACrBN,ACvBA,CAAC,GDuBG,CDqBO,ACrBN9H,CDqBO,ECrBJ,CDqBO,ACrBN+F,EDqBQ,ECrBJ,CAAC,CDqBO,ACrBN,CDqBO,CCrBN,CAAC,EAAE0C,MAAM,CAACQ,eAAe,EAAE,EAAE;EDsB9D,CAAC,CAAC,EE3CF,EDqB+DjD,ECrB3D,CAAC5E,EDqB+D,EAAE,CCrB5D,CAACpB,GAAG,CAAC9B,CDqB8D,OCrB3D,CAACC,MAAM,CAACE,MAAM,EAAE4J,wBAAW,EAAE,KAAK,CAAC;EF6CrD7G,IE5CA,CF4CK,CAACF,ACxByE+E,ECpB3E,CAAC7E,EF4CM,CAAC2B,EAAE,ACxByE,ACpB7E,CF4CK,AE5CJ1B,CDoB8E,ICpBzE,CAACnD,GF4CO,EAAE,GE5CN,CAACC,MF4CcoI,AE5CR,CAAClI,MF4Cc,AE5CR,EF4CUmI,AE5CRmE,KAAK,CAAC,IF4CY,EAAE5C,OAAO,EAAE;IAE7D,AE7CR,EDmBmG,CAAC,CD0BxF,AC1ByF,CD0BxFA,OAAO,EAAE;EE7CrB,IF8CWnE,AC1BRoF,UAAU,CAACR,ID0BM,CAACjE,IAAI,CAACiC,CC1BD,CAAC,CAAC,EAAE,EAAE,CAAC,ED0BI,AC1BF,CD0BG,AC1BF;ECpBnC,IF+CWA,AC1BR,IAAI0C,MD0Bc,CAACjI,AC1BR,GAAG,IAAI,CAACjB,GAAG,CAAC6I,CD0BS,GAAGtK,KC1BH,CAAC,CAAC,EAAE,CAAC,EAAE,CAACuK,MD0BM,CAACnK,AC1BA,EAAEqK,QD0BQ,EC1BE,CD0BC,AC1BA,CD0BC,AC1BA;ACrBhE,EA3C0B1H,IF2FfkF,AC1BR0C,ECjE6B,CAAC3H,IDiEvB,CAACiH,ACjE2B,EF2FjB,CAACxH,QC1BA,CAACkH,GD0BW,GAAG3J,GC1BL,GAAC,EAAE,EAAE4J,SD0BW,CAACzJ,AC1BF,GAAC,IAAI,CAAC,CD0BK,GAAG,CAAC;AE3FxB,MF4F3B0C,ACzBR,IAAI+H,CDyBS,CAAClC,SCzBC,GAAG,IAAI,CAACjH,GDyBW,ACzBR,CDyBS4D,ACzBR3D,MAAM,CAAC,CAAC,EAAE,EAAEkI,GDyBK,CAAC,MCzBI,EAAE,aAAa,CAAC,CAACjI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;ID0B7E,ECzBJiJ,WAAW,CAAChJ,QAAQ,CAAC,GAAG,CAAC,CAAC6C,cAAc,CAAC;ED0BzC,CAAC,EAAE5B,GC1BuC6B,ED0BlC,CAAC,UC1B8C,EAAE;AD2B7D,CAAC,KC3BgE,CAAC,CAAC;AD2BlE,MC1BGkG,WAAW,CAACpG,EAAE,CAAC,aAAa,EAAE,UAAUqG,KAAK,EAAE;QAC3C,IAAI,CAAChI,KAAK,CAACC,KAAK,CAACnD,QAAG,CAACC,MAAM,CAACG,YAAY,EAAEgB,oBAAc,CAAC;MAC7D,CAAC,EAAE,IAAI,CAAC;;MAER;MACA;MACA;MACA;MACA;;MAEA;MACA;;MAEA;MACA,IAAI+J,aAAa,GAAG,IAAI9G,eAAM,CAAC2F,SAAS,EAAEC,UAAU,GAAC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAACmB,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC;MAC7GF,aAAa,CAACG,YAAY,EAAE;;MAE5B;MACA,IAAIjC,QAAQ,GAAG,IAAI1C,aAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAEjD,IAAAL,aAAO,EAACX,eAAS,CAAC;MAClB,IAAAE,eAAS,EAAC,IAAI,EAAEF,eAAS,EAAEC,sBAAgB,CAAC;MAE5C,KAAK,IAAIpD,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGxB,mBAAW,CAACG,eAAe,EAAEqB,CAAC,EAAE,EAAE;QAChD,IAAI+I,KAAK,GAAG,IAAI7D,cAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAElF,CAAC,CAAC;QAC7CsH,UAAU,CAACzD,IAAI,CAACkF,KAAK,CAAC;MAC1B;MACA,IAAI,CAACC,iBAAiB,EAAE;IAC5B;EAAC;IAAA;IAAA,OAED,8BAAqB9F,SAAS,EAAE;MAC5B,IAAI+F,cAAc,GAAG,IAAI,CAACzF,IAAI,CAACC,MAAM,CAACE,MAAM;MAC5C,IAAIuF,aAAa,GAAG,IAAI,CAAC1F,IAAI,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC;MAC9C,IAAIyF,MAAM,GAAGtL,mBAAW,CAACO,WAAW,GAAI4F,IAAI,CAACC,KAAK,CAACf,SAAS,CAACrD,MAAM,GAAG,CAAC,CAAE;MAEzE,KAAK,IAAIG,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGkD,SAAS,CAACrD,MAAM,EAAEG,CAAC,EAAE,EAAE;QACrC,IAAIoJ,IAAI,GAAGlG,SAAS,CAAClD,CAAC,CAAC;QACvB,IAAIqJ,KAAK,GAAGH,aAAa,GAAG,CAAClJ,CAAC,GAAG,CAACkD,SAAS,CAACrD,MAAM,GAAG,CAAC,IAAI,CAAC,IAAIhC,mBAAW,CAACK,YAAY;QACvF,IAAIC,SAAS,GAAG,CAAC6B,CAAC,GAAG,CAACkD,SAAS,CAACrD,MAAM,GAAG,CAAC,IAAI,CAAC,IAAIhC,mBAAW,CAACM,SAAS;QAExEiL,IAAI,CAAChJ,CAAC,GAAGiJ,KAAK;QACdD,IAAI,CAAC/I,CAAC,GAAG4I,cAAc,GAAGE,MAAM;QAChCC,IAAI,CAACnD,KAAK,GAAG9H,SAAS;QACtB,IAAI6B,CAAC,GAAGkD,SAAS,CAACrD,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE;UAC9BsJ,MAAM,IAAItL,mBAAW,CAACO,WAAW;QACrC,CAAC,MAAM;UACH+K,MAAM,IAAItL,mBAAW,CAACO,WAAW;QACrC;QAEAgL,IAAI,CAACxC,aAAa,GAAG;UACjBX,KAAK,EAAEmD,IAAI,CAACnD,KAAK;UACjBU,KAAK,EAAEyC,IAAI,CAACzC;QAChB,CAAC;;QAED;QACAyC,IAAI,CAACE,QAAQ,CAAC,EAAE,CAAC;MACrB;IAEJ;;IAEA;EAAA;IAAA;IAAA,OACA,mBAAU;MACN,IAAInG,eAAS,CAACtD,MAAM,GAAG,CAAC,EAAE;QACtB,IAAI0J,QAAQ,GAAGnG,sBAAgB,CAACoG,GAAG,EAAE;QACrCD,QAAQ,CAACE,OAAO,EAAE;QAElB,IAAIC,QAAQ,GAAGvG,eAAS,CAACqG,GAAG,EAAE;QAC9BtG,eAAS,CAACW,IAAI,CAAC6F,QAAQ,CAAC;QACxBA,QAAQ,CAAC5G,UAAU,CAAC,IAAI,CAAC;QACzB,IAAI,CAACyD,oBAAoB,CAACrD,eAAS,CAAC;MACxC;IACJ;;IAEA;EAAA;IAAA;IAAA,OACA,6BAAoB;MAChB,IAAIyG,UAAU,GAAG,CAAC;MAClB,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAIC,eAAe,GAAG7F,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI0F,UAAU,GAAGD,UAAU,GAAG,CAAC,CAAC,CAAC,GAAGA,UAAU;MAC5F7J,OAAO,CAACC,GAAG,CAAC8J,eAAe,CAAC;MAE5B,IAAIC,mBAAmB,GAAG,CAAC;MAC3B,IAAIC,mBAAmB,GAAG,CAAC;MAE3B,KAAK,IAAI/J,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAG6J,eAAe,EAAE7J,CAAC,EAAE,EAAE;QACpC,IAAIgK,WAAW,GAAG1C,UAAU,CAACtD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGoD,UAAU,CAACzH,MAAM,CAAC,CAAC;;QAE3E;QACAmK,WAAW,CAACvE,UAAU,EAAE;QACxBuE,WAAW,CAAC5J,CAAC,IAAI0J,mBAAmB;QACpCE,WAAW,CAAC5E,SAAS,CAAC/E,CAAC,IAAI0J,mBAAmB;QAE9CD,mBAAmB,IAAI,GAAG;QAC1BC,mBAAmB,IAAI,GAAG;MAC9B;IACJ;EAAC;EAAA;AAAA,EA7J4BnJ,MAAM,CAACC,KAAK;AAAA","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 260,\r\n    cardHeight: 410,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemySprite = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3\r\n}\r\n","import { CST } from \"../CST\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\nlet graveYardArray;\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"background\", \"./assets/background.png\")\r\n    }\r\n\r\n    create() {\r\n        let bg = this.add.sprite(-110, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n        bg.alpha = 0.3;\r\n\r\n        let startX = 0;\r\n        let startY = 0;\r\n\r\n        \r\n        if (graveYardArray.length == 0 ) {\r\n            console.log(\"You have no discarded or used cards.\")\r\n        } else {\r\n            for (let i=0; i < graveYardArray.length; i++) {\r\n                graveYardArray[i].setVisible(true);\r\n                let discardCard = this.add.existing(graveYardArray[i]);\r\n                discardCard.x = startX + (i * 150);\r\n                discardCard.y = startY;\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth;\r\n                discardCard.displayHeight = gameOptions.cardHeight;\r\n            }\r\n        }\r\n\r\n        this.input.once(\"pointerdown\", function() {\r\n            this.scene.start(CST.SCENES.BATTLE);\r\n        }, this);\r\n    }\r\n}","export default class Card {\r\n\r\n    constructor(name, cost, effect, type) {\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.effect = effect;\r\n        this.type = type;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCost() {\r\n        return this.cost;\r\n    }\r\n\r\n    getEffect() {\r\n        return this.effect;\r\n    }\r\n\r\n    getType() {\r\n        return this.type;\r\n    }\r\n\r\n    setCost(cost) {\r\n        this.cost = cost;\r\n    }\r\n\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n       super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changeCursor() {\r\n        this.setInteractive({ useHandCursor: true });\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","import { gameOptions } from \"../../config\";\r\n\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth / 2;\r\n        this.displayHeight = gameOptions.cardHeight / 2 ;\r\n    }\r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nlet handArray = [];\r\nlet deckArray = [];\r\nlet deckTrackerArray = [];\r\nlet graveYardArray = [];\r\n\r\nfunction deckSetUp(scene, array, arrayTracker) {\r\n    let x = scene.game.config.width / 25;\r\n    let y = scene.game.config.height / 1.24;\r\n    for (let i=0; i < array.length; i++) {\r\n        let cardBack = scene.add.sprite(x,\r\n        y, 'cardBack');\r\n        cardBack.setOrigin(0.5, 1);\r\n        cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n        cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n        \r\n        arrayTracker.push(cardBack);\r\n        x += 4;\r\n    }\r\n}\r\n\r\n// implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\nfunction shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i+1));\r\n        [array[i], array[j]] = [array[j], array[i]]\r\n    }\r\n}\r\n\r\nexport {handArray, deckArray, deckTrackerArray, graveYardArray};\r\nexport {deckSetUp, shuffle};\r\n\r\n","import { graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","export default class Character extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.health = 50;\r\n    }\r\n\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Player extends Character {\r\n\r\n    constructor(scene, x, y, sprite, deck) {\r\n        super(scene, x, y, sprite);\r\n        this.actionPoints = 6;\r\n        this.deck = deck;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints = actionPoints;\r\n    }\r\n\r\n    getDeck() {\r\n        return this.deck;\r\n    }\r\n}","import Character from \"./Characters\";\r\n\r\nexport default class Enemy extends Character {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n}","import { handArray, graveYardArray } from \"./Deck\";\r\nimport { gameOptions } from \"../config\";\r\n\r\nexport default class InteractHandler {\r\n    constructor(scene) {\r\n\r\n        scene.input.on('dragstart', function (pointer, gameObject) {\r\n            scene.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            scene.tweens.add({\r\n                targets: scene.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                handArray.splice(index, 1);\r\n            }\r\n\r\n            scene.arrangeCardsInCenter(handArray);\r\n\r\n        }, scene);\r\n\r\n        scene.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        scene.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n            }\r\n        }, scene);\r\n\r\n        // hover out listener\r\n        scene.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\r\n                scene.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth/2,\r\n                    displayHeight: gameOptions.cardHeight/2,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10,\r\n                });\r\n            }\r\n       }, scene);\r\n\r\n        scene.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        scene.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        scene.input.on('drop', function(pointer, gameObject, dropZone) {\r\n            gameObject.input.enabled = false;\r\n\r\n            // setting card in the middle \r\n            gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n            gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n            gameObject.x = dropZone.x;\r\n            gameObject.y = dropZone.y + dropZone.y / 3;\r\n            \r\n            graveYardArray.push(gameObject);\r\n\r\n            // remove the card from the scene after 500ms\r\n            setTimeout(function() { \r\n                \r\n                gameObject.setActive(false).setVisible(false); \r\n            }, 500);\r\n\r\n            dropZone.renderNormalOutline(scene);\r\n\r\n            scene.cameras.main.shake(100, 0.02);\r\n        });\r\n\r\n        scene.input.on(\"dragend\", function(pointer, gameObject, dropped) {\r\n        \r\n            if (!dropped) {\r\n                handArray.push(gameObject);\r\n                gameObject.displayHeight = gameOptions.cardHeight / 2;\r\n                gameObject.displayWidth = gameOptions.cardWidth / 2;\r\n                scene.arrangeCardsInCenter(handArray);\r\n            }\r\n        }, scene);\r\n    }\r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/Button.js';\r\nimport HandCard from \"../helpers/classes/cards/HandCard\";\r\nimport { gameOptions, enemySprite } from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/Zone.js\";\r\nimport Player from \"../helpers/classes/Player.js\";\r\nimport Enemy from \"../helpers/classes/Enemy.js\";\r\nimport {handArray, deckArray, deckTrackerArray, graveYardArray, shuffle, deckSetUp} from \"../helpers/classes/Deck.js\";\r\nimport InteractHandler from \"../helpers/classes/InteractHandler.js\";\r\n\r\nlet enemyArray = [];\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemySprite.spriteWidth,\r\n            frameHeight: enemySprite.spriteHeight\r\n        });\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/reload.png\");\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let interactiveHandler = new InteractHandler(this);\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        let player = new Player(this, 0, 0, \"guy\", handArray);\r\n        player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        let heartext = this.add.text(0,0, player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        let actiontext = this.add.text(0,0, player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.start(CST.SCENES.DISCARD_PILE, graveYardArray);\r\n        }, this);\r\n         \r\n        // for (let i=0; i < gameOptions.startCards; i++) {\r\n        //     // creates cards from spritesheet and makes them draggable\r\n        //     let card = new HandCard(this, gameWidth/2, gameHeight/2, 'cards', i);\r\n        //     deckArray.push(card);\r\n        // }\r\n\r\n        // let card1 = new HandCard(this, gameWidth/2, gameHeight/2, 'sword', 0);\r\n        // deckArray.push(card1);\r\n\r\n        // Button to end turn\r\n        let endTurnButton = new Button(gameWidth, gameHeight/2, 'End Turn', this, this.endTurn.bind(this), '#202529');\r\n        endTurnButton.changeCursor();\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 500, 400, 300, 600);\r\n\r\n        shuffle(deckArray);\r\n        deckSetUp(this, deckArray, deckTrackerArray);\r\n\r\n        for (let i=0; i < enemySprite.numberOfSprites; i++) {\r\n            let enemy = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemyArray.push(enemy);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n    }\r\n\r\n    arrangeCardsInCenter(handArray) {\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            card.startPosition = {\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(50);\r\n        }\r\n\r\n    }\r\n\r\n    // simulate a drawing feature\r\n    endTurn() {\r\n        if (deckArray.length > 0) {\r\n            let lastCard = deckTrackerArray.pop();\r\n            lastCard.destroy();\r\n\r\n            let drawCard = deckArray.pop();\r\n            handArray.push(drawCard);\r\n            drawCard.cardInHand(this);\r\n            this.arrangeCardsInCenter(handArray);\r\n        }\r\n    }\r\n\r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n        console.log(numberOfEnemies);\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemyArray[Math.floor(Math.random() * enemyArray.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n        }\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport Card from \"../helpers/classes/cards/Card\";\r\nimport { BattleScene } from \"./BattleScene\";\r\n\r\nlet cards = [];\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/reload.png\");\r\n    }\r\n\r\n    create() {\r\n        // damage cards\r\n        let cannon = new Card(\"cannon\", 2, \"damage\", {damage: 3, target: \"all\"});\r\n        let grenade = new Card(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"});\r\n\r\n        // combo cards\r\n        let headshot = new Card(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"});\r\n        \r\n        // reload cards\r\n        let reload = new Card(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null});\r\n        let overload = new Card(\"overload\", 0, \"overload\", {amount: 4, sideEffects: -1});\r\n\r\n        // healing cards\r\n        let medkit = new Card(\"medkit\", 1, \"healing\", {target: \"health\", amount: 3});\r\n        let kevlar = new Card(\"kevlar\", 2, \"healing\", {target: \"armour\", amount: 6});\r\n\r\n        cards.push(cannon);\r\n        cards.push(grenade);\r\n        cards.push(headshot);\r\n        cards.push(reload);\r\n        cards.push(overload);\r\n        cards.push(medkit);\r\n        cards.push(kevlar);\r\n\r\n        this.scene.add(CST.SCENES.BATTLE, BattleScene, false);\r\n        this.scene.start(CST.SCENES.BATTLE, cards);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport { LoadScene } from \"./scenes/loadScene\";\r\nimport {BattleScene} from \"/src/scenes/BattleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 1000,\r\n    height: 800,\r\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\r\n    scene: [\r\n        LoadScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}