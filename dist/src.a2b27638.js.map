{"version":3,"sources":["src/CST.js","src/helpers/config.js","src/scenes/discardPileScene.js","src/helpers/classes/cards/handCard.js","src/helpers/font.js","src/helpers/classes/button.js","src/helpers/classes/zone.js","src/helpers/classes/player.js","src/helpers/classes/enemy.js","src/helpers/classes/cards/toolTip.js","src/helpers/classes/cards/damageCard.js","src/helpers/classes/cards/comboCard.js","src/helpers/classes/cards/reloadCard.js","src/helpers/classes/cards/healingCard.js","src/scenes/battleScene.js","src/scenes/loadScene.js","src/index.js"],"names":["CST","SCENES","LOAD","BATTLE","DISCARD_PILE","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","enemy","spriteWidth","spriteHeight","numberOfSprites","enemyList","enemyOnScene","graveYardArray","DiscardPileScene","key","data","load","spritesheet","frameWidth","frameHeight","image","bg","add","sprite","setOrigin","setScale","alpha","startX","startY","length","console","log","i","setVisible","discardCard","existing","x","y","displayWidth","displayHeight","input","once","scene","start","Phaser","Scene","HandCard","name","cost","cardType","effect","visible","setInteractive","setDraggable","GameObjects","Sprite","loadFont","url","newFont","FontFace","then","loaded","document","fonts","catch","error","Button","label","callback","bgColour","padding","setPadding","setStyle","backgroundColor","useHandCursor","on","newX","newY","Text","Zone","width","height","setRectangleDropZone","setDepth","normalZone","activeZone","zoneOutline","graphics","renderNormalOutline","clear","lineStyle","strokeRect","hitArea","Player","frame","health","actionPoints","handArray","deckArray","deckTrackerArray","spriteType","keepCards","keepCardsLimit","player","disableDragOnCards","cards","pointer","includes","splice","indexOf","clearTint","push","setTint","indexList","index","setActive","shuffle","deckSetUp","arrangeCardsInCenter","enableDragOnCards","draggable","game","config","cardBack","j","Math","floor","random","Enemy","getRandomHealth","heartText","text","color","fontSize","setEnemyCoordinates","enemySpawn","getHealth","min","max","Tooltip","wordWrap","DamageCard","tooltip","getLabel","cardInHand","card","target","setHealth","damage","setText","enabled","ComboCard","ReloadCard","HealingCard","BattleScene","endTurnButton","keepCardButton","gameWidth","gameHeight","hud_bg","tileSprite","card_bg","setPosition","heart","heartext","container","chamber","circle","actiontext","getActionPoints","actions","discardPile","event","loadCards","endTurn","bind","keepCard","dropZone","drawCard","enemySprite","spawnEnemyOnScene","gameObject","removeTooltip","tweens","targets","angle","duration","background","dragX","dragY","type","yOffSet","startPosition","depth","showTooltip","setLabelCoordinates","renderActiveOutline","getCost","setTimeout","activateCard","cameras","main","shake","dragend","dropped","cannon","grenade","headshot","reload","amount","sideEffects","overload","medkit","kevlar","amountOfCards","lastCard","pop","destroy","bottomOfScreen","screenCenterX","yDelta","cardX","selectCardInHand","moveCardsBackInDeck","action","minEnemies","maxEnemies","numberOfEnemies","spawnEnemyDistanceX","spawnHeartDistanceY","randomEnemy","LoadScene","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","Game"],"mappings":";;;;;;AAAO,AKAP,AMAA,ADAA,APAA,AUAA,ADAA,ALAA,ADAA,ALAO,AGAA,AYCP,AFDA,AZAA,AaAA,IfAaA,ACAAK,GDAG,EIAA6D,CJAG,KCAK,EGAA,CHAG,AGAFT,IAAI,EAAEU,GAAG,EAAE;ACAF,AMClC,ADAA,APD2C,AUC3C,ADAA,ALDgD,ADAR,AUExC,AFDA,AZAA,AaAA,EfAIlE,ACAAK,AGAA,IHAI,AGAA8D,EJAE,ACAA,CAAC,CDAC,GIAG,GAAG,IAAIC,QAAQ,CAACZ,IAAI,EAAE,aAAa,CAAC;ACDjB,AMElC,ADAA,APF2C,AUE3C,ADAA,ALFgD,ADAR,AUGxC,AFDA,AZDgD,AaChD,EdAIlD,AGAA6D,EJAIlE,IAAI,CIAD,CJAG,AIAFwB,EHAE,EAAE,AGAA,CHAC,CDAG,AIAF,CAAC4C,IAAI,CAAC,UAAUC,MAAM,EAAE;ACFR,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AUAxC,AFGA,AZFgD,AaCJ,EdCxC/D,EDAIL,AIAAqE,MJAM,CCAD,CDAG,AIAA,CHAD,AGAEC,GHAC,EGAI,CAACzC,CJAC,EIAE,CAACuC,MAAM,CAAC;ACHA,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQIxC,AZHgD,AaCJ,EdExC9D,AGAA,CAAC,CJAGL,AIAF,CAACsE,KAAK,CAAC,CHAC,EAAE,EDAI,CCAD,CDAG,GIACC,KAAK,EAAE;ACJI,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AUKxC,AFAA,AZJgD,AaCJ,EfGxC,ACAAjE,EGAI,OAAOiE,GHAC,EAAE,AGAE,GHAC;ADCrB,AKNkC,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQMxC,AZLgD,AaCJ,CfI3C,CCAGhE,AGAA,CAAC,CAAC,OHAO,EAAE,CAAC;ADAf,AKNiC,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AFOxC,AYAO,AFAP,AZNgD,AaCJ,EdKxCC,EeAOwH,MAAM,GfAF,AeAK,EfAH;AIPiB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALQxC,AaAA,AZPgD,AaCJ,CdM3C,CeAGoE,IAAI,EAAElJ,MAAM,CAAC4L,IAAI;AXRa,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALQvC,AaCD,AZRgD,AaCJ,ECOxCxJ,KAAK,EAAE,IAAI;AXTmB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALUjC,AaD2D,AZRlB,AaCJ,ECQxCC,EfAS9E,IeAH,EAAE,GAAG,SfAgB,GAAG;AIVA,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQS0B,AZRlB,AaCJ,EdSxCC,AeAAqO,KAAK,EAAE,EfAE,EAAE,GAAG;AIXgB,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,AQS0B,AZRlB,AaCJ,EdUxCpO,EeDSqO,MAAM,EfCL,AeDO,EfCL,gBeDuB;AXXL,AMEE,ADAA,APFO,AUEP,ADAA,ALFY,ADAR,ALaxC,AaJkE,AZRlB,AaCJ,CdW3C,GQbY/F,ADAQX,AQWoB2G,IAAI,CRXnB,CQWoB/L,CPX1B,KOWgC,CAACgM,KAAK,CAACC,GAAG;AXV9D,AMCoC,ADAA,APApC,AUAoC,ADAA,ALFY,ADAR,ALavC,AaJiE,AZRlB,AaCJ,ENFxB,ADAM,EFEL9J,AUS2C+J,IVTvC,MUSiD,EAAElM,MAAM,CAACgM,KAAK,CAACG;AXVzF,AMCoC,ADAA,APApC,AUAoC,ADAA,ALFY,ANezC,AaN2D,AZNlE,AaD4C,ENFxB,ADAM,AFED,AUS4E,CAAC,CXRjF7K,AFAApB,AFYRxC,ACZTM,KDYc,CIZS,EFAE,AFYR,MCZH;ASDkB,ADAA,AGAA,ADAA,ALFY,AOSkB,AZN/C,AaDyB,EVCjB,AFAE,AMFzB,ADAA,AFCqB,ALcrBL,AeJAmC,EdPS7B,GcOJ,EAAE,CACH0N,GfGO,EAAE,EOfD7L,ECAAA,AReK,CCXQ,EMJR,ECAA,ADAEN,CAAC,CCADA,CAAC,ADAEC,CAAC,CCADA,CAAC,ADAEd,AQYZ,EPZY4C,AOarBtD,IRb2B,CCAD,CDAGiF,CCAD,IDAM,EAAE,qBQapB;ALZY,ADAA,AGAA,ADAA,ALFY,ASgBhD,AFPkE,ACPtB,CCc3C,CXb0B,AFAE,AGAzB,ALcAtF,ACZyB,EOJO,ADAQ,ADCvBqF,AQER0I,MRFc,GQEL,CdaN,EKdA7L,ALcE,GAAG,EKdA,EAAEN,CAAC,EAAEC,CAAC,EAAE2C,KAAK,EAAEC,MAAM,EAAE;AKDR,ADAA,AGAA,ADAA,AIclC,AFPgE,ETJ9D,AFDA,AIFuB,ANgBvBxE,ACbyB,AaDP,ENHc,ADAQ,AFEA,aLezB,CIbH2B,CAAC,AJaI,CEdLW,AFcM,CIbHV,CAAC,EAAE8B,AFDF,EAAEnB,GECK,CFDD,CECGN,CFDDO,IECM,EAAEmB,EFDA,EAAElB,IECM,EAAEmB,AFDF,EAAE3B,KAAK,CECG,CFDDN,CECG,AFDF,EAAEC,CAAC,EAAEd,MAAM,EAAE;AQF/B,ADAA,AGAA,ADAA,AIgBpC,AFTkE,EPPvC,ANiBvBb,ACbA,AaFkB,EVCkC,AMDnC6I,ADAAV,APA8C,AUA9CY,ADAAD,AHFb,ADAA,AFCoC,AUexC/B,IAAI,GfCK,AeDF,ELdmB,AVef,CSfgB,AEAA,CCAC,AZef,AeDF7E,MAAM,CAACoM,IAAI,CAACtH,GPhBbhF,ADAAA,ANII,GcYe,CAAC,CPhBf,ADAA,ECAEN,ADAAA,CCAC,ADAA,ECAEC,ADAAA,CCAC,ADAA,ECAE8B,ADAA5C,KCAK,CDAC,EAAEuE,KAAK;AMO0B,EHLpC,ADAC,AGAC,ADAD,ALA3B,ANgBAnF,AcfA,EVAoD,AFDW,AMD3D,ADAA,AFCA,AJEU,MOHL2D,ADAA7C,IPiBG,EAAE,CQjBE,CDAC,ADCLiB,CCDM,CCAC,ADAA,CAAC,EDCH,AQCH,ERDKN,CAAC,EAAEC,CAAC,EAAEd,ADAfmB,KAAK,CCAgB,CDAdN,CCAgB0D,ADAf,EAAEzD,CAAC,ECAiB,ADAf2C,ECAiB,GDAZ,EAAEC,MAAM,GAAEC,oBAAoB,CAAC9C,CAAC,EAAEC,CAAC,CAAC;ALiBpE,AaZkE,CbYjE,CUjB6B,ADAC,AGAC,ADAD,EPEvB,AFDA,AKDA,ADAoC,ADCpC,AJCU,AaDA,ENDND,CAAC,EAAE,CDAF2D,AFCAvE,CGDI,KDAE,GAAG,AFCA,CAAC,CAAC,EAAE,CAAC,CEDAyG,AFCC,IJEd,CGDAvF,AFDAA,KECK,AFDA,EECEN,AFDAA,CECC,AFDA,EECEC,AFDAA,AKDkB,CHEjB,AFDA,AKDkB,EHEhB8B,AFDA5C,AKDkB,EAAE,EAAE,CHEjB,AGFkB,CLCjB;AFgBhC,AaZiE,EHJ9D,ADAA,AGAA,ADAA,EPEI,AFDA,AKDA,ADDoC,ADEpC,ASDU,ENANc,APGAvB,COHC,EAAE,APGA,CGDFwD,AFDAvB,AKDAqD,AFCAjB,CJEI7F,GCFA,GECG,AFDAyD,CGAC,CAAC,AJEF,CGDG,AGFA,AFCA,AJEFxD,CSHLwD,ARCQ,AGAA,CIDRA,AEAAA,CCAAA,ALAU,EGAN,CDAA,AEAA,AVGO,CSHLC,AEAF,AXGQtD,CQHNsD,AEAAA,CCAAA,AECR,CPDmB,CGAP,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,MFAQ,CDAA,AEAA,CDAEC,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAER,AEAF,CHAEA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CDAEN,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEC,AEAF,CFAG,ADADA,AEAAA,CFAC,AGADA,ADAC,CDAEd,AEAF,CHAEA,AEAAA,CCAAA,IFAM,CDAA,AEAA,CDAE,AEAF,CHAE,AEAA,CCAA;ACID,IHJC,ADAA,APE3D,AUF2D,ADAA,AHC3D,ADAA,ADDA,ADEAmB,AJEA,COHC,APGA,CGDGN,AUDAtB,CVCC,EAAE,ACDF,ASAE,CVCC,AFDHkC,AKDAI,AFCC9B,CSAGhC,ETAA,CHAA,AGAC6C,GHAEa,EYAA,CAACzD,CZAG,CGAE,EEDC,EAAE,AOCF,CAACC,GRFdkD,KAAK,EAAEN,CAAC,EAAEC,CAAC,EAAEd,MAAM,EAAEuE,EDEH,GCFQ;AOI0B,EZC9D,ESL+D,ADAA,APG3D,AUH2D,ADAA,AHE3D,ADCA,ADFA,ADEA,AQGK4D,ACHL,CAAC,CVCGrH,CAAC,EAAE,CFDFa,AMDAqB,ADCA2D,ADFAnC,ADEAX,KQGW,CXHL,AIFA,GJEGlC,AKAA,ADFA,CECC,AHCA,CGDC,AFDA,CCECR,CFAC,EHAE,EMDC4B,ADCC,CAAChD,GAAG,AFAA,CEAC6G,AFAA,CAAC,CGDA,CAAC/F,CAAC,ADCC,CAACM,CCDA,IDCK,CAAC+E,CCDDnD,GDCK,CAACoD,GCDC,CAACrF,CAAC,CAAC,ADCE,CAAC2C,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,MAAKe,MAAM,EAAE;EMG9D,AZDnB,AaDD,EVCI,AMJA,ADAA,APGA,AUHA,ADAA,AHEA,AFDA,ADEA,CDCC,CGF8EqC,ILC1EnF,AMDAuB,AFDAwB,ADEAX,CED+E,EAAE,KLCzE,AMDA,ADA8E,CCA7E,CHCC,CHACpC,CIFC,CDEC,ECFE,CAAC,GJEG,CQHlBF,ADAAA,AGAAA,ADAAA,CNGoB,CAAC,CAAC,CKHlB,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,IDAI,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA,EDAER,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEN,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEC,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAEd,ADAAA,AGAAA,ADAAA,MDAM,ADAA,AGAA,ADAA;EEKvC,ACFnB,EVEG,AMJA,ADAA,APEyB,AUFzB,ADAA,ALCA,ALEH,EOFmBkD,ADA6E4D,IHGxF7G,AMJAsH,ADAAA,AGAAA,ADAAA,ALCA7C,ICAgG,EAAE,CGD3F,ADAA,AGAA,ADAA,EPIE,AEHA,CFGC,AMJA,ADAA,AGAA,ADAA,CPIC,AIHe,CFAd,CFGC,AIHe,CEDd0C,ADAAA,AGAAA,ADAAA,ALCA,EFGE,CAAC,KIHoB,QEDhB,ADAA,AGAA,ADAA,CDACjG,ADAAA,AGAAA,ADAAA,KDAK,ADAA,AGAA,ADAA,EDAEN,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,GDAC,ADAA,AGAA,ADAA,MDAKE,ADAAA,AGAAA,ADAAA,YDAY,ADAA,AGAA,ADAA,EDAED,ADAAA,AGAAA,ADAAA,CDAC,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,MDAK0G,ADAAA,AGAAA,ADAAA,QDAQ,ADAA,AGAA,ADAA,EDAE,ADAA,AGAA,ADAA,CDAC,ADAA,AGAA,ADAA;ETG9E,AWEA,ETAI,AMJArG,ADAAA,AGAAA,ADAAA,AJA6G,ADC7G,ADEA,AJDH,AaDA,CPDiH,CCAlE0F,ADAmE,GGA1G,ADAA,AGAA,ADAA,CPIA7D,AMJCjD,ADAAA,AGAAA,ADAAA,ALCD4E,ADEAZ,CGH4C,APIrD,ESJa,ADAA,AGAA,ADAA,AHA0C,CEAzCnD,ADAAA,AGAAA,ADAAA,KLCI,CFGC,CAAC,ACDA,CKHE,ADAA,AGAA,ADAA,AHA0C,AFC3C,EAAE,ADEAO,CQCT,AZAT3B,EGAoBuD,ECDG,AJCnB,CIDoBhD,CJClB,EIDqB,CDCA,ACDCiE,CDCAnD,CAAC,EAAE,ICDK,EDCAkC,ACDE,ODCK,CAACjC,CAAC,AMJtB,ADAA,AGAA,ADAA,CPIuB;EFFlD,EEGG,AMJA,ADAA,AGAA,ADAA,AJAA,ADCA,ADEA,AQAU,ACHb,ENDiEuG,APK9DhI,IGAK4D,AMJAwE,ADAAA,AGAAA,ADAAA,AJAAd,ADCA/B,ADEAX,CSDT,GNH0E,EAAE,EJK3D,CAAC,AGJA,CGAC,ADAA,AGAA,ADAA,AJAAhE,ANID,CSJEkB,ADAAA,AGAAA,ADAAA,EVIC3B,GSJI,ADAA,AGAA,ADAA,ALCA,CIDC,ADAA,AGAA,ADAA,AVID,EMJG,ADCA,ADEA,CEHC,AFGA2B,ASDnB,CPFoB,ADCA,ECDE,CAAC,CAAC,AFGA,CAAC;IKHR,ADAA,APC1B,AUD0B,ADAA,AJEvBA,ADAA,ADCgC,AQAtB,AZEd,EGDoB+B,AUDhB,ENJyEO,CDGpE,CAAC1D,ADADV,AQCD,CAACI,ENJyE,ADGrE,CAACmB,CCHsE,AMIvE,CAACf,KVCqB,AUDhB,CPDG,AOCF,CVCiBiD,CEFd,GAAG,EAAE,AOElB,CCDkB,EAAE,qBPDF,MOC6B,CAAC;EJF1D,ADAA,AGAA,ADAA,ANIA,AJAC,EGD4C,AFH5C,AKGG,ADDA,CFC0C,CAAC,AILwC,AKM/EvD,ACDJ,GDCO,CNDFwH,ADDAlC,AQCD,CZDR,AWEa9G,ACDJ0B,IAAI,CAACI,GDCE,CPFG,AOEF7B,CCDE,CAAC,CRDE,GOEC,CAACE,ENDI,CAACiD,CLDlBA,AIAmB,AQCD,EAAE,EPAG,CLDlB,AKCmB,ELDjB,uBYCyC,CAAC;EJH3D,ADAA,AGAA,ADAA,ANIA,EDAG,AINoF,ADMpF,ADDA,AOEA,AZDH,CONwF,AKOpF,CXFD,AMLsF,AMMtF,IVAKU,AFDD,AKCCmF,ADDAlC,AQCD,CZDClD,AYCAnC,IAAI,CAACI,EZDE,CIAE,CCCC,CLDA,AYCA,CZDC,AKCC,ADDA,AQCD,EVAG,AEDA,CFCE,CFDD,CAAC+B,KYCK,EZDE,AYCA,6BAA6B,CAAC;EDE9D,EHNC,ADAA,AGAA,ADAA,AHDGT,AFKA,ADAH,AJAA,EGA0BgC,AFAvB,AYCA,GNNK,CNKD,AMLEpD,AFKDgF,AQCD,CZDClD,ADET,AaDSpC,ENNI,CAACmB,CMMD,CAACf,GVD0B,EAAE,AUCvB,CNNG,AMMF,ERDG,CJAA,EAAE,AIAC,CAAC,ELEjB,AaDkB,EAAE,qBNNF,MMM6B,CAAC;EDCzD,ETF6C,AMJ7C,ADAA,AGAA,ADAA,AHAG,ADMA,ADDAsB,ADDH,CDA8C,CAAC,AFC5CA,ADEA,AaDA,GRDK,CELAS,AFKC7B,ALEF,AaDA,CJJR,ADAA,APGS,AUHT,ADAA,ANIA,AJCSN,AaDAA,CZDCwB,CIAG,CAACL,CLED,AaDA,CbCClB,AaDAG,CZDC,AMLC,CNKAiC,EMLG,CMMA,CRDG,AQCF,GNNI,EPOC,CAAC,ECFE,AYCA,CJJjBX,ADAAA,APGkB,AUHlBA,ADAAA,CGImB,GZDG,ADEA,CSLjB,ADAA,APGkB,AUHlB,ADAA,CVKmB,CSLjB,ADAA,AGAA,ADAA,INII,WCDM,MQC6B,CAAC,WbCW,EAAE;IGFnE,AIJA,ADKA,ADDyB,AOC5B,EHHG,ADAA,APGA,AUHA,ADAA,ANIA,ASAA,EbCIxB,EGHCyD,AFCD,AMLCQ,AHMD,ASAA,CZDC3D,AGCA8D,ASAAtE,CVFE,CAAC,EUEC,CAACI,ENNG,APOC,COPA,CNKA,AMLC,APOCzB,CCFD,AMLC,AMMD,CTAC,ASAA,CTAC8F,CHDC,EEDG,AFCD,CAAC,CEDE,AFCD,AGCA,EAAE,ESAE,EAAE,KbCD,CAAC3F,SAAS,caDoB,CAAC,gBJJzC4C,CDAAA,AEAAA,CCAAA,GFAK,CDAA,AEAA,CCAA;ELI1B,ADDA,EIFA,ADAA,AGAA,ADAA,AHHqB,AKKpB,ETD0B,ACGvB,ASAA,EbCIvB,EIDA,ASAA,CTACmE,AQAT,ACAStE,EVHwBoD,EUGpB,CAAChD,GbCK,EGJsB,AHIpBzB,AaDF,CTAC,ASAA,CVHuB,ACGtB+F,EQAhB3E,IAAI,CCAmB,CDAjB,CRAmB,ASAA,CTAC,CAAC,EAAE,IAAI,AJCN,CIDOqE,AJCNrF,UIDgB,CAAC,OSAO,CAAC;EJJzD,ADAA,ADFD,AFIC,EFD0C,AUI3C,EVJ4C,AFGxC,AGCA,AQAA,AZCA,CAAC,CAAC,EIDE,CAACuF,WAAW,CAACK,UAAU,CAAC,IAAI,CAACvD,CAAC,GAAG,IAAI,CAACI,KAAK,CAACoD,OAAO,CAACZ,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC3C,CAAC,GAAG,IAAI,CAACG,KAAK,CAACoD,OAAO,CAACX,MAAM,GAAG,CAAC,EAAE,IAAI,CAACzC,KAAK,CAACoD,OAAO,CAACZ,KAAK,EAAE,IAAI,CAACxC,KAAK,CAACoD,OAAO,CAACX,MAAM,CAAC;EGPlK,ADOD,AOAC,EVHGvC,AMFH,ADAA,AGED,ADAA,ALAC,ADID,EHDI,AWCA,AZCA,GGLK,CAACpB,AFGF,AWCAmF,AZCA,CCFCnE,ADEAtB,EGLI,CAACmB,CSID,AZCA,CAACf,EYDEL,GZCG,CGLG,ASIF,AZCA,CCFC,GAAGpB,QDEQ,EAAE,SCFC,CAACG,OEHR,EFGiB,MDEc,CAAC;EWL5D,ALIA,AFAC,EDJ4B,AMF5B,ADAA,AEGD,AHLC,AFIA,ALMD,AaHC,EZCG,AWCA,IXDI,CQJR,ADAA,APISyC,AIFT,aJEsB,GAAG5C,MQJZ+C,ADAAA,IHEI6D,CIFC,ADAA,ECAE,ADAA,GHEG,EAAE,CJEW,CAACxG,UAAU;EEH/C,AOAA,AJGA,ANEC,ECDD,AULA,AJJC,AHQA,ASDA,EJFG,ADAA,AHEA,AOGA,IHLIkJ,ADAAA,AIKA,CLRR,AKQSU,ACDT,GJJY,ADAA,GCAG,ADAA,ICAI,ADAA,GIKG,KCDb,KNPK;EJGb,AFIA,EULD,ADCA,AJGA,AFAC,AJEA,ESJG7H,ADAA,ADHA,AFKA,AOGA,ACDA,ILJI,ADHA,AFKA,AOGA,ACDA,CFLR,AJFSqB,AFKAqD,ADET,AQCSoD,ACDAlH,EJJE,CAACX,ADAA,CAACmB,CKIC,CJJC,AIIA5B,CJJC,AFHA,EMOE,CLJC,ADHA,AMOAhC,CJJC,ADAA4J,CCAC,EFHE,AKQA,GJLG,CHEC,AQEL,CAAC3J,CRFM,CGFC,CGDjBmD,GEKgB,CAACjD,CFLZ,EHCoB,AGDlB,EHCoB,AJIlB,CSAc,EAAEiK,wBAAW,EAAE,KAAK,CAAC;IVLxD,AMED,AREC,ASJD,AHDA,ADIA,AMIA,AZFC,EWJG,ANE0B,ADG1B,ASAA,ELJI,EGDAT,APKA,ASAA,CHLR,AJGA,AFES3D,AJCT,AaDS5C,ELJI,CGDD,EEKE,CLJGV,AGDF,AEKAW,CLJG,GAAC,AGDA,CHCC,AJIA,ASAA,CTAC8C,ASAAnG,CLJC0C,CAAC,EFEhBU,CEFmBpC,AJIA,CJCjB,CIDmB,CSAJ,CPFZ,AOEaf,CHLZmD,CJGC,IIHI,AGKa,CAACjD,CHLZ,CFCW,CAACkB,GKIM,CAAC,GRDjB,IAAI,CGHkB,AHGjBsF,CGHkBpE,MAAM,EAAEG,AHGjB,CGHkB,EAAE,EAAE;ECAzD,AFHA,AKQA,ETPA,AFIA,AYGD,EFLI,ADAA,AJGAU,AFEA,AJCA,EKHgC,EGFxBpC,AGDJ2I,ADAAA,ANKA,AJCA5H,CGNR,AFIA,AKDS,AFEAiE,CEFCiB,ANGA,EWNE,ADAA,CCACrD,AXMA,EUNE,CJGC,CAAC6C,ANGA,CAACzE,CWNC,ADAA,CCAC4H,APKA,CIJH,AJIIxD,AJCA,CQLH/E,ARKIY,CMHC,GKHG,ALGAmB,ELChB,ADEkB,CAAC,CWNC,APKA,AJCA,CMHC,AFEA,CDLjBkC,AGGkB2B,AFEA,CJCC,CQLH,AJII,CIJHvE,ARKI,CGNjB,AKCc,ARKI,CQLH,CLDb6C,AKCcpC,AGDI,ALGA,AFEA,AJCA,CMHC+F,AFEAnD,COLC,ERAhB,AKCc,CAAC,CLDb,IGGsB,CFEC,CEFC,AFEA,AJCA,CAAC,CAAC7D,CMHC,CAAC,EEFF,EAAE,GRKO,CAAC,CAAC,EAAC,CAAC,CAAC,CQLHkF,OAAO,EAAE;EKIvE,EJLA,ACCD,AHJC,ADOD,AMCC,ETJG,AFIA,AIFgC,ADGhC,AJCArF,EWNIS,AXMF,CAACL,CGNC,ACKA,CDLC6C,ACKAgB,CIJO,CPGL,EUJI,CHCK,AGDJvD,CHCKoH,APGN,ADEA,CGNC,AFIApG,ADEA,CWNG,AXMF,CWNG,AXMF,CGNC,CFIC,AGCA,CAAC4C,COLG,CAAC,CHCK,CAAC,IAAI,CAAC6C,CJIL,CAAC,IAAI,CAACpG,CAAC,CIJO,EAAE,AJIN,GIJS6G,CJIL,CAACzG,EIJQ,CAACU,EJIJ,CAAC0C,GIJS,CAACwD,GJIH,CAACpE,EIJQ,CAAC,EJIJ,GAAG,CAAC,EAAE,IAAI,CAAC3C,CAAC,GAAG,IAAI,CAACG,KAAK,CAACoD,OAAO,CAACX,MAAM,GAAG,CAAC,EAAE,IAAI,CAACzC,KAAK,CAACoD,OAAO,CAACZ,KAAK,EAAE,IAAI,CAACxC,KAAK,CAACoD,OAAO,CAACX,MAAM,CAAC;EMLlK,AJGA,AOCA,EJLA,ARMD,AMTC,AHUD,AQFC,EDHG,AXMA5D,EGNIe,AECJ,ALKE,CGNG,AHMFV,EGNIkD,AMAX,AFHA,AKQA,CJJgB,ERKJ,CGNG,CKCK,CAACsD,ARKN,GAAG,MQLY,CAACmB,GIIrB,CHLC,GDC2B,CAAC,CDJvB,GCI2B,CAACb,SAAS,EAAE,CAAC,QHAlB;AQErC,EZCA,AGCA,AStB0B5F,EFkB3B,ADFC,AJGA,EGDG,AFHA,AKQA,AZEA,EGPIP,AUlByB,CVkBxB,AUlByBQ,CNe1B,AFG8B,AOK9B,AZEAlB,CGPGkD,AIHF1B,AKQAnC,CJHO,CCFL,CJAEyF,AQlB0B,CDuB1B,CAACrF,AZEA,CQLO,CDLL,CFGE,ALOD,CAAC,CQLOwG,ADLN,AKQA,CJHO,AIGN,GJHO,CAAC,ADLJ,CKQC,CJHKA,CAAC,AIGJ,GJHOtH,aAAK,CAACK,IIGQ,CAAC,OJHG,CAACkB,MAAM,EAAE+F,CAAC,EAAE,EAAE,WCFe;AIlB1C,EFkBtC,APIA,EKHD,AREC,ASLA,AHAD,ADGC,EHAG,ASKA,AZEA,CGPC,GEAGnB,AOKA,AZEA7E,CURR,AJGA,AMGSZ,GJHWV,CHFP,AOKA,CPLCqE,AOKAvD,AZEA,EKPE,CAAC,ALOA,CAAC,CYFC,CAAC,KJHK,CAACT,GEHf,CLCmB,EAAE,AOKA,ENHhB8H,AMGkB,GNHf,CEAmB,CAACb,AFAlBc,CEAmB,CAAC,CAAClG,AFAlB,ADFiBkE,ECEf,GEAqB,CAAC4C,CHFA,EAAE,IGEK,GAAG,CIGC,CAAC,GJHG;AJC9D,EKHA,AFHA,AHlB6B1G,EHuB7B,AUHA,EREG,AODA,AJGA,AMGA,AZIA,EI/BgC,CAACU,CDsB7B,ASKA,AZIA1C,CGTC2D,AFGT,AWESvD,CJHO,AHFJ,CKDD,AJGA6G,EMGE,CAACzG,CNHC,CAAC0G,EFxBgC,CDsB7B,ACtB8B/C,AQ2B9B,CTLC,ASKA,CNHC,CAAC8C,ANOA,CI/B+B,AJ+B9BhG,CGTC,CAACyC,CGEC,CAACyD,CLCjB,CDMmB,GGTG,CAAC3F,AGEA,AMGA,AZIA,CGTC,AHSA,CMPC,AMGA,CTLC,AHSC,GMPEsG,CHFC,CAACpE,CGEC,GAAGmE,GHFG,AGEA,CHFCpG,CAAC,CAAC,AGEA,CAAC,CAAC,CAAC,GAAGoG,GAAG,CMGC,CAAC,GFNG;ANrBZ,EKqBpD,ENED,AQHC,ADED,AHJC,ADOD,ELCI,AWEA,EZII3G,EQPI,AIGJ,CJHK,AGHb,ACMSd,CJHK,AHFF,CJGD,EWEE,AZIE,CKTCuF,AOKFnF,AZIEW,CCND,CAACiB,CDMG,CAAC,CYJD,CXFC,AIHE,AOKF,CPLGqD,IOKE,EAAE,EDNhB,CNCqB,CAACM,QAAQ,CAAC,IAAI,CAAC,EAAE,SLSS,CAAC,aYJW,CAAC;AHPtE,ENEA,AMrBkC7D,ACoBlC,AJGA,ELED,AMTC,EIKG,ACMA,AZIA,CAAC,CQPG,EGHA,ACMA,CLTR,AKSS9B,EZIE,CWVC,ANCQ,CMDPkC,ACMA,CAAC9B,GH3B6B,EEqBxB,ACMA,CDNC8H,ACMA,MDNM,CCMC,EAAE,CDNC,QAAQ,AJHlB9G,CAAC,CIGmB,CJHjBC,CAAC,EAAE,aKS+B,CAAC;AH3Bf,ERyB1C,ASLA,EPCA,AGEA,EEEG,ADNA,AKSA,CJHC,CGHG,AXUA,EObA,AKSA,CLTCD,AKSApB,CLTC,CCMC,AROE,CKTGuF,CMDD,AJHFnE,AKSA,CLTC,AKSAhB,CJHC,AROEY,CAAC,EKTI,CGEH,AHFIqE,AOKJ,AZIA,CQPCnD,AIGA,AZIA,EAAElB,CAAC,GQPG,AROApB,CQPCsI,CHFK,CAACtC,COKH,EAAE,CJHC,EHFM,CAACL,CGEH,GROG,CAAC1E,CQPC,AHFI,CAACwE,CGEH,GROG,EAAErE,CAAC,EKTM,ALSJ,CKTK6E,CLSH,MKTU,CAAC,EOKF,CAAC,CPLK,CAAC,EAAE,CMDD,ANCE,CAAC;AKHzE,EApBmC/D,EPqBnC,AFIA,AKFA,EKAG,AJHA,AKSA,CDNC,CHGG,EDNA,AKSA,AZIIlC,CGVZ,AIHSyB,ADKT,AMISrB,CLTC,CCMG,AGHF,CNCK,CEJHqB,AKSA,CLTC,AKSAjB,CJHGY,AGHF,CNCK,CGEF,AE1B0B,ALwBvB8E,EMDF,ACMA,CJHA,AGHC5D,ACMA,CJHA,CROM,CQPJlB,AROKA,CAAC,CQPL,AROM,CWVH,ANCI,ALSAC,CWVHiH,CHGD5I,AHFM,GFDnBsE,EQAoB,ACMA,ETNhB,ASMkB,CZIK,CGVrBC,AQAkB,AXUI,CMRrBnC,GHFG,AKGQ,AROc,CQPb/B,AROc,CGVrB,AGEA,EKFoB,ALElB,EKFoB,OHGH,CAACkB,MAAM,EAAEG,EAAC,EAAE,EAAE,AIGW,CAAC;AF7B1B,ITyB3C,AMJD,EJGI,AGEA,AMIA,EDNI,ERAA,AKGI1B,AFDJ,AMIA,AZII,CGVH,AFGT,AKDS+B,AMIArB,CNJC,ADDE,CAAC,CLSGkB,CGVH0C,AQAE,ALEFlC,AMIA,CAACzB,GTNG,AECE,CCCD,CAACwG,EHFE,AKGJ,CLHK,AKGJ9G,CFDK,ANQI,CMRH+G,CMIC,CTNC,ASMA,AZII,CGVH,GFGf,AKDkB,ANQI,CGVH7C,AGEAI,ANQI3D,EYJF,CJHH,AROQ,CGVH,AKGJU,AIGI,AZIIG,EQPP,AFDK,CECJ,CLHM,AKGLgH,CLHM,AGEA,EHFE,CGEC,ANQI,CAACvI,IQPL,CAACN,MGHa,GXUK,CAAC0B,CAAC,CAAC,CQPhB,AROiB,CQPhBrB,WIGwB,CJHZ,CAACqB,AIGa,EJHZ,CAAC,CAACwG,SAAS,EAAE,GAAGS,IAAI,CAAC/F,MAAM,CAACkG,MAAM,CAAC;EDNlG,INOG,AUHA,ALEA,EHFI,ASMAlI,EJHIZ,AFDJ,ANQI4B,CMRHE,CHFG,AGEF,CHFGZ,AFGF,CIFK,CCCHkB,ELCE,CAACQ,AIFIqD,AOKF,ENJA,AMIEjG,CNJDmH,ANQI,CGVD,AHUErF,CGVDwC,AKGN,AROQ,CQPPjE,APAI,AIFI,CCCH,ADDI0F,CCCHqB,ANQI/F,CGVD,EAAEkD,GGEC,ANQI,CGVD,AGEFG,AMIN,CTNS,AECE,AOKVzE,CPLWsB,ALSCG,CQPR,AROS,CQPRA,CFDK,CECJ,AROU,CQPT,CAACkG,AFDK,ADDI,CLSG,EMRJ,ADDI3B,COKT,KJHM,AHFS,CGER8C,AHFS/C,OGEF,CAAChG,MHFe,EAAE,KGEZ,CAACK,YAAY,CAACqB,EAAC,CAAC,CAACwG,SAAS,EAAE,CAAC;EDPrF,ENQD,AUHA,ALEA,EHFI,EKGI,AIGArH,EZIIe,MKTQqE,GOKD,EAAEjG,AZIE,CKTG,ALSF+B,CKTGgE,ALSF,GAAGzE,MKTQ,ALSF,CKTGmF,COKX,CAACvG,EPLc,CAAC,IAAI,CAAC;AEN9C,ENQA,AUHA,AJ9BwBoC,ADgCxB,EHDD,EKGI,AIGA,CAAC,CLrC0B,AKqCzB,CLrC0BU,CPyCpBpB,MKTQ,IEhCuB,CAAC4C,APyCrB,CAACtD,GOzCwB,MPyCf,CAAC,CAAC,EAAE,CAAC,CAAC;AOzCS,EJ+B/C,AQDA,EHKD,APFC,AKDA,AMMD,MZIYU,MKTQ,IAAI,CAAC8E,ALSF,CAAC1E,MKTQ,CAAC,KLSG,GKTK,ALSF3C,CKTG,kBLSQ,CAACG,SAAS;AWZ3D,ERCA,AKIA,AG/BoCgD,ACkCpC,EXLA,AKDA,MNWWZ,CCRZ,AKDA,GDAgB,KM9B6B,EXuCtB,CAACK,QCRd,GKDG,ENSwB,GAAG5C,mBAAW,CAACI,UAAU;AGZ7D,AQ3B4C,ERDb6C,EKgC/B,AIGA,EXFG,AKDA,EHhCkC,AHyC9B,CGzC+BU,CGgC/B,CAACH,CDAG,CJCD,IAAI,CAACF,AKDA,EHhCkC,CAAC6B,AGgChC,CAAC,GHhCmC,CFiC/B,AKDA,CAAC3B,OAAO;AHhCuB,IKgCtD,APED,AWCC,ENFG,ANSA,IMTI,ADAA,CGCR,AFDS+E,ADAA,AOIT,CPJU,QCAQ,CAAC/E,OAAO,CMIjB,EJHE,AFDkB,CAAC,IAAI,CAAC+E,SAAS,CAAC/E,OAAO;ELCnD,EKAD,EECI,AIEK,AZOL,EKVA,ELUI,CAACX,EQTE,GRSG,CAACC,IAAI,CAAC,aAAa,EAAE,YAAW,gBQTiB;EFD9D,EEED,APFC,EIAI,AOID,EZOI,EYPAoH,EZOI,CAACnH,KAAK,CYPD,AZOEC,GYPC,EZOI,CAACrD,CYPD,CAACmI,IAAI,CAACC,CZOF,CAACnI,IYPO,CAACyF,CZOF,CAACvF,GYPM,GZOA,CAAC;EQT1C,EPFA,AKAA,EMKG,AZOA,CAAC,CKZA,CLYE,CYPCqK,CXHR,EDUW,CAAC,MYPM,GAAG,IAAI,CXHjB9G,AWGkByE,IXHd,AWGkB,CAACC,CXHjB,KWGuB,CAACzC,MAAM;EJH3C,EFFA,ANaD,ECVI,AIHC,AOOD,IXJI,AWIA8E,CXJC/G,AKDT,ILCa,CWIC,EXJEA,CWIC,GXJG,CWIC,CAAC1B,GAAG,CAAC0I,QNLV,EMKoB,CAAC,CAAC,EAAE,CAAC,EAAEH,SAAS,EAAEC,UAAU,EAAE,KAAK,CAAC;AJLvE,EAnCmChH,AR8CnC,ECTD,EKDI,AMKA,EPRC,EOQGmH,GNLG,IAAI,AMKA,CNLC7D,CEpC4B,CIyC1B,IAAI,CAAC9E,GNLG,AMKA,CAACF,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC;AJzCT,EPqC3C,ADSA,EMTD,EDJK,AOSD,IAAIC,EAAE,GAAG,IAAI,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;AZI/C,ECTA,AKAA,ANpCiCqB,EKkClC,EOQImH,EZ1CoC,CAAClH,GY0C/B,CAACpB,CZ1CmC,OY0C3B,CAAC,CAAC,CAAC;AXNrB,ADpC6C,ECFZmB,AIoCjC,ECEA,EMQGqH,EX9CoC,CAAC3G,IW8C9B,CAAC4G,MX9CwC,CAAC3G,IW8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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        BATTLE: \"BATTLE\",\r\n        DISCARD_PILE: \"DISCARD_PILE\"\r\n    }\r\n}","export const gameOptions = {\r\n    deck: 6,\r\n    startCards: 5,\r\n    cardWidth: 130,\r\n    cardHeight: 205,\r\n    cardDistance: 100,\r\n    cardAngle: 3,\r\n    cardYOffset: 10\r\n}\r\n\r\nexport const cardBackDimensions = {\r\n    backWidth: 130,\r\n    backHeight: 205\r\n}\r\n\r\nexport const enemy = {\r\n    spriteWidth: 73.3,\r\n    spriteHeight: 103,\r\n    numberOfSprites: 3,\r\n    enemyList: [],\r\n    enemyOnScene: []\r\n}\r\n\r\n","import { CST } from \"../CST\";\r\nimport { gameOptions } from \"../helpers/config\";\r\n\r\nlet graveYardArray;\r\n\r\nexport class DiscardPileScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.DISCARD_PILE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        graveYardArray = data;\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\r\n            frameWidth: gameOptions.cardWidth,\r\n            frameHeight: gameOptions.cardHeight\r\n        });\r\n        this.load.image(\"background\", \"./assets/background.png\")\r\n    }\r\n\r\n    create() {\r\n        let bg = this.add.sprite(-110, 0, \"background\").setOrigin(0,0);\r\n        bg.setScale(1);\r\n        bg.alpha = 0.3;\r\n\r\n        let startX = 0;\r\n        let startY = 0;\r\n\r\n        \r\n        if (graveYardArray.length == 0 ) {\r\n            console.log(\"You have no discarded or used cards.\")\r\n        } else {\r\n            for (let i=0; i < graveYardArray.length; i++) {\r\n                graveYardArray[i].setVisible(true);\r\n                let discardCard = this.add.existing(graveYardArray[i]);\r\n                discardCard.x = startX + (i * 150);\r\n                discardCard.y = startY;\r\n                discardCard.setOrigin(0, 0);\r\n                discardCard.displayWidth = gameOptions.cardWidth;\r\n                discardCard.displayHeight = gameOptions.cardHeight;\r\n            }\r\n        }\r\n\r\n        this.input.once(\"pointerdown\", function() {\r\n            this.scene.start(CST.SCENES.BATTLE);\r\n        }, this);\r\n    }\r\n}","import { gameOptions } from \"../../config\";\r\n\r\n// Cards that appear in the player's hand\r\nexport default class HandCard extends Phaser.GameObjects.Sprite {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(scene, x, y, sprite);\r\n        this.name = name;\r\n        this.cost = cost;\r\n        this.effect = effect;\r\n        this.cardType = cardType;\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        this.visible = !this.visible;\r\n        this.setInteractive();\r\n        scene.input.setDraggable(this);\r\n        this.setOrigin(0.5, 1);\r\n\r\n        // Minimises the cards initial display size\r\n        this.displayWidth = gameOptions.cardWidth;\r\n        this.displayHeight = gameOptions.cardHeight;\r\n    }\r\n    \r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCost() {\r\n        return this.cost;\r\n    }\r\n\r\n    getEffect() {\r\n        return this.effect;\r\n    }\r\n\r\n    getType() {\r\n        return this.cardType;\r\n    }\r\n\r\n    setCost(cost) {\r\n        this.cost = cost;\r\n    }\r\n}","export function loadFont(name, url) {\r\n    var newFont = new FontFace(name, 'url(${url})');\r\n    newFont.load().then(function (loaded) {\r\n        document.fonts.add(loaded);\r\n    }).catch(function (error) {\r\n        return error;\r\n    });\r\n}","import { loadFont } from \"../font\"\r\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\r\n\r\nexport default class Button extends Phaser.GameObjects.Text {\r\n\r\n    constructor(x, y, label, scene, callback, bgColour) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 8,\r\n            y: 15\r\n        }\r\n        this.setOrigin(1, 0.5);\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: bgColour});\r\n        this.setInteractive( { useHandCursor: true});\r\n        this.on('pointerdown', () => callback());\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    changePadding(newX, newY) {\r\n        this.padding = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n    }\r\n\r\n    changeOrigin(newX, newY) {\r\n        if (0 <= newX <= 1 && 0 <= newY <= 1) {\r\n            this.setOrigin(newX, newY);\r\n        }\r\n    }\r\n}\r\n","import { gameOptions } from \"../config\";\r\n\r\nexport default class Zone extends Phaser.GameObjects.Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        super(scene, x, y, width, height).setRectangleDropZone(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.setDepth(0);\r\n        scene.add.existing(this);\r\n        this.normalZone = 0xffff00; // yellow\r\n        this.activeZone = 0x00ffff; // lightblue / turquoise \r\n\r\n        this.zoneOutline = scene.add.graphics()\r\n        this.renderNormalOutline(scene);\r\n        \r\n    }\r\n\r\n    renderNormalOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.normalZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n\r\n    renderActiveOutline() {\r\n        this.zoneOutline.clear();\r\n        this.zoneOutline.lineStyle(2, this.activeZone);\r\n        this.zoneOutline.strokeRect(this.x - this.input.hitArea.width / 2, this.y - this.input.hitArea.height / 2, this.input.hitArea.width, this.input.hitArea.height);\r\n    }\r\n}","import {cardBackDimensions} from \"../config.js\";\r\n\r\nexport default class Player extends Phaser.GameObjects.Sprite {\r\n\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.health = 50;\r\n        this.actionPoints = 6;\r\n        this.handArray = [];\r\n        this.deckArray = [];\r\n        this.deckTrackerArray = [];\r\n        this.graveYardArray = [];\r\n        this.spriteType = \"player\";\r\n        this.keepCards = [];\r\n        this.keepCardsLimit = 2;\r\n        scene.add.existing(this);\r\n    }\r\n\r\n    selectCardInHand(player) {\r\n        // disable drag first on all cards\r\n        this.disableDragOnCards();\r\n        \r\n        for (let cards of this.handArray) {\r\n            cards.on(\"pointerdown\", function(pointer) {\r\n                // this is referring to the clicked object rather than player now\r\n                if (player.keepCards.includes(this)) {\r\n                        // removes the card from list \r\n                    player.keepCards.splice(player.keepCards.indexOf(this), 1);\r\n                    this.clearTint();\r\n                } else {\r\n                    if (player.keepCards.length < player.keepCardsLimit) {\r\n                        player.keepCards.push(this);\r\n                        // add a visual effect when clicked\r\n                        this.setTint(0x999999);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    moveCardsBackInDeck(scene) {\r\n        // get indexes of cards not in this.keepCards List\r\n        let indexList = [];\r\n        for (let cards of this.handArray) {\r\n            if (!this.keepCards.includes(cards)) {\r\n                let index = this.handArray.indexOf(cards);\r\n                indexList.push(index);\r\n            }\r\n        }\r\n\r\n        // remove the indexes in reverse order not to mess up the loop\r\n        for (let index=indexList.length-1; index >= 0; index--) {\r\n            this.deckArray.push(this.handArray[indexList[index]]);\r\n            this.handArray[indexList[index]].setActive(false).setVisible(false);\r\n            this.handArray.splice(indexList[index], 1);\r\n        }\r\n\r\n        // remove tint of cards remaining in hand\r\n        for (let cards of this.handArray) {\r\n            cards.clearTint();\r\n        }\r\n\r\n        // set up the deck sprites and deckArray and organise the cards on screen\r\n        this.shuffle();\r\n        this.deckSetUp(scene);\r\n        scene.arrangeCardsInCenter(this.handArray);\r\n        this.enableDragOnCards();\r\n\r\n    }\r\n\r\n    disableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = false;\r\n        }\r\n    }\r\n\r\n    enableDragOnCards() {\r\n        for (let i=0; i < this.handArray.length; i++) {\r\n            this.handArray[i].input.draggable = true;\r\n        }\r\n    }\r\n    \r\n    deckSetUp(scene) {\r\n        let x = scene.game.config.width / 25;\r\n        let y = scene.game.config.height / 1.24;\r\n        for (let i=0; i < this.deckArray.length; i++) {\r\n            let cardBack = scene.add.sprite(x,\r\n            y, 'cardBack');\r\n            cardBack.setOrigin(0.5, 1);\r\n            cardBack.displayWidth = cardBackDimensions.backWidth / 2;\r\n            cardBack.displayHeight = cardBackDimensions.backHeight / 2;\r\n            \r\n            this.deckTrackerArray.push(cardBack);\r\n            x += 4;\r\n        }\r\n    }\r\n    \r\n    // implementing Durstenfeld shffle, an optimised version of Fisher-Yates\r\n    shuffle() {\r\n        for (let i = this.deckArray.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i+1));\r\n            [this.deckArray[i], this.deckArray[j]] = [this.deckArray[j], this.deckArray[i]]\r\n        }\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n\r\n    getActionPoints() {\r\n        return this.actionPoints;\r\n    }\r\n\r\n    setActionPoints(actionPoints) {\r\n        this.actionPoints = actionPoints;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n}","export default class Enemy extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, sprite, frame) {\r\n        super(scene, x, y, sprite, frame);\r\n        this.setScale(2);\r\n        this.health = this.getRandomHealth(50, 70);\r\n        this.spriteType = \"enemy\";\r\n        this.setInteractive();\r\n\r\n        this.heartText = scene.add.text(scene.game.config.width - 20, 0, this.health, {color: \"red\", fontSize: \"45px\"});\r\n        this.heartText.setOrigin(1, 0);\r\n        \r\n        scene.add.existing(this);\r\n\r\n        this.setEnemyCoordinates(scene);\r\n        this.enemySpawn();\r\n\r\n        // this.heart = scene.add.image(0, 0, \"heart\");\r\n    }\r\n  \r\n    // generates a random number between min and max parameters\r\n    // min and max included\r\n    action(scene) {\r\n        scene.player.health = scene.player.getHealth() - 5;\r\n    }\r\n\r\n    getRandomHealth(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    setEnemyCoordinates(scene) {\r\n        this.y = scene.game.config.height * 0.6;\r\n        this.x = scene.game.config.width * 0.6;\r\n    }\r\n\r\n    enemySpawn() {\r\n        this.visible = !this.visible;\r\n        this.heartText.visible = !this.heartText.visible;\r\n    }\r\n\r\n    getSpriteType() {\r\n        return this.spriteType;\r\n    }\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    }\r\n\r\n    setHealth(health) {\r\n        this.health = health;\r\n    }\r\n}","export class Tooltip extends Phaser.GameObjects.Text {\r\n    constructor(scene, x, y, label) {\r\n        super(scene, x, y, label);\r\n        this.padding = {\r\n            x: 20,\r\n            y: 20\r\n        }\r\n        this.setPadding(this.padding.x, this.padding.y);\r\n        this.setStyle({ backgroundColor: \"#202529\", color: \"#ffffff\", wordWrap: {width: 150}});\r\n        scene.add.existing(this);\r\n        this.visible = false;\r\n        this.setDepth(2);\r\n    }\r\n\r\n    showTooltip() {\r\n        this.visible = true;\r\n    }\r\n\r\n    removeTooltip() {\r\n        this.visible = false;\r\n    }\r\n    \r\n    setLabelCoordinates(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class DamageCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (this.effect.target == \"single\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].once(\"pointerdown\", function(pointer) {\r\n                    this.setHealth(this.getHealth() - card.effect.damage);\r\n                    this.heartText.setText(this.getHealth());\r\n\r\n                    for (let j=0; j < enemy.enemyOnScene.length; j++) {\r\n                        enemy.enemyOnScene[j].input.enabled = false;\r\n                    }\r\n                })\r\n            }\r\n        } else if (this.effect.target == \"all\") {\r\n            for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n                enemy.enemyOnScene[i].setHealth(enemy.enemyOnScene[i].getHealth() - card.effect.damage);\r\n                enemy.enemyOnScene[i].heartText.setText(enemy.enemyOnScene[i].getHealth());\r\n            }\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        return \"Damage: Inflicted damage is on the enemy's health.\";\r\n    }\r\n    \r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ComboCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    activateCard(scene) {\r\n        let card = this;\r\n        console.log(this);   \r\n    }\r\n\r\n    getLabel() {\r\n        return \"Combo: \\nAffects the next card played through amplifying the effect.\"\r\n    }\r\n    \r\n   \r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class ReloadCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // nned to account for next turn side effects\r\n    // such as losing action points next turn\r\n    activateCard(scene) {\r\n        let card = this;\r\n    }\r\n\r\n    getLabel() {\r\n        return \"AP: \\nAction Points are used when activating a card.\"\r\n    }\r\n\r\n}","import { gameOptions, enemy } from \"../../config\";\r\nimport HandCard from \"./handCard\";\r\nimport { Tooltip } from \"./toolTip\";\r\n\r\nexport default class HealingCard extends HandCard {\r\n    constructor(name, cost, cardType, effect, scene, x, y, sprite) {\r\n        super(name, cost, cardType, effect, scene, x, y, sprite);\r\n        this.tooltip = new Tooltip(scene, x+this.displayWidth, y, this.getLabel());\r\n        scene.add.existing(this);\r\n        this.cardInHand(scene);\r\n    }\r\n\r\n    cardInHand(scene) {\r\n        super.cardInHand(scene);\r\n    } \r\n\r\n    // needs to access the player's health and armour\r\n    activateCard(scene) {\r\n        let card = this;\r\n        if (card.effect.target == \"health\") {\r\n            console.log(this);\r\n        }\r\n    }\r\n\r\n    getLabel() {\r\n        if (this.effect.target == \"armour\") {\r\n            return \"Armour: \\nRemoved before health when receiving damage.\";\r\n        } else if (this.effect.target == \"health\") {\r\n            return \"Health: \\nIf this reaches zero, you die.\"\r\n        }\r\n    }    \r\n\r\n}","import { CST } from \"../CST.js\";\r\nimport Button from '../helpers/classes/button.js';\r\nimport { gameOptions, enemy} from \"../helpers/config.js\";\r\nimport Zone from \"../helpers/classes/zone.js\";\r\nimport Player from \"../helpers/classes/player.js\";\r\nimport Enemy from \"../helpers/classes/enemy.js\";\r\nimport DamageCard from \"../helpers/classes/cards/damageCard.js\";\r\nimport ComboCard from \"../helpers/classes/cards/comboCard.js\";\r\nimport ReloadCard from \"../helpers/classes/cards/reloadCard.js\";\r\nimport HealingCard from \"../helpers/classes/cards/healingCard.js\";\r\n\r\nexport class BattleScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.BATTLE\r\n        })\r\n    }\r\n\r\n    init(data) {\r\n        // data returns a list of preloaded cards\r\n        let cards = data;\r\n        // make these class variables to turn them off on click\r\n        this.endTurnButton;\r\n        this.keepCardButton;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\r\n        this.load.image(\"background\", \"./assets/background.png\");\r\n        this.load.image(\"card_holder\", \"./assets/card_holder.jpg\");\r\n        this.load.image(\"guy\", \"./assets/sprites/player_green_glasses.png\");\r\n        this.load.image(\"heart\", \"./assets/sprites/heart.png\");\r\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\r\n        this.load.image(\"discardPile\", \"./assets/sprites/discardPile.png\")\r\n        this.load.spritesheet(\"enemy\", \"./assets/sprites/enemySpritesheet.png\", {\r\n            frameWidth: enemy.spriteWidth,\r\n            frameHeight: enemy.spriteHeight\r\n        });\r\n    }\r\n\r\n    create() {\r\n        let gameWidth = this.game.config.width;\r\n        let gameHeight = this.game.config.height;\r\n\r\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\r\n        let card_bg = this.add.image(0, 0, \"card_holder\");\r\n        let bg = this.add.sprite(0, 0, \"background\");\r\n        hud_bg.setScale(2);\r\n\r\n        card_bg.setPosition(gameWidth/2, gameHeight);\r\n        card_bg.setScale(0.325);\r\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\r\n        bg.setScale(0.65);\r\n        \r\n        this.player = new Player(this, 0, 0, \"guy\");\r\n        this.player.setPosition(gameWidth/4, gameHeight/1.65);\r\n        this.player.setScale(3);\r\n\r\n        let heart = this.add.image(0, 0, \"heart\");\r\n        this.heartext = this.add.text(0,0, this.player.getHealth(), {color: \"black\", fontSize: \"30px\"});\r\n        heart.setScale(4);\r\n        this.heartext.setPosition(-18, -18);\r\n        let health = this.add.container(0, 0, [heart, this.heartext]);\r\n        health.setPosition(gameWidth/20, gameHeight/2.2);\r\n\r\n        let chamber = this.add.circle(0, 0, 30, 0xffcc00);\r\n        this.actiontext = this.add.text(0,0, this.player.getActionPoints(), {color: \"black\", fontSize: \"30px\"});\r\n        this.actiontext.setPosition(-10, -18);\r\n        let actions = this.add.container(0, 0, [chamber, this.actiontext]);\r\n        actions.setPosition(gameWidth/20, gameHeight/1.75);\r\n\r\n        // set it so a rectangular zone appear with overflow\r\n        let discardPile = this.add.sprite(-35, gameHeight, \"discardPile\").setOrigin(0, 1);\r\n        discardPile.setScale(1.5).setInteractive({useHandCursor: true});\r\n        discardPile.on('pointerdown', function (event) {\r\n            this.scene.start(CST.SCENES.DISCARD_PILE, graveYardArray);\r\n        }, this);\r\n        \r\n        // loads all the different types of cards\r\n        this.loadCards();\r\n        \r\n        this.endTurnButton = new Button(gameWidth, gameHeight/2, \"End Turn\", this, this.endTurn.bind(this, this.player, this.endTurnButton), '#202529');\r\n        this.keepCardButton = new Button(gameWidth, gameHeight/2, \"Keep Cards\", this, this.keepCard.bind(this, this.player, this.keepCardButton), '#202529');\r\n\r\n        // zone where cards can be dropped and activated\r\n        let dropZone = new Zone(this, 200, 200, 500, 500);\r\n\r\n        // spawning enemies according to spritesheet randomly\r\n        // shuffles the deck and sets up the visual for the deck cards\r\n        this.player.shuffle();\r\n        this.player.deckSetUp(this);\r\n        this.drawCard(gameOptions.startCards);\r\n\r\n        // loading in every enemy sprite\r\n        for (let i=0; i < enemy.numberOfSprites; i++) {\r\n            let enemySprite = new Enemy(this, 0, 0, 'enemy', i);\r\n            enemy.enemyList.push(enemySprite);\r\n        }\r\n        this.spawnEnemyOnScene();\r\n\r\n        // card event listeners for pointer interactions\r\n        this.input.on('dragstart', function (pointer, gameObject) {\r\n            gameObject.tooltip.removeTooltip();\r\n            this.tweens.add({\r\n                targets: gameObject,\r\n                angle: 0,\r\n                x: pointer.x,\r\n                y: pointer.y,\r\n                duration: 50\r\n            });\r\n            this.tweens.add({\r\n                targets: this.background,\r\n                alpha: 0.3,\r\n                duration: 50\r\n            });\r\n            \r\n            let index = this.player.handArray.indexOf(gameObject);\r\n            if (index !== -1) {\r\n                this.player.handArray.splice(index, 1);\r\n            }\r\n\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n\r\n        }, this);\r\n\r\n        this.input.on('drag', function(pointer, gameObject, dragX, dragY) {\r\n            gameObject.x = dragX;\r\n            gameObject.y = dragY;\r\n        });\r\n\r\n        // hover over listener\r\n        this.input.on('gameobjectover', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                let yOffSet = 50;\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    angle: 0,\r\n                    y: gameObject.startPosition.y - yOffSet,\r\n                    displayWidth: gameOptions.cardWidth * 2,\r\n                    displayHeight: gameOptions.cardHeight * 2,\r\n                    depth: 100,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.showTooltip();\r\n                gameObject.tooltip.setLabelCoordinates(gameObject.x + gameOptions.cardWidth, gameObject.y - gameOptions.cardHeight * 2 - yOffSet + 10);\r\n\r\n            }\r\n        }, this);\r\n\r\n        // hover out listener\r\n        this.input.on('gameobjectout', function(pointer, gameObject) {\r\n            if (gameObject.type === \"Sprite\" && this.player.handArray.includes(gameObject)) {\r\n                this.tweens.add({\r\n                    targets: gameObject,\r\n                    y: gameObject.startPosition.y,\r\n                    angle: gameObject.startPosition.angle,\r\n                    displayWidth: gameOptions.cardWidth,\r\n                    displayHeight: gameOptions.cardHeight,\r\n                    depth: gameObject.startPosition.depth,\r\n                    duration: 10\r\n                });\r\n                gameObject.tooltip.removeTooltip();\r\n            }\r\n       }, this);\r\n\r\n        this.input.on('dragenter', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderActiveOutline();\r\n        });\r\n\r\n        this.input.on('dragleave', function(pointer, gameObject, dropZone) {\r\n            dropZone.renderNormalOutline();\r\n        }); \r\n\r\n        this.input.on('drop', (pointer, gameObject, dropZone) => {\r\n            if (this.player.getActionPoints() >= gameObject.getCost()) {\r\n                gameObject.input.enabled = false;\r\n                gameObject.tooltip.removeTooltip();\r\n        \r\n                // setting card in the middle \r\n                gameObject.displayHeight = gameOptions.cardHeight;\r\n                gameObject.displayWidth = gameOptions.cardWidth;\r\n                gameObject.x = dropZone.x;\r\n                gameObject.y = dropZone.y + dropZone.y / 3;\r\n                \r\n                this.player.graveYardArray.push(gameObject);\r\n        \r\n                // remove the card from the scene after 500ms\r\n                setTimeout(function() { \r\n                    gameObject.activateCard(this);\r\n                    gameObject.setActive(false).setVisible(false); \r\n                }, 500);\r\n        \r\n                this.player.actionPoints = this.player.getActionPoints() - gameObject.getCost();\r\n                this.actiontext.text = this.player.getActionPoints();\r\n                dropZone.renderNormalOutline(this);\r\n        \r\n                this.cameras.main.shake(100, 0.02);\r\n            } else {\r\n                this.dragend(pointer, gameObject, false);\r\n            }\r\n        });\r\n\r\n        this.input.on(\"dragend\", this.dragend, this);\r\n    }\r\n\r\n    dragend(pointer, gameObject, dropped) {\r\n        \r\n        if (!dropped) {\r\n            this.player.handArray.push(gameObject);\r\n            gameObject.displayHeight = gameOptions.cardHeight;\r\n            gameObject.displayWidth = gameOptions.cardWidth;\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    loadCards() {\r\n        // damage cards\r\n        let cannon = new DamageCard(\"cannon\", 1, \"damage\", {damage: 3, target: \"all\"}, this, 0, 0, \"cannon\");\r\n        let grenade = new DamageCard(\"grenade\", 2, \"damage\", {damage: 6, target: \"single\"}, this, 0, 0, \"grenade\");\r\n\r\n        // combo cards\r\n        let headshot = new ComboCard(\"headshot\", 1, \"combo\", {target: \"damage\", effect: \"doubles\"}, this, 0, 0, \"headshot\");\r\n        \r\n        // reload cards\r\n        let reload = new ReloadCard(\"reload\", 0, \"reload\", {amount: 2, sideEffects: null}, this, 0, 0, \"reload\");\r\n        let overload = new ReloadCard(\"overload\", 0, \"reload\", {amount: 4, sideEffects: -1}, this, 0, 0, \"overload\");\r\n\r\n        // healing cards\r\n        let medkit = new HealingCard(\"medkit\", 1, \"healing\", {target: \"health\", amount: 3}, this, 0, 0, \"medkit\");\r\n        let kevlar = new HealingCard(\"kevlar\", 2, \"healing\", {target: \"armour\", amount: 6}, this, 0, 0, \"kevlar\");\r\n\r\n        this.player.deckArray.push(cannon);\r\n        this.player.deckArray.push(grenade);\r\n        this.player.deckArray.push(headshot)\r\n        this.player.deckArray.push(reload);\r\n        this.player.deckArray.push(overload);\r\n        this.player.deckArray.push(medkit);\r\n        this.player.deckArray.push(kevlar);\r\n    }\r\n    \r\n\r\n    // draw an amount of cards\r\n    drawCard(amountOfCards) {\r\n        for (let i=0; i < amountOfCards; i++) {\r\n            let lastCard = this.player.deckTrackerArray.pop();\r\n            lastCard.destroy();\r\n\r\n            let drawCard = this.player.deckArray.pop();\r\n            this.player.handArray.push(drawCard);\r\n            drawCard.cardInHand(this);\r\n            this.arrangeCardsInCenter(this.player.handArray);\r\n        }\r\n    }\r\n\r\n\r\n    arrangeCardsInCenter(handArray) {\r\n        // arranges for the cards to be organised around the bottom middle of the screen\r\n        let bottomOfScreen = this.game.config.height;\r\n        let screenCenterX = this.game.config.width / 2;\r\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\r\n\r\n        for (let i=0; i < handArray.length; i++) {\r\n            let card = handArray[i];\r\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\r\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\r\n\r\n            card.x = cardX;\r\n            card.y = bottomOfScreen + yDelta;\r\n            card.angle = cardAngle;\r\n            if (i > handArray.length / 2 - 1) {\r\n                yDelta += gameOptions.cardYOffset;\r\n            } else {\r\n                yDelta -= gameOptions.cardYOffset;\r\n            }\r\n\r\n            // cards remember their original coordinates for events that make the cards leave and renter the hand\r\n            card.startPosition = {\r\n                x: card.x,\r\n                y: card.y,\r\n                angle: card.angle,\r\n                depth: card.depth\r\n            }\r\n\r\n            // sets card to the right in front\r\n            card.setDepth(2);\r\n        }\r\n    }\r\n\r\n\r\n    // start keep cards and make keep cards button appear\r\n    keepCard(player) {\r\n        this.keepCardButton.visible = false;\r\n        this.endTurnButton.visible = true;\r\n        this.player.selectCardInHand(player);\r\n    }\r\n    \r\n    \r\n    // ends the player's turn\r\n    endTurn() {\r\n        this.keepCardButton.visible = true;\r\n        this.endTurnButton.visible = false;\r\n        this.player.moveCardsBackInDeck(this);\r\n        \r\n        // simulate enemies attacking\r\n        for (let i=0; i < enemy.enemyOnScene.length; i++) {\r\n            enemy.enemyOnScene[i].action(this);\r\n        }\r\n        this.heartext.text = this.player.getHealth();\r\n\r\n        // automatic drawing goes here\r\n    }\r\n    \r\n    // spawning in enemies and their life\r\n    spawnEnemyOnScene() {\r\n        let minEnemies = 1;\r\n        let maxEnemies = 2;\r\n        let numberOfEnemies = Math.floor(Math.random() * (maxEnemies - minEnemies + 1)) + minEnemies;\r\n\r\n        let spawnEnemyDistanceX = 0;\r\n        let spawnHeartDistanceY = 0;\r\n\r\n        for (let i=0; i < numberOfEnemies; i++) {\r\n            let randomEnemy = enemy.enemyList[Math.floor(Math.random() * enemy.enemyList.length)];\r\n\r\n            // For some reason, enemies spawn invisible, no clue.\r\n            randomEnemy.enemySpawn();\r\n            randomEnemy.x += spawnEnemyDistanceX;\r\n            randomEnemy.heartText.y += spawnHeartDistanceY;\r\n\r\n            spawnEnemyDistanceX += 150;\r\n            spawnHeartDistanceY += 100;\r\n            randomEnemy.setDepth(1);\r\n\r\n            enemy.enemyOnScene.push(randomEnemy);\r\n        }\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport HandCard from \"../helpers/classes/cards/handCard\";\r\nimport { BattleScene } from \"./battleScene\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"cannon\", \"./assets/cards/Cannon.png\");\r\n        this.load.image(\"grenade\", \"./assets/cards/Grenade.png\");\r\n        this.load.image(\"headshot\", \"./assets/cards/Headshot.png\");\r\n        this.load.image(\"kevlar\", \"./assets/cards/Kevlar.png\");\r\n        this.load.image(\"medkit\", \"./assets/cards/Medkit.png\");\r\n        this.load.image(\"overload\", \"./assets/cards/Overload.png\");\r\n        this.load.image(\"reload\", \"./assets/cards/Reload.png\");\r\n    }\r\n\r\n    create() {\r\n        this.scene.add(CST.SCENES.BATTLE, BattleScene, false);\r\n        this.scene.start(CST.SCENES.BATTLE);\r\n    }\r\n}","/** @type {import(\"../typings/*\")} */\r\nimport { DiscardPileScene } from \"./scenes/discardPileScene\";\r\nimport { LoadScene } from \"./scenes/loadScene\";\r\nimport {BattleScene} from \"/src/scenes/battleScene.js\";\r\n\r\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\r\n\r\nexport var config = {\r\n    type: Phaser.AUTO,\r\n    width: 1000,\r\n    height: 800,\r\n    scale: { parent: 'phaser-container', mode:Phaser.Scale.FIT, autoCenter: Phaser.Scale.CENTER_BOTH },\r\n    scene: [\r\n        LoadScene,\r\n        DiscardPileScene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}