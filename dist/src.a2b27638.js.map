{"version":3,"sources":["src/CST.js","src/helpers/font.js","src/helpers/button.js","src/scenes/BattleScene.js","src/index.js"],"names":["CST","SCENES","BATTLE","loadFont","name","url","newFont","FontFace","load","then","loaded","document","fonts","add","catch","error","Button","x","y","label","scene","callback","button","text","setOrigin","setPadding","setStyle","backgroundColor","setInteractive","useHandCursor","on","gameOptions","deck","startCards","cardWidth","cardHeight","cardDistance","cardAngle","cardYOffset","cardBackDimensions","backWidth","backHeight","handArray","deckArray","deckTrackerArray","graveYardArray","BattleScene","key","image","spritesheet","frameWidth","frameHeight","gameWidth","game","config","width","gameHeight","height","hud_bg","tileSprite","bg","sprite","setScale","setPosition","i","card","cardInHand","push","shuffle","deckSetUp","endTurn","bind","dropZone","zone","setRectangleDropZone","normalZone","activeZone","graphics","lineStyle","strokeRect","input","hitArea","pointer","gameObject","tweens","targets","angle","duration","background","alpha","index","indexOf","splice","arrangeCardsInCenter","dragX","dragY","type","includes","displayWidth","displayHeight","depth","startPosition","clear","enabled","setTimeout","destroy","cameras","main","shake","dropped","visible","setDraggable","bottomOfScreen","screenCenterX","yDelta","Math","floor","length","cardX","setDepth","cardBack","j","random","lastCard","pop","drawCard","Phaser","Scene","AUTO","Game"],"mappings":";;AICA;AADA;;AAGA;AJHO,AEAP,ADAO,AEAP,IHAaA,GAAG,ECAAG,CDAG,OCAK,CAACC,IAAI,EAAEC,GAAG,EAAE;ACAH,AEKjC,ADJA,EHAIJ,ACAA,EGIAqD,EHJIhD,EDAE,EAAE,AIIF,GHJK,AGIF,GHJK,IAAIC,QAAQ,CAACH,IAAI,EAAE,aAAa,CAAC;ACDlB,ACCM,EFCnCE,AGIA0F,EJJI9F,EIIA,EAAE4H,CHJC,CDAG,ACAFtH,EDAI,ECAA,AGIA,CAACwH,CHJC,CAACvH,EGIE,EHJE,CAAC,UAAUC,MAAM,EAAE;ACFT,ACCM,EHEnC,AIIA6C,EHJI5C,GGIC,EAAE,GHJK,AGIF,CHJGC,KAAK,CAACC,GAAG,CAACH,MAAM,CAAC;ADClC,AEJiC,ACCM,CHGtC,CCAG,AGIA+C,CHJC,CAAC,CAAC3C,GGIG,EHJE,AGIA,CHJC,EGIE,QHJQC,KAAK,EAAE;ADA7B,AEJgC,ACCM,ECQnCK,EHJI,GGIC,EAAE,CACH0B,CHLO/B,KAAK,kBGKD;AFVc,AEYjC,ADXuC,CCWtC,CHNG,CAAC,CAAC;ACLN,ADMA,AGOA,ADbuC,ICanCsC,IAAI,GAAG,IAAIyE,MAAM,CAACG,IAAI,CAAC3E,MAAM,CAAC;AFblC,ACAuC,IDElBtC,MAAM,6BAEvB,gBAAYC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAE;ACJP,EDIO;ACJP,EDK/B,IAAMC,MAAM,GAAGF,KAAK,CAACP,GAAG,CAACU,IAAI,CAACN,CAAC,EAAEC,CAAC,EAAEC,KAAK,CAAC,CACrCK,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CACjBC,UAAU,CAAC,EAAE,CAAC,CACdC,QAAQ,CAAC;ACRiB,IDQfC,eAAe,EAAE;ACRF,EDQW,CAAC,CAAC,CACvCC,cAAc,CAAC;ACTW,IDSTC,aAAa,EAAE;ACTN,EDSW,CAAC,CAAC,CACvCC,EAAE,CAAC,aAAa,EAAE;ACVQ,IDUR,OAAMT,QAAQ,EAAE;ACT/C,EDS+C,EAAC;AAC5C,CAAC;AAAA,ACRL,IAAIU,WAAW,GAAG;EACdC,IAAI,EAAE,CAAC;EACPC,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE,GAAG;EACdC,UAAU,EAAE,GAAG;EACfC,YAAY,EAAE,GAAG;EACjBC,SAAS,EAAE,CAAC;EACZC,WAAW,EAAE;AACjB,CAAC;AAED,IAAIC,kBAAkB,GAAG;EACrBC,SAAS,EAAE,GAAG;EACdC,UAAU,EAAE;AAChB,CAAC;AAED,IAAIC,SAAS;AACb,IAAIC,SAAS;AACb,IAAIC,gBAAgB;AACpB,IAAIC,cAAc;AAAC,IAENC,WAAW;EAAA;EAAA;EACpB,uBAAa;IAAA;IAAA,yBACH;MACFC,GAAG,EAAE/C,QAAG,CAACC,MAAM,CAACC;IACpB,CAAC;EACL;EAAC;IAAA;IAAA,OAED,mBAAU;MACN,IAAI,CAACM,IAAI,CAACwC,KAAK,CAAC,KAAK,EAAE,qBAAqB,CAAC;MAC7C,IAAI,CAACxC,IAAI,CAACwC,KAAK,CAAC,YAAY,EAAE,yBAAyB,CAAC;MACxD,IAAI,CAACxC,IAAI,CAACyC,WAAW,CAAC,OAAO,EAAE,kCAAkC,EAAE;QAC/DC,UAAU,EAAEnB,WAAW,CAACG,SAAS;QACjCiB,WAAW,EAAEpB,WAAW,CAACI;MAC7B,CAAC,CAAC;MACF,IAAI,CAAC3B,IAAI,CAACwC,KAAK,CAAC,UAAU,EAAE,+BAA+B,CAAC;MAC5D,IAAI,CAACxC,IAAI,CAACwC,KAAK,CAAC,OAAO,EAAE,4BAA4B,CAAC;IAC1D;EAAC;IAAA;IAAA,OAED,kBAAS;MACL,IAAII,SAAS,GAAG,IAAI,CAACC,IAAI,CAACC,MAAM,CAACC,KAAK;MACtC,IAAIC,UAAU,GAAG,IAAI,CAACH,IAAI,CAACC,MAAM,CAACG,MAAM;MAExC,IAAIC,MAAM,GAAG,IAAI,CAAC7C,GAAG,CAAC8C,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEP,SAAS,EAAEI,UAAU,EAAE,KAAK,CAAC;MACpE,IAAII,EAAE,GAAG,IAAI,CAAC/C,GAAG,CAACgD,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;MAC5CH,MAAM,CAACI,QAAQ,CAAC,CAAC,CAAC;MAClBF,EAAE,CAACG,WAAW,CAACX,SAAS,GAAC,CAAC,EAAEI,UAAU,GAAC,GAAG,CAAC;MAC3CI,EAAE,CAACE,QAAQ,CAAC,IAAI,CAAC;MAEjBnB,SAAS,GAAG,EAAE;MACdC,gBAAgB,GAAG,EAAE;MACrBF,SAAS,GAAG,EAAE;MACdG,cAAc,GAAG,EAAE;MAEnB,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjC,WAAW,CAACE,UAAU,EAAE+B,CAAC,EAAG,EAAE;QAC9C;QACA,IAAIC,KAAI,GAAG,IAAI,CAACpD,GAAG,CAACgD,MAAM,CAAC,IAAI,CAACR,IAAI,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC,GAAGS,CAAC,GAAGjC,WAAW,CAACK,YAAY,EAAE,IAAI,CAACiB,IAAI,CAACC,MAAM,CAACG,MAAM,EAAE,OAAO,EAAEO,CAAC,CAAC;QAC1H,IAAI,CAACE,UAAU,CAACD,KAAI,CAAC;QACrBtB,SAAS,CAACwB,IAAI,CAACF,KAAI,CAAC;MACxB;MAEA,IAAIA,IAAI,GAAG,IAAI,CAACpD,GAAG,CAACgD,MAAM,CAAC,IAAI,CAACR,IAAI,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC,GAAGxB,WAAW,CAACK,YAAY,EAChF,IAAI,CAACiB,IAAI,CAACC,MAAM,CAACG,MAAM,EAAE,OAAO,CAAC;MACjC,IAAI,CAACS,UAAU,CAACD,IAAI,CAAC;MACrBtB,SAAS,CAACwB,IAAI,CAACF,IAAI,CAAC;MAEpB,IAAI,CAACG,OAAO,EAAE;MACd,IAAI,CAACC,SAAS,EAAE;MAEhB,IAAM/C,MAAM,GAAG,IAAIN,eAAM,CAAC,IAAI,CAACqC,IAAI,CAACC,MAAM,CAACC,KAAK,EAAE,IAAI,CAACF,IAAI,CAACC,MAAM,CAACG,MAAM,GAAC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MAEvH,IAAIC,QAAQ,GAAG,IAAI,CAAC3D,GAAG,CAAC4D,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC;MAC/E,IAAIC,UAAU,GAAG,QAAQ,CAAC,CAAC;MAC3B,IAAIC,UAAU,GAAG,QAAQ,CAAC,CAAC;;MAE3B,IAAIC,QAAQ,GAAG,IAAI,CAAChE,GAAG,CAACgE,QAAQ,EAAE;MAClCA,QAAQ,CAACC,SAAS,CAAC,CAAC,EAAEH,UAAU,CAAC;MACjCE,QAAQ,CAACE,UAAU,CAACP,QAAQ,CAACvD,CAAC,GAAGuD,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC1B,KAAK,GAAG,CAAC,EAAEiB,QAAQ,CAACtD,CAAC,GAAGsD,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAACxB,MAAM,GAAG,CAAC,EAAEe,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC1B,KAAK,EAAEiB,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAACxB,MAAM,CAAC;MAE/K,IAAI,CAACuB,KAAK,CAAClD,EAAE,CAAC,WAAW,EAAE,UAAUoD,OAAO,EAAEC,UAAU,EAAE;QACtD,IAAI,CAACC,MAAM,CAACvE,GAAG,CAAC;UACZwE,OAAO,EAAEF,UAAU;UACnBG,KAAK,EAAE,CAAC;UACRrE,CAAC,EAAEiE,OAAO,CAACjE,CAAC;UACZC,CAAC,EAAEgE,OAAO,CAAChE,CAAC;UACZqE,QAAQ,EAAE;QACd,CAAC,CAAC;QACF,IAAI,CAACH,MAAM,CAACvE,GAAG,CAAC;UACZwE,OAAO,EAAE,IAAI,CAACG,UAAU;UACxBC,KAAK,EAAE,GAAG;UACVF,QAAQ,EAAE;QACd,CAAC,CAAC;QAEF,IAAIG,KAAK,GAAGhD,SAAS,CAACiD,OAAO,CAACR,UAAU,CAAC;QACzC,IAAIO,KAAK,KAAK,CAAC,CAAC,EAAE;UACdhD,SAAS,CAACkD,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;QAC9B;QAEA,IAAI,CAACG,oBAAoB,CAACnD,SAAS,CAAC;MAExC,CAAC,EAAE,IAAI,CAAC;MAER,IAAI,CAACsC,KAAK,CAAClD,EAAE,CAAC,MAAM,EAAE,UAASoD,OAAO,EAAEC,UAAU,EAAEW,KAAK,EAAEC,KAAK,EAAE;QAC9DZ,UAAU,CAAClE,CAAC,GAAG6E,KAAK;QACpBX,UAAU,CAACjE,CAAC,GAAG6E,KAAK;MACxB,CAAC,CAAC;;MAEF;MACA,IAAI,CAACf,KAAK,CAAClD,EAAE,CAAC,gBAAgB,EAAE,UAASoD,OAAO,EAAEC,UAAU,EAAE;QAC1D,IAAIA,UAAU,CAACa,IAAI,KAAK,QAAQ,IAAItD,SAAS,CAACuD,QAAQ,CAACd,UAAU,CAAC,EAAE;UAChE,IAAI,CAACC,MAAM,CAACvE,GAAG,CAAC;YACZwE,OAAO,EAAEF,UAAU;YACnBG,KAAK,EAAE,CAAC;YACRY,YAAY,EAAEnE,WAAW,CAACG,SAAS;YACnCiE,aAAa,EAAEpE,WAAW,CAACI,UAAU;YACrCiE,KAAK,EAAE,GAAG;YACVb,QAAQ,EAAE;UACd,CAAC,CAAC;UACFJ,UAAU,CAACkB,aAAa,GAAG;YACvBf,KAAK,EAAEH,UAAU,CAACG,KAAK;YACvBc,KAAK,EAAEjB,UAAU,CAACiB;UACtB,CAAC;QACL;MACJ,CAAC,EAAE,IAAI,CAAC;;MAER;MACA,IAAI,CAACpB,KAAK,CAAClD,EAAE,CAAC,eAAe,EAAE,UAASoD,OAAO,EAAEC,UAAU,EAAE;QACzD,IAAIA,UAAU,CAACa,IAAI,KAAK,QAAQ,IAAItD,SAAS,CAACuD,QAAQ,CAACd,UAAU,CAAC,EAAE;UAChE,IAAI,CAACC,MAAM,CAACvE,GAAG,CAAC;YACZwE,OAAO,EAAEF,UAAU;YACnBG,KAAK,EAAEH,UAAU,CAACkB,aAAa,CAACf,KAAK;YACrCY,YAAY,EAAEnE,WAAW,CAACG,SAAS,GAAC,CAAC;YACrCiE,aAAa,EAAEpE,WAAW,CAACI,UAAU,GAAC,CAAC;YACvCiE,KAAK,EAAEjB,UAAU,CAACkB,aAAa,CAACD,KAAK;YACrCb,QAAQ,EAAE;UACd,CAAC,CAAC;QACN;MACL,CAAC,EAAE,IAAI,CAAC;MAEP,IAAI,CAACP,KAAK,CAAClD,EAAE,CAAC,WAAW,EAAE,UAASoD,OAAO,EAAEC,UAAU,EAAEX,QAAQ,EAAE;QAC/DK,QAAQ,CAACyB,KAAK,EAAE;QAChBzB,QAAQ,CAACC,SAAS,CAAC,CAAC,EAAEF,UAAU,CAAC;QACjCC,QAAQ,CAACE,UAAU,CAACP,QAAQ,CAACvD,CAAC,GAAGuD,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC1B,KAAK,GAAG,CAAC,EAAEiB,QAAQ,CAACtD,CAAC,GAAGsD,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAACxB,MAAM,GAAG,CAAC,EAAEe,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC1B,KAAK,EAAEiB,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAACxB,MAAM,CAAC;MACnL,CAAC,CAAC;MAEF,IAAI,CAACuB,KAAK,CAAClD,EAAE,CAAC,WAAW,EAAE,UAASoD,OAAO,EAAEC,UAAU,EAAEX,QAAQ,EAAE;QAC/DK,QAAQ,CAACyB,KAAK,EAAE;QAChBzB,QAAQ,CAACC,SAAS,CAAC,CAAC,EAAEH,UAAU,CAAC;QACjCE,QAAQ,CAACE,UAAU,CAACP,QAAQ,CAACvD,CAAC,GAAGuD,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC1B,KAAK,GAAG,CAAC,EAAEiB,QAAQ,CAACtD,CAAC,GAAGsD,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAACxB,MAAM,GAAG,CAAC,EAAEe,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC1B,KAAK,EAAEiB,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAACxB,MAAM,CAAC;MACnL,CAAC,CAAC;MAEF,IAAI,CAACuB,KAAK,CAAClD,EAAE,CAAC,MAAM,EAAE,UAASoD,OAAO,EAAEC,UAAU,EAAEX,QAAQ,EAAE;QAC1DW,UAAU,CAACH,KAAK,CAACuB,OAAO,GAAG,KAAK;;QAEhC;QACApB,UAAU,CAACe,YAAY,GAAGnE,WAAW,CAACG,SAAS,GAAG,CAAC;QACnDiD,UAAU,CAACgB,aAAa,GAAGpE,WAAW,CAACI,UAAU,GAAG,CAAC;QACrDgD,UAAU,CAAClE,CAAC,GAAGuD,QAAQ,CAACvD,CAAC;QACzBkE,UAAU,CAACjE,CAAC,GAAGsD,QAAQ,CAACtD,CAAC,GAAGsD,QAAQ,CAACtD,CAAC,GAAG,CAAC;QAE1C2B,cAAc,CAACsB,IAAI,CAACgB,UAAU,CAAC;;QAE/B;QACAqB,UAAU,CAAC,YAAW;UAAErB,UAAU,CAACsB,OAAO,EAAE;QAAE,CAAC,EAAE,GAAG,CAAC;QAErD5B,QAAQ,CAACyB,KAAK,EAAE;QAChBzB,QAAQ,CAACC,SAAS,CAAC,CAAC,EAAEH,UAAU,CAAC;QACjCE,QAAQ,CAACE,UAAU,CAACP,QAAQ,CAACvD,CAAC,GAAGuD,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC1B,KAAK,GAAG,CAAC,EAAEiB,QAAQ,CAACtD,CAAC,GAAGsD,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAACxB,MAAM,GAAG,CAAC,EAAEe,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC1B,KAAK,EAAEiB,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAACxB,MAAM,CAAC;QAE/K,IAAI,CAACiD,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC;MACtC,CAAC,CAAC;MAEF,IAAI,CAAC5B,KAAK,CAAClD,EAAE,CAAC,SAAS,EAAE,UAASoD,OAAO,EAAEC,UAAU,EAAE0B,OAAO,EAAE;QAE5D,IAAI,CAACA,OAAO,EAAE;UACVnE,SAAS,CAACyB,IAAI,CAACgB,UAAU,CAAC;UAC1BA,UAAU,CAACgB,aAAa,GAAGpE,WAAW,CAACI,UAAU,GAAG,CAAC;UACrDgD,UAAU,CAACe,YAAY,GAAGnE,WAAW,CAACG,SAAS,GAAG,CAAC;UACnD,IAAI,CAAC2D,oBAAoB,CAACnD,SAAS,CAAC;QACxC;MACJ,CAAC,EAAE,IAAI,CAAC;IACZ;EAAC;IAAA;IAAA,OAED,oBAAWuB,IAAI,EAAE;MACbA,IAAI,CAAC6C,OAAO,GAAG,CAAC7C,IAAI,CAAC6C,OAAO;MAC5B7C,IAAI,CAACrC,cAAc,EAAE;MACrB,IAAI,CAACoD,KAAK,CAAC+B,YAAY,CAAC9C,IAAI,CAAC;MAC7BA,IAAI,CAACzC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;;MAEtB;MACAyC,IAAI,CAACiC,YAAY,GAAGnE,WAAW,CAACG,SAAS,GAAG,CAAC;MAC7C+B,IAAI,CAACkC,aAAa,GAAGpE,WAAW,CAACI,UAAU,GAAG,CAAC;IACnD;EAAC;IAAA;IAAA,OAED,8BAAqBO,SAAS,EAAE;MAC5B,IAAIsE,cAAc,GAAG,IAAI,CAAC3D,IAAI,CAACC,MAAM,CAACG,MAAM;MAC5C,IAAIwD,aAAa,GAAG,IAAI,CAAC5D,IAAI,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC;MAC9C,IAAI2D,MAAM,GAAGnF,WAAW,CAACO,WAAW,GAAI6E,IAAI,CAACC,KAAK,CAAC1E,SAAS,CAAC2E,MAAM,GAAG,CAAC,CAAE;MAEzE,KAAK,IAAIrD,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGtB,SAAS,CAAC2E,MAAM,EAAErD,CAAC,EAAE,EAAE;QACrC,IAAIC,IAAI,GAAGvB,SAAS,CAACsB,CAAC,CAAC;QACvB,IAAIsD,KAAK,GAAGL,aAAa,GAAG,CAACjD,CAAC,GAAG,CAACtB,SAAS,CAAC2E,MAAM,GAAG,CAAC,IAAI,CAAC,IAAItF,WAAW,CAACK,YAAY;QACvF,IAAIC,SAAS,GAAG,CAAC2B,CAAC,GAAG,CAACtB,SAAS,CAAC2E,MAAM,GAAG,CAAC,IAAI,CAAC,IAAItF,WAAW,CAACM,SAAS;QAExE4B,IAAI,CAAChD,CAAC,GAAGqG,KAAK;QACdrD,IAAI,CAAC/C,CAAC,GAAG8F,cAAc,GAAGE,MAAM;QAChCjD,IAAI,CAACqB,KAAK,GAAGjD,SAAS;QACtB,IAAI2B,CAAC,GAAGtB,SAAS,CAAC2E,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE;UAC9BH,MAAM,IAAInF,WAAW,CAACO,WAAW;QACrC,CAAC,MAAM;UACH4E,MAAM,IAAInF,WAAW,CAACO,WAAW;QACrC;;QAEA;QACA2B,IAAI,CAACsD,QAAQ,CAACvD,CAAC,CAAC;MACpB;IACJ;EAAC;IAAA;IAAA,OAED,qBAAY;MACR,IAAI/C,CAAC,GAAG,IAAI,CAACoC,IAAI,CAACC,MAAM,CAACC,KAAK,GAAG,GAAG;MACpC,IAAIrC,CAAC,GAAG,IAAI,CAACmC,IAAI,CAACC,MAAM,CAACG,MAAM,GAAG,EAAE;MACpC,KAAK,IAAIO,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGrB,SAAS,CAAC0E,MAAM,EAAErD,CAAC,EAAE,EAAE;QACrC,IAAIwD,QAAQ,GAAG,IAAI,CAAC3G,GAAG,CAACgD,MAAM,CAAC5C,CAAC,EAChCC,CAAC,EAAE,UAAU,CAAC;QACdsG,QAAQ,CAAChG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;QAC1BgG,QAAQ,CAACtB,YAAY,GAAG3D,kBAAkB,CAACC,SAAS,GAAG,CAAC;QACxDgF,QAAQ,CAACrB,aAAa,GAAG5D,kBAAkB,CAACE,UAAU,GAAG,CAAC;QAC1D+E,QAAQ,CAAC5F,cAAc,EAAE;QAEzBgB,gBAAgB,CAACuB,IAAI,CAACqD,QAAQ,CAAC;QAC/BvG,CAAC,IAAI,CAAC;MACV;IACJ;;IAEA;EAAA;IAAA;IAAA,OACA,mBAAU;MACN,KAAK,IAAI+C,CAAC,GAAGrB,SAAS,CAAC0E,MAAM,GAAG,CAAC,EAAErD,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3C,IAAIyD,CAAC,GAAGN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACO,MAAM,EAAE,IAAI1D,CAAC,GAAC,CAAC,CAAC,CAAC;QAAC,WACX,CAACrB,SAAS,CAAC8E,CAAC,CAAC,EAAE9E,SAAS,CAACqB,CAAC,CAAC,CAAC;QAA1DrB,SAAS,CAACqB,CAAC,CAAC;QAAErB,SAAS,CAAC8E,CAAC,CAAC;MAC/B;IACJ;;IAEA;EAAA;IAAA;IAAA,OACA,mBAAU;MACN,IAAIE,QAAQ,GAAG/E,gBAAgB,CAACgF,GAAG,EAAE;MACrCD,QAAQ,CAAClB,OAAO,EAAE;MAElB,IAAIoB,QAAQ,GAAGlF,SAAS,CAACiF,GAAG,EAAE;MAC9BlF,SAAS,CAACyB,IAAI,CAAC0D,QAAQ,CAAC;MACxB,IAAI,CAAC3D,UAAU,CAAC2D,QAAQ,CAAC;MACzB,IAAI,CAAChC,oBAAoB,CAACnD,SAAS,CAAC;IAExC;EAAC;EAAA;AAAA,EAvO4BoF,MAAM,CAACC,KAAK;AAAA","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const CST = {\n    SCENES: {\n        BATTLE: \"BATTLE\"\n    }\n}","export function loadFont(name, url) {\n    var newFont = new FontFace(name, 'url(${url})');\n    newFont.load().then(function (loaded) {\n        document.fonts.add(loaded);\n    }).catch(function (error) {\n        return error;\n    });\n}","import { loadFont } from \"./font\"\n// loadFont(\"font1\", \"./assets/PixelboyFont.ttf\");\n\nexport default class Button {\n\n    constructor(x, y, label, scene, callback) {\n        const button = scene.add.text(x, y, label)\n            .setOrigin(0.5, 1)\n            .setPadding(15)\n            .setStyle({ backgroundColor: '#202529'})\n            .setInteractive({ useHandCursor: true })\n            .on('pointerdown', () => callback())\n    }\n}\n","import { CST } from \"../CST.js\";\nimport Button from '../helpers/button';\n// https://medium.com/@leferreyra/first-blog-building-an-interactive-card-fan-with-css-c79c9cd87a14\n\nlet gameOptions = {\n    deck: 6,\n    startCards: 5,\n    cardWidth: 260,\n    cardHeight: 410,\n    cardDistance: 100,\n    cardAngle: 3,\n    cardYOffset: 10\n}\n\nlet cardBackDimensions = {\n    backWidth: 130,\n    backHeight: 205\n}\n\nlet handArray;\nlet deckArray;\nlet deckTrackerArray;\nlet graveYardArray;\n\nexport class BattleScene extends Phaser.Scene {\n    constructor(){\n        super({\n            key: CST.SCENES.BATTLE\n        })\n    }\n\n    preload() {\n        this.load.image(\"HUD\", \"./assets/hud_bg.png\");\n        this.load.image(\"background\", \"./assets/background.png\");\n        this.load.spritesheet(\"cards\", \"./assets/sprites/spritesheet.png\", {\n            frameWidth: gameOptions.cardWidth,\n            frameHeight: gameOptions.cardHeight\n        });\n        this.load.image(\"cardBack\", \"./assets/sprites/cardBack.png\");\n        this.load.image(\"sword\", \"./assets/sprites/sword.png\");\n    }\n\n    create() {\n        let gameWidth = this.game.config.width;\n        let gameHeight = this.game.config.height;\n\n        let hud_bg = this.add.tileSprite(0, 0, gameWidth, gameHeight, \"HUD\");\n        let bg = this.add.sprite(0, 0, \"background\");\n        hud_bg.setScale(2);\n        bg.setPosition(gameWidth/2, gameHeight/2.6);\n        bg.setScale(0.65);\n        \n        deckArray = [];\n        deckTrackerArray = [];\n        handArray = [];\n        graveYardArray = [];\n\n        for (let i = 0; i < gameOptions.startCards; i ++) {\n            // creates cards from spritesheet and makes them draggable\n            let card = this.add.sprite(this.game.config.width / 2 - i * gameOptions.cardDistance, this.game.config.height, 'cards', i);\n            this.cardInHand(card);\n            deckArray.push(card);\n        }\n\n        let card = this.add.sprite(this.game.config.width / 2 - gameOptions.cardDistance,\n        this.game.config.height, 'sword');\n        this.cardInHand(card);\n        deckArray.push(card);\n\n        this.shuffle();\n        this.deckSetUp();\n\n        const button = new Button(this.game.config.width, this.game.config.height/2, 'End Turn', this, this.endTurn.bind(this));\n\n        let dropZone = this.add.zone(500, 300, 300, 300).setRectangleDropZone(300, 300);\n        let normalZone = 0xffff00; // yellow\n        let activeZone = 0x00ffff; // lightblue / turquoise \n        \n        let graphics = this.add.graphics();\n        graphics.lineStyle(2, normalZone);\n        graphics.strokeRect(dropZone.x - dropZone.input.hitArea.width / 2, dropZone.y - dropZone.input.hitArea.height / 2, dropZone.input.hitArea.width, dropZone.input.hitArea.height);\n\n        this.input.on('dragstart', function (pointer, gameObject) {\n            this.tweens.add({\n                targets: gameObject,\n                angle: 0,\n                x: pointer.x,\n                y: pointer.y,\n                duration: 50\n            });\n            this.tweens.add({\n                targets: this.background,\n                alpha: 0.3,\n                duration: 50\n            });\n            \n            let index = handArray.indexOf(gameObject);\n            if (index !== -1) {\n                handArray.splice(index, 1);\n            }\n\n            this.arrangeCardsInCenter(handArray);\n\n        }, this);\n\n        this.input.on('drag', function(pointer, gameObject, dragX, dragY) {\n            gameObject.x = dragX;\n            gameObject.y = dragY;\n        });\n\n        // hover over listener\n        this.input.on('gameobjectover', function(pointer, gameObject) {\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\n                this.tweens.add({\n                    targets: gameObject,\n                    angle: 0,\n                    displayWidth: gameOptions.cardWidth,\n                    displayHeight: gameOptions.cardHeight,\n                    depth: 100,\n                    duration: 50\n                });\n                gameObject.startPosition = {\n                    angle: gameObject.angle,\n                    depth: gameObject.depth\n                }\n            }\n        }, this);\n\n        // hover out listener\n        this.input.on('gameobjectout', function(pointer, gameObject) {\n            if (gameObject.type === \"Sprite\" && handArray.includes(gameObject)) {\n                this.tweens.add({\n                    targets: gameObject,\n                    angle: gameObject.startPosition.angle,\n                    displayWidth: gameOptions.cardWidth/2,\n                    displayHeight: gameOptions.cardHeight/2,\n                    depth: gameObject.startPosition.depth,\n                    duration: 50,\n                });\n            }\n       }, this);\n\n        this.input.on('dragenter', function(pointer, gameObject, dropZone) {\n            graphics.clear();\n            graphics.lineStyle(2, activeZone);\n            graphics.strokeRect(dropZone.x - dropZone.input.hitArea.width / 2, dropZone.y - dropZone.input.hitArea.height / 2, dropZone.input.hitArea.width, dropZone.input.hitArea.height);\n        });\n\n        this.input.on('dragleave', function(pointer, gameObject, dropZone) {\n            graphics.clear();\n            graphics.lineStyle(2, normalZone);\n            graphics.strokeRect(dropZone.x - dropZone.input.hitArea.width / 2, dropZone.y - dropZone.input.hitArea.height / 2, dropZone.input.hitArea.width, dropZone.input.hitArea.height);\n        }); \n\n        this.input.on('drop', function(pointer, gameObject, dropZone) {\n            gameObject.input.enabled = false;\n\n            // setting card in the middle \n            gameObject.displayWidth = gameOptions.cardWidth / 2;\n            gameObject.displayHeight = gameOptions.cardHeight / 2;\n            gameObject.x = dropZone.x;\n            gameObject.y = dropZone.y + dropZone.y / 3;\n            \n            graveYardArray.push(gameObject);\n\n            // remove the card from the scene after 500ms\n            setTimeout(function() { gameObject.destroy(); }, 500);\n\n            graphics.clear();\n            graphics.lineStyle(2, normalZone);\n            graphics.strokeRect(dropZone.x - dropZone.input.hitArea.width / 2, dropZone.y - dropZone.input.hitArea.height / 2, dropZone.input.hitArea.width, dropZone.input.hitArea.height);\n\n            this.cameras.main.shake(100, 0.02);\n        });\n\n        this.input.on(\"dragend\", function(pointer, gameObject, dropped) {\n        \n            if (!dropped) {\n                handArray.push(gameObject);\n                gameObject.displayHeight = gameOptions.cardHeight / 2;\n                gameObject.displayWidth = gameOptions.cardWidth / 2;\n                this.arrangeCardsInCenter(handArray);\n            }\n        }, this);\n    }\n\n    cardInHand(card) {\n        card.visible = !card.visible;\n        card.setInteractive();\n        this.input.setDraggable(card);\n        card.setOrigin(0.5, 1);\n\n        // Minimises the cards initial display size\n        card.displayWidth = gameOptions.cardWidth / 2;\n        card.displayHeight = gameOptions.cardHeight / 2 ;\n    }\n\n    arrangeCardsInCenter(handArray) {\n        let bottomOfScreen = this.game.config.height;\n        let screenCenterX = this.game.config.width / 2;\n        let yDelta = gameOptions.cardYOffset * (Math.floor(handArray.length / 2));\n\n        for (let i=0; i < handArray.length; i++) {\n            let card = handArray[i];\n            let cardX = screenCenterX + (i - (handArray.length - 1) / 2) * gameOptions.cardDistance;\n            let cardAngle = (i - (handArray.length - 1) / 2) * gameOptions.cardAngle;\n\n            card.x = cardX;\n            card.y = bottomOfScreen + yDelta;\n            card.angle = cardAngle;\n            if (i > handArray.length / 2 - 1) {\n                yDelta += gameOptions.cardYOffset;\n            } else {\n                yDelta -= gameOptions.cardYOffset;\n            }\n\n            // sets card to the right in front\n            card.setDepth(i);\n        }\n    }\n\n    deckSetUp() {\n        let x = this.game.config.width - 200;\n        let y = this.game.config.height - 50;\n        for (let i=0; i < deckArray.length; i++) {\n            let cardBack = this.add.sprite(x,\n            y, 'cardBack');\n            cardBack.setOrigin(0.5, 1);\n            cardBack.displayWidth = cardBackDimensions.backWidth / 2;\n            cardBack.displayHeight = cardBackDimensions.backHeight / 2;\n            cardBack.setInteractive();\n            \n            deckTrackerArray.push(cardBack);\n            x += 4;\n        }\n    }\n\n    // implementing Durstenfeld shffle, an optimised version of Fisher-Yates\n    shuffle() {\n        for (let i = deckArray.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i+1));\n            [deckArray[i], deckArray[j]] = [deckArray[j], deckArray[i]]\n        }\n    }\n\n    // simulate a drawing feature\n    endTurn() {\n        let lastCard = deckTrackerArray.pop();\n        lastCard.destroy();\n\n        let drawCard = deckArray.pop();\n        handArray.push(drawCard);\n        this.cardInHand(drawCard);\n        this.arrangeCardsInCenter(handArray);\n\n    }\n}","/** @type {import(\"../typings/*\")} */\nimport {BattleScene} from \"/src/scenes/BattleScene.js\";\n\n// Fading animation - https://labs.phaser.io/edit.html?src=src/display/alpha/tween%20alpha.js&v=3.55.2\n\nvar config = {\n    type: Phaser.AUTO,\n    width: 850,\n    height: 800,\n    scene: [\n        BattleScene\n    ]\n};\n\nlet game = new Phaser.Game(config);\n\n"]}